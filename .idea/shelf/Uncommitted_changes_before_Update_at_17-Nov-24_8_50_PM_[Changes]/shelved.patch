Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/UserEntity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto_moviles.uvg.edu.gt.data.local.entity\r\n\r\nimport androidx.room.Entity\r\nimport androidx.room.PrimaryKey\r\nimport kotlinx.serialization.Serializable\r\n\r\n@Entity(tableName = \"users\")\r\n@Serializable\r\ndata class UserEntity(\r\n    @PrimaryKey val id: String,\r\n    val username: String,\r\n    val email: String,\r\n    val password: String\r\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/UserEntity.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/UserEntity.kt
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/UserEntity.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/UserEntity.kt	(date 1731893735640)
@@ -3,6 +3,7 @@
 import androidx.room.Entity
 import androidx.room.PrimaryKey
 import kotlinx.serialization.Serializable
+import proyecto_moviles.uvg.edu.gt.data.model.User
 
 @Entity(tableName = "users")
 @Serializable
@@ -11,4 +12,13 @@
     val username: String,
     val email: String,
     val password: String
-)
\ No newline at end of file
+)
+
+fun UserEntity.mapToUserModel(): User {
+    return User(
+        id = id,
+        name = username,
+        email = email,
+        password = password,
+    )
+}
\ No newline at end of file
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/AppDatabase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto_moviles.uvg.edu.gt.data.local.entity\r\n\r\nimport androidx.room.Database\r\nimport androidx.room.RoomDatabase\r\nimport proyecto_moviles.uvg.edu.gt.data.local.dao.UserDao\r\n\r\n\r\n@Database(\r\n    entities = [UserEntity::class],\r\n    version = 1\r\n)\r\nabstract class AppDatabase : RoomDatabase() {\r\n    abstract fun userDao(): UserDao\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/AppDatabase.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/AppDatabase.kt
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/AppDatabase.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/AppDatabase.kt	(date 1731547824136)
@@ -6,7 +6,7 @@
 
 
 @Database(
-    entities = [UserEntity::class],
+    entities = [UserEntity::class], [TaskEntity::class],
     version = 1
 )
 abstract class AppDatabase : RoomDatabase() {
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto_moviles.uvg.edu.gt.presentacion.Inicio\r\n\r\nimport proyecto_moviles.uvg.edu.gt.data.model.User\r\n\r\ndata class StartState(\r\n    val data: List<User> = emptyList(),\r\n    val isLoading: Boolean = true,\r\n    val isLoggedIn: Boolean = false,\r\n    val isSignedUp: Boolean = false,\r\n    val isError: Boolean = false,\r\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioState.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioState.kt
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioState.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioState.kt	(date 1731888809103)
@@ -3,7 +3,7 @@
 import proyecto_moviles.uvg.edu.gt.data.model.User
 
 data class StartState(
-    val data: List<User> = emptyList(),
+//    val data: List<User> = emptyList(),
     val isLoading: Boolean = true,
     val isLoggedIn: Boolean = false,
     val isSignedUp: Boolean = false,
Index: .gradle/8.7/dependencies-accessors/18401a5638da8f505cc671a011d7cb4f4f5c7f09/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java
===================================================================
diff --git a/.gradle/8.7/dependencies-accessors/18401a5638da8f505cc671a011d7cb4f4f5c7f09/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java b/.gradle/8.7/dependencies-accessors/18401a5638da8f505cc671a011d7cb4f4f5c7f09/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java
deleted file mode 100644
--- a/.gradle/8.7/dependencies-accessors/18401a5638da8f505cc671a011d7cb4f4f5c7f09/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,1310 +0,0 @@
-package org.gradle.accessors.dm;
-
-import org.gradle.api.NonNullApi;
-import org.gradle.api.artifacts.MinimalExternalModuleDependency;
-import org.gradle.plugin.use.PluginDependency;
-import org.gradle.api.artifacts.ExternalModuleDependencyBundle;
-import org.gradle.api.artifacts.MutableVersionConstraint;
-import org.gradle.api.provider.Provider;
-import org.gradle.api.model.ObjectFactory;
-import org.gradle.api.provider.ProviderFactory;
-import org.gradle.api.internal.catalog.AbstractExternalDependencyFactory;
-import org.gradle.api.internal.catalog.DefaultVersionCatalog;
-import java.util.Map;
-import org.gradle.api.internal.attributes.ImmutableAttributesFactory;
-import org.gradle.api.internal.artifacts.dsl.CapabilityNotationParser;
-import javax.inject.Inject;
-
-/**
- * A catalog of dependencies accessible via the {@code libs} extension.
- */
-@NonNullApi
-public class LibrariesForLibsInPluginsBlock extends AbstractExternalDependencyFactory {
-
-    private final AbstractExternalDependencyFactory owner = this;
-    private final AndroidxLibraryAccessors laccForAndroidxLibraryAccessors = new AndroidxLibraryAccessors(owner);
-    private final CoilLibraryAccessors laccForCoilLibraryAccessors = new CoilLibraryAccessors(owner);
-    private final KotlinxLibraryAccessors laccForKotlinxLibraryAccessors = new KotlinxLibraryAccessors(owner);
-    private final KtorLibraryAccessors laccForKtorLibraryAccessors = new KtorLibraryAccessors(owner);
-    private final VersionAccessors vaccForVersionAccessors = new VersionAccessors(providers, config);
-    private final BundleAccessors baccForBundleAccessors = new BundleAccessors(objects, providers, config, attributesFactory, capabilityNotationParser);
-    private final PluginAccessors paccForPluginAccessors = new PluginAccessors(providers, config);
-
-    @Inject
-    public LibrariesForLibsInPluginsBlock(DefaultVersionCatalog config, ProviderFactory providers, ObjectFactory objects, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) {
-        super(config, providers, objects, attributesFactory, capabilityNotationParser);
-    }
-
-    /**
-     * Dependency provider for <b>junit</b> with <b>junit:junit</b> coordinates and
-     * with version reference <b>junit</b>
-     * <p>
-     * This dependency was declared in catalog libs.versions.toml
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public Provider<MinimalExternalModuleDependency> getJunit() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return create("junit");
-    }
-
-    /**
-     * Group of libraries at <b>androidx</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public AndroidxLibraryAccessors getAndroidx() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForAndroidxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>coil</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public CoilLibraryAccessors getCoil() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForCoilLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>kotlinx</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public KotlinxLibraryAccessors getKotlinx() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForKotlinxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>ktor</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public KtorLibraryAccessors getKtor() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForKtorLibraryAccessors;
-    }
-
-    /**
-     * Group of versions at <b>versions</b>
-     */
-    public VersionAccessors getVersions() {
-        return vaccForVersionAccessors;
-    }
-
-    /**
-     * Group of bundles at <b>bundles</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public BundleAccessors getBundles() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return baccForBundleAccessors;
-    }
-
-    /**
-     * Group of plugins at <b>plugins</b>
-     */
-    public PluginAccessors getPlugins() {
-        return paccForPluginAccessors;
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxActivityLibraryAccessors laccForAndroidxActivityLibraryAccessors = new AndroidxActivityLibraryAccessors(owner);
-        private final AndroidxComposeLibraryAccessors laccForAndroidxComposeLibraryAccessors = new AndroidxComposeLibraryAccessors(owner);
-        private final AndroidxCoreLibraryAccessors laccForAndroidxCoreLibraryAccessors = new AndroidxCoreLibraryAccessors(owner);
-        private final AndroidxDatastoreLibraryAccessors laccForAndroidxDatastoreLibraryAccessors = new AndroidxDatastoreLibraryAccessors(owner);
-        private final AndroidxEspressoLibraryAccessors laccForAndroidxEspressoLibraryAccessors = new AndroidxEspressoLibraryAccessors(owner);
-        private final AndroidxLifecycleLibraryAccessors laccForAndroidxLifecycleLibraryAccessors = new AndroidxLifecycleLibraryAccessors(owner);
-        private final AndroidxRoomLibraryAccessors laccForAndroidxRoomLibraryAccessors = new AndroidxRoomLibraryAccessors(owner);
-        private final AndroidxUiLibraryAccessors laccForAndroidxUiLibraryAccessors = new AndroidxUiLibraryAccessors(owner);
-
-        public AndroidxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>appcompat</b> with <b>androidx.appcompat:appcompat</b> coordinates and
-         * with version reference <b>appcompat</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getAppcompat() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.appcompat");
-        }
-
-        /**
-         * Dependency provider for <b>cardview</b> with <b>androidx.cardview:cardview</b> coordinates and
-         * with version reference <b>cardview</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCardview() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.cardview");
-        }
-
-        /**
-         * Dependency provider for <b>junit</b> with <b>androidx.test.ext:junit</b> coordinates and
-         * with version reference <b>junitVersion</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJunit() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.junit");
-        }
-
-        /**
-         * Dependency provider for <b>material3</b> with <b>androidx.compose.material3:material3</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getMaterial3() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.material3");
-        }
-
-        /**
-         * Dependency provider for <b>splashscreen</b> with <b>androidx.core:core-splashscreen</b> coordinates and
-         * with version reference <b>splashScreen</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getSplashscreen() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.splashscreen");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.activity</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxActivityLibraryAccessors getActivity() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxActivityLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeLibraryAccessors getCompose() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.core</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxCoreLibraryAccessors getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxCoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.datastore</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxDatastoreLibraryAccessors getDatastore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxDatastoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.espresso</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxEspressoLibraryAccessors getEspresso() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxEspressoLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxLifecycleLibraryAccessors getLifecycle() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxLifecycleLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.room</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxRoomLibraryAccessors getRoom() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxRoomLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiLibraryAccessors getUi() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxActivityLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxActivityLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>androidx.activity:activity-compose</b> coordinates and
-         * with version reference <b>activityCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.activity.compose");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxComposeMaterialLibraryAccessors laccForAndroidxComposeMaterialLibraryAccessors = new AndroidxComposeMaterialLibraryAccessors(owner);
-
-        public AndroidxComposeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>bom</b> with <b>androidx.compose:compose-bom</b> coordinates and
-         * with version reference <b>composeBom</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getBom() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.bom");
-        }
-
-        /**
-         * Dependency provider for <b>navigation</b> with <b>androidx.navigation:navigation-compose</b> coordinates and
-         * with version reference <b>navigationCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getNavigation() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.navigation");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeMaterialLibraryAccessors getMaterial() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeMaterialLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeMaterialLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxComposeMaterialIconsLibraryAccessors laccForAndroidxComposeMaterialIconsLibraryAccessors = new AndroidxComposeMaterialIconsLibraryAccessors(owner);
-
-        public AndroidxComposeMaterialLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>material</b> with <b>androidx.compose.material:material</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material.icons</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeMaterialIconsLibraryAccessors getIcons() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeMaterialIconsLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeMaterialIconsLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxComposeMaterialIconsLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.compose.material:material-icons-core</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material.icons.core");
-        }
-
-        /**
-         * Dependency provider for <b>extended</b> with <b>androidx.compose.material:material-icons-extended</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getExtended() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material.icons.extended");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxCoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxCoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.core:core-ktx</b> coordinates and
-         * with version reference <b>coreKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.core.ktx");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxDatastoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxDatastoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>preferences</b> with <b>androidx.datastore:datastore-preferences</b> coordinates and
-         * with version reference <b>dataStore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getPreferences() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.datastore.preferences");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxEspressoLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxEspressoLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.test.espresso:espresso-core</b> coordinates and
-         * with version reference <b>espressoCore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.espresso.core");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLifecycleLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxLifecycleRuntimeLibraryAccessors laccForAndroidxLifecycleRuntimeLibraryAccessors = new AndroidxLifecycleRuntimeLibraryAccessors(owner);
-
-        public AndroidxLifecycleLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle.runtime</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxLifecycleRuntimeLibraryAccessors getRuntime() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxLifecycleRuntimeLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLifecycleRuntimeLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxLifecycleRuntimeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.lifecycle:lifecycle-runtime-ktx</b> coordinates and
-         * with version reference <b>lifecycleRuntimeKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.lifecycle.runtime.ktx");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxRoomLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxRoomLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compiler</b> with <b>androidx.room:room-compiler</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCompiler() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.room.compiler");
-        }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.room:room-ktx</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.room.ktx");
-        }
-
-        /**
-         * Dependency provider for <b>runtime</b> with <b>androidx.room:room-runtime</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getRuntime() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.room.runtime");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxUiTestLibraryAccessors laccForAndroidxUiTestLibraryAccessors = new AndroidxUiTestLibraryAccessors(owner);
-        private final AndroidxUiToolingLibraryAccessors laccForAndroidxUiToolingLibraryAccessors = new AndroidxUiToolingLibraryAccessors(owner);
-
-        public AndroidxUiLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ui</b> with <b>androidx.compose.ui:ui</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui");
-        }
-
-        /**
-         * Dependency provider for <b>graphics</b> with <b>androidx.compose.ui:ui-graphics</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getGraphics() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.graphics");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.test</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiTestLibraryAccessors getTest() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiTestLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.tooling</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiToolingLibraryAccessors getTooling() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiToolingLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiTestLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxUiTestLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>junit4</b> with <b>androidx.compose.ui:ui-test-junit4</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJunit4() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.test.junit4");
-        }
-
-        /**
-         * Dependency provider for <b>manifest</b> with <b>androidx.compose.ui:ui-test-manifest</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getManifest() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.test.manifest");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiToolingLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-
-        public AndroidxUiToolingLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>tooling</b> with <b>androidx.compose.ui:ui-tooling</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.tooling");
-        }
-
-        /**
-         * Dependency provider for <b>preview</b> with <b>androidx.compose.ui:ui-tooling-preview</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getPreview() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.tooling.preview");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class CoilLibraryAccessors extends SubDependencyFactory {
-
-        public CoilLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>io.coil-kt.coil3:coil-compose</b> coordinates and
-         * with version reference <b>coil</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("coil.compose");
-        }
-
-        /**
-         * Dependency provider for <b>network</b> with <b>io.coil-kt.coil3:coil-network-okhttp</b> coordinates and
-         * with version reference <b>coil</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getNetwork() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("coil.network");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KotlinxLibraryAccessors extends SubDependencyFactory {
-        private final KotlinxSerializationLibraryAccessors laccForKotlinxSerializationLibraryAccessors = new KotlinxSerializationLibraryAccessors(owner);
-
-        public KotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>kotlinx.serialization</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KotlinxSerializationLibraryAccessors getSerialization() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKotlinxSerializationLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KotlinxSerializationLibraryAccessors extends SubDependencyFactory {
-
-        public KotlinxSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>org.jetbrains.kotlinx:kotlinx-serialization-json</b> coordinates and
-         * with version reference <b>kotlinSerialization</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("kotlinx.serialization.json");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KtorLibraryAccessors extends SubDependencyFactory {
-        private final KtorClientLibraryAccessors laccForKtorClientLibraryAccessors = new KtorClientLibraryAccessors(owner);
-        private final KtorSerializationLibraryAccessors laccForKtorSerializationLibraryAccessors = new KtorSerializationLibraryAccessors(owner);
-
-        public KtorLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>ktor.client</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KtorClientLibraryAccessors getClient() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKtorClientLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>ktor.serialization</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KtorSerializationLibraryAccessors getSerialization() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKtorSerializationLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KtorClientLibraryAccessors extends SubDependencyFactory {
-        private final KtorClientContentLibraryAccessors laccForKtorClientContentLibraryAccessors = new KtorClientContentLibraryAccessors(owner);
-
-        public KtorClientLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>cio</b> with <b>io.ktor:ktor-client-cio</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCio() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("ktor.client.cio");
-        }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>io.ktor:ktor-client-core</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("ktor.client.core");
-        }
-
-        /**
-         * Dependency provider for <b>logging</b> with <b>io.ktor:ktor-client-logging</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getLogging() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("ktor.client.logging");
-        }
-
-        /**
-         * Group of libraries at <b>ktor.client.content</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KtorClientContentLibraryAccessors getContent() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKtorClientContentLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KtorClientContentLibraryAccessors extends SubDependencyFactory {
-
-        public KtorClientContentLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>negotiation</b> with <b>io.ktor:ktor-client-content-negotiation</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getNegotiation() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("ktor.client.content.negotiation");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KtorSerializationLibraryAccessors extends SubDependencyFactory {
-        private final KtorSerializationKotlinxLibraryAccessors laccForKtorSerializationKotlinxLibraryAccessors = new KtorSerializationKotlinxLibraryAccessors(owner);
-
-        public KtorSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>ktor.serialization.kotlinx</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KtorSerializationKotlinxLibraryAccessors getKotlinx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKtorSerializationKotlinxLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KtorSerializationKotlinxLibraryAccessors extends SubDependencyFactory {
-
-        public KtorSerializationKotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>io.ktor:ktor-serialization-kotlinx-json</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("ktor.serialization.kotlinx.json");
-        }
-
-    }
-
-    public static class VersionAccessors extends VersionFactory  {
-
-        public VersionAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Version alias <b>activityCompose</b> with value <b>1.9.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getActivityCompose() { return getVersion("activityCompose"); }
-
-        /**
-         * Version alias <b>agp</b> with value <b>8.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAgp() { return getVersion("agp"); }
-
-        /**
-         * Version alias <b>appcompat</b> with value <b>1.7.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAppcompat() { return getVersion("appcompat"); }
-
-        /**
-         * Version alias <b>cardview</b> with value <b>1.0.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCardview() { return getVersion("cardview"); }
-
-        /**
-         * Version alias <b>coil</b> with value <b>3.0.0-rc01</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoil() { return getVersion("coil"); }
-
-        /**
-         * Version alias <b>composeBom</b> with value <b>2024.10.00</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getComposeBom() { return getVersion("composeBom"); }
-
-        /**
-         * Version alias <b>coreKtx</b> with value <b>1.13.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoreKtx() { return getVersion("coreKtx"); }
-
-        /**
-         * Version alias <b>dataStore</b> with value <b>1.1.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getDataStore() { return getVersion("dataStore"); }
-
-        /**
-         * Version alias <b>espressoCore</b> with value <b>3.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getEspressoCore() { return getVersion("espressoCore"); }
-
-        /**
-         * Version alias <b>junit</b> with value <b>4.13.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunit() { return getVersion("junit"); }
-
-        /**
-         * Version alias <b>junitVersion</b> with value <b>1.2.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunitVersion() { return getVersion("junitVersion"); }
-
-        /**
-         * Version alias <b>kotlin</b> with value <b>1.9.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlin() { return getVersion("kotlin"); }
-
-        /**
-         * Version alias <b>kotlinSerialization</b> with value <b>1.6.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlinSerialization() { return getVersion("kotlinSerialization"); }
-
-        /**
-         * Version alias <b>ktor</b> with value <b>2.3.12</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKtor() { return getVersion("ktor"); }
-
-        /**
-         * Version alias <b>lifecycleRuntimeKtx</b> with value <b>2.8.6</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getLifecycleRuntimeKtx() { return getVersion("lifecycleRuntimeKtx"); }
-
-        /**
-         * Version alias <b>navigationCompose</b> with value <b>2.8.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getNavigationCompose() { return getVersion("navigationCompose"); }
-
-        /**
-         * Version alias <b>room</b> with value <b>2.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getRoom() { return getVersion("room"); }
-
-        /**
-         * Version alias <b>splashScreen</b> with value <b>1.0.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getSplashScreen() { return getVersion("splashScreen"); }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class BundleAccessors extends BundleFactory {
-
-        public BundleAccessors(ObjectFactory objects, ProviderFactory providers, DefaultVersionCatalog config, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) { super(objects, providers, config, attributesFactory, capabilityNotationParser); }
-
-        /**
-         * Dependency bundle provider for <b>coil</b> which contains the following dependencies:
-         * <ul>
-         *    <li>io.coil-kt.coil3:coil-compose</li>
-         *    <li>io.coil-kt.coil3:coil-network-okhttp</li>
-         * </ul>
-         * <p>
-         * This bundle was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<ExternalModuleDependencyBundle> getCoil() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return createBundle("coil");
-        }
-
-        /**
-         * Dependency bundle provider for <b>ktor</b> which contains the following dependencies:
-         * <ul>
-         *    <li>io.ktor:ktor-client-cio</li>
-         *    <li>io.ktor:ktor-client-content-negotiation</li>
-         *    <li>io.ktor:ktor-client-core</li>
-         *    <li>io.ktor:ktor-client-logging</li>
-         *    <li>io.ktor:ktor-serialization-kotlinx-json</li>
-         * </ul>
-         * <p>
-         * This bundle was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<ExternalModuleDependencyBundle> getKtor() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return createBundle("ktor");
-        }
-
-    }
-
-    public static class PluginAccessors extends PluginFactory {
-        private final AndroidPluginAccessors paccForAndroidPluginAccessors = new AndroidPluginAccessors(providers, config);
-        private final JetbrainsPluginAccessors paccForJetbrainsPluginAccessors = new JetbrainsPluginAccessors(providers, config);
-
-        public PluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.android</b>
-         */
-        public AndroidPluginAccessors getAndroid() {
-            return paccForAndroidPluginAccessors;
-        }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains</b>
-         */
-        public JetbrainsPluginAccessors getJetbrains() {
-            return paccForJetbrainsPluginAccessors;
-        }
-
-    }
-
-    public static class AndroidPluginAccessors extends PluginFactory {
-
-        public AndroidPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>android.application</b> with plugin id <b>com.android.application</b> and
-         * with version reference <b>agp</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getApplication() { return createPlugin("android.application"); }
-
-    }
-
-    public static class JetbrainsPluginAccessors extends PluginFactory {
-        private final JetbrainsKotlinPluginAccessors paccForJetbrainsKotlinPluginAccessors = new JetbrainsKotlinPluginAccessors(providers, config);
-
-        public JetbrainsPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains.kotlin</b>
-         */
-        public JetbrainsKotlinPluginAccessors getKotlin() {
-            return paccForJetbrainsKotlinPluginAccessors;
-        }
-
-    }
-
-    public static class JetbrainsKotlinPluginAccessors extends PluginFactory {
-
-        public JetbrainsKotlinPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.android</b> with plugin id <b>org.jetbrains.kotlin.android</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getAndroid() { return createPlugin("jetbrains.kotlin.android"); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.serialization</b> with plugin id <b>org.jetbrains.kotlin.plugin.serialization</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getSerialization() { return createPlugin("jetbrains.kotlin.serialization"); }
-
-    }
-
-}
Index: .gradle/8.7/dependencies-accessors/05244df278ca778d14a8422e0bb13eb9a65f419e/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java
===================================================================
diff --git a/.gradle/8.7/dependencies-accessors/05244df278ca778d14a8422e0bb13eb9a65f419e/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java b/.gradle/8.7/dependencies-accessors/05244df278ca778d14a8422e0bb13eb9a65f419e/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java
deleted file mode 100644
--- a/.gradle/8.7/dependencies-accessors/05244df278ca778d14a8422e0bb13eb9a65f419e/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,1424 +0,0 @@
-package org.gradle.accessors.dm;
-
-import org.gradle.api.NonNullApi;
-import org.gradle.api.artifacts.MinimalExternalModuleDependency;
-import org.gradle.plugin.use.PluginDependency;
-import org.gradle.api.artifacts.ExternalModuleDependencyBundle;
-import org.gradle.api.artifacts.MutableVersionConstraint;
-import org.gradle.api.provider.Provider;
-import org.gradle.api.model.ObjectFactory;
-import org.gradle.api.provider.ProviderFactory;
-import org.gradle.api.internal.catalog.AbstractExternalDependencyFactory;
-import org.gradle.api.internal.catalog.DefaultVersionCatalog;
-import java.util.Map;
-import org.gradle.api.internal.attributes.ImmutableAttributesFactory;
-import org.gradle.api.internal.artifacts.dsl.CapabilityNotationParser;
-import javax.inject.Inject;
-
-/**
- * A catalog of dependencies accessible via the {@code libs} extension.
- */
-@NonNullApi
-public class LibrariesForLibsInPluginsBlock extends AbstractExternalDependencyFactory {
-
-    private final AbstractExternalDependencyFactory owner = this;
-    private final AndroidxLibraryAccessors laccForAndroidxLibraryAccessors = new AndroidxLibraryAccessors(owner);
-    private final CoilLibraryAccessors laccForCoilLibraryAccessors = new CoilLibraryAccessors(owner);
-    private final DaggerLibraryAccessors laccForDaggerLibraryAccessors = new DaggerLibraryAccessors(owner);
-    private final HiltLibraryAccessors laccForHiltLibraryAccessors = new HiltLibraryAccessors(owner);
-    private final KotlinxLibraryAccessors laccForKotlinxLibraryAccessors = new KotlinxLibraryAccessors(owner);
-    private final KtorLibraryAccessors laccForKtorLibraryAccessors = new KtorLibraryAccessors(owner);
-    private final VersionAccessors vaccForVersionAccessors = new VersionAccessors(providers, config);
-    private final BundleAccessors baccForBundleAccessors = new BundleAccessors(objects, providers, config, attributesFactory, capabilityNotationParser);
-    private final PluginAccessors paccForPluginAccessors = new PluginAccessors(providers, config);
-
-    @Inject
-    public LibrariesForLibsInPluginsBlock(DefaultVersionCatalog config, ProviderFactory providers, ObjectFactory objects, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) {
-        super(config, providers, objects, attributesFactory, capabilityNotationParser);
-    }
-
-    /**
-     * Dependency provider for <b>junit</b> with <b>junit:junit</b> coordinates and
-     * with version reference <b>junit</b>
-     * <p>
-     * This dependency was declared in catalog libs.versions.toml
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public Provider<MinimalExternalModuleDependency> getJunit() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return create("junit");
-    }
-
-    /**
-     * Group of libraries at <b>androidx</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public AndroidxLibraryAccessors getAndroidx() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForAndroidxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>coil</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public CoilLibraryAccessors getCoil() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForCoilLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>dagger</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public DaggerLibraryAccessors getDagger() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForDaggerLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>hilt</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public HiltLibraryAccessors getHilt() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForHiltLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>kotlinx</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public KotlinxLibraryAccessors getKotlinx() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForKotlinxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>ktor</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public KtorLibraryAccessors getKtor() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForKtorLibraryAccessors;
-    }
-
-    /**
-     * Group of versions at <b>versions</b>
-     */
-    public VersionAccessors getVersions() {
-        return vaccForVersionAccessors;
-    }
-
-    /**
-     * Group of bundles at <b>bundles</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public BundleAccessors getBundles() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return baccForBundleAccessors;
-    }
-
-    /**
-     * Group of plugins at <b>plugins</b>
-     */
-    public PluginAccessors getPlugins() {
-        return paccForPluginAccessors;
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxActivityLibraryAccessors laccForAndroidxActivityLibraryAccessors = new AndroidxActivityLibraryAccessors(owner);
-        private final AndroidxComposeLibraryAccessors laccForAndroidxComposeLibraryAccessors = new AndroidxComposeLibraryAccessors(owner);
-        private final AndroidxCoreLibraryAccessors laccForAndroidxCoreLibraryAccessors = new AndroidxCoreLibraryAccessors(owner);
-        private final AndroidxDatastoreLibraryAccessors laccForAndroidxDatastoreLibraryAccessors = new AndroidxDatastoreLibraryAccessors(owner);
-        private final AndroidxEspressoLibraryAccessors laccForAndroidxEspressoLibraryAccessors = new AndroidxEspressoLibraryAccessors(owner);
-        private final AndroidxLifecycleLibraryAccessors laccForAndroidxLifecycleLibraryAccessors = new AndroidxLifecycleLibraryAccessors(owner);
-        private final AndroidxRoomLibraryAccessors laccForAndroidxRoomLibraryAccessors = new AndroidxRoomLibraryAccessors(owner);
-        private final AndroidxUiLibraryAccessors laccForAndroidxUiLibraryAccessors = new AndroidxUiLibraryAccessors(owner);
-
-        public AndroidxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>appcompat</b> with <b>androidx.appcompat:appcompat</b> coordinates and
-         * with version reference <b>appcompat</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getAppcompat() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.appcompat");
-        }
-
-        /**
-         * Dependency provider for <b>cardview</b> with <b>androidx.cardview:cardview</b> coordinates and
-         * with version reference <b>cardview</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCardview() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.cardview");
-        }
-
-        /**
-         * Dependency provider for <b>junit</b> with <b>androidx.test.ext:junit</b> coordinates and
-         * with version reference <b>junitVersion</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJunit() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.junit");
-        }
-
-        /**
-         * Dependency provider for <b>material3</b> with <b>androidx.compose.material3:material3</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getMaterial3() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.material3");
-        }
-
-        /**
-         * Dependency provider for <b>splashscreen</b> with <b>androidx.core:core-splashscreen</b> coordinates and
-         * with version reference <b>splashScreen</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getSplashscreen() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.splashscreen");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.activity</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxActivityLibraryAccessors getActivity() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxActivityLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeLibraryAccessors getCompose() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.core</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxCoreLibraryAccessors getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxCoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.datastore</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxDatastoreLibraryAccessors getDatastore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxDatastoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.espresso</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxEspressoLibraryAccessors getEspresso() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxEspressoLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxLifecycleLibraryAccessors getLifecycle() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxLifecycleLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.room</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxRoomLibraryAccessors getRoom() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxRoomLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiLibraryAccessors getUi() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxActivityLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxActivityLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>androidx.activity:activity-compose</b> coordinates and
-         * with version reference <b>activityCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.activity.compose");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxComposeMaterialLibraryAccessors laccForAndroidxComposeMaterialLibraryAccessors = new AndroidxComposeMaterialLibraryAccessors(owner);
-
-        public AndroidxComposeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>bom</b> with <b>androidx.compose:compose-bom</b> coordinates and
-         * with version reference <b>composeBom</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getBom() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.bom");
-        }
-
-        /**
-         * Dependency provider for <b>navigation</b> with <b>androidx.navigation:navigation-compose</b> coordinates and
-         * with version reference <b>navigationCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getNavigation() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.navigation");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeMaterialLibraryAccessors getMaterial() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeMaterialLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeMaterialLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxComposeMaterialIconsLibraryAccessors laccForAndroidxComposeMaterialIconsLibraryAccessors = new AndroidxComposeMaterialIconsLibraryAccessors(owner);
-
-        public AndroidxComposeMaterialLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>material</b> with <b>androidx.compose.material:material</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material.icons</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeMaterialIconsLibraryAccessors getIcons() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeMaterialIconsLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeMaterialIconsLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxComposeMaterialIconsLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.compose.material:material-icons-core</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material.icons.core");
-        }
-
-        /**
-         * Dependency provider for <b>extended</b> with <b>androidx.compose.material:material-icons-extended</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getExtended() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material.icons.extended");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxCoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxCoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.core:core-ktx</b> coordinates and
-         * with version reference <b>coreKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.core.ktx");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxDatastoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxDatastoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>preferences</b> with <b>androidx.datastore:datastore-preferences</b> coordinates and
-         * with version reference <b>dataStore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getPreferences() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.datastore.preferences");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxEspressoLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxEspressoLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.test.espresso:espresso-core</b> coordinates and
-         * with version reference <b>espressoCore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.espresso.core");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLifecycleLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxLifecycleRuntimeLibraryAccessors laccForAndroidxLifecycleRuntimeLibraryAccessors = new AndroidxLifecycleRuntimeLibraryAccessors(owner);
-
-        public AndroidxLifecycleLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle.runtime</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxLifecycleRuntimeLibraryAccessors getRuntime() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxLifecycleRuntimeLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLifecycleRuntimeLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxLifecycleRuntimeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.lifecycle:lifecycle-runtime-ktx</b> coordinates and
-         * with version reference <b>lifecycleRuntimeKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.lifecycle.runtime.ktx");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxRoomLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxRoomLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compiler</b> with <b>androidx.room:room-compiler</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCompiler() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.room.compiler");
-        }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.room:room-ktx</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.room.ktx");
-        }
-
-        /**
-         * Dependency provider for <b>runtime</b> with <b>androidx.room:room-runtime</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getRuntime() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.room.runtime");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxUiTestLibraryAccessors laccForAndroidxUiTestLibraryAccessors = new AndroidxUiTestLibraryAccessors(owner);
-        private final AndroidxUiToolingLibraryAccessors laccForAndroidxUiToolingLibraryAccessors = new AndroidxUiToolingLibraryAccessors(owner);
-
-        public AndroidxUiLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ui</b> with <b>androidx.compose.ui:ui</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui");
-        }
-
-        /**
-         * Dependency provider for <b>graphics</b> with <b>androidx.compose.ui:ui-graphics</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getGraphics() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.graphics");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.test</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiTestLibraryAccessors getTest() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiTestLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.tooling</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiToolingLibraryAccessors getTooling() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiToolingLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiTestLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxUiTestLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>junit4</b> with <b>androidx.compose.ui:ui-test-junit4</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJunit4() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.test.junit4");
-        }
-
-        /**
-         * Dependency provider for <b>manifest</b> with <b>androidx.compose.ui:ui-test-manifest</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getManifest() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.test.manifest");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiToolingLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-
-        public AndroidxUiToolingLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>tooling</b> with <b>androidx.compose.ui:ui-tooling</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.tooling");
-        }
-
-        /**
-         * Dependency provider for <b>preview</b> with <b>androidx.compose.ui:ui-tooling-preview</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getPreview() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.tooling.preview");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class CoilLibraryAccessors extends SubDependencyFactory {
-
-        public CoilLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>io.coil-kt.coil3:coil-compose</b> coordinates and
-         * with version reference <b>coil</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("coil.compose");
-        }
-
-        /**
-         * Dependency provider for <b>network</b> with <b>io.coil-kt.coil3:coil-network-okhttp</b> coordinates and
-         * with version reference <b>coil</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getNetwork() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("coil.network");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class DaggerLibraryAccessors extends SubDependencyFactory {
-        private final DaggerHiltLibraryAccessors laccForDaggerHiltLibraryAccessors = new DaggerHiltLibraryAccessors(owner);
-
-        public DaggerLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>dagger.hilt</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public DaggerHiltLibraryAccessors getHilt() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForDaggerHiltLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class DaggerHiltLibraryAccessors extends SubDependencyFactory {
-
-        public DaggerHiltLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compiler</b> with <b>com.google.dagger:hilt-compiler</b> coordinates and
-         * with version reference <b>hiltCompiler</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCompiler() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("dagger.hilt.compiler");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class HiltLibraryAccessors extends SubDependencyFactory {
-
-        public HiltLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>android</b> with <b>com.google.dagger:hilt-android</b> coordinates and
-         * with version reference <b>hiltAndroid</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getAndroid() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("hilt.android");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KotlinxLibraryAccessors extends SubDependencyFactory {
-        private final KotlinxSerializationLibraryAccessors laccForKotlinxSerializationLibraryAccessors = new KotlinxSerializationLibraryAccessors(owner);
-
-        public KotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>kotlinx.serialization</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KotlinxSerializationLibraryAccessors getSerialization() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKotlinxSerializationLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KotlinxSerializationLibraryAccessors extends SubDependencyFactory {
-
-        public KotlinxSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>org.jetbrains.kotlinx:kotlinx-serialization-json</b> coordinates and
-         * with version reference <b>kotlinSerialization</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("kotlinx.serialization.json");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KtorLibraryAccessors extends SubDependencyFactory {
-        private final KtorClientLibraryAccessors laccForKtorClientLibraryAccessors = new KtorClientLibraryAccessors(owner);
-        private final KtorSerializationLibraryAccessors laccForKtorSerializationLibraryAccessors = new KtorSerializationLibraryAccessors(owner);
-
-        public KtorLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>ktor.client</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KtorClientLibraryAccessors getClient() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKtorClientLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>ktor.serialization</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KtorSerializationLibraryAccessors getSerialization() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKtorSerializationLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KtorClientLibraryAccessors extends SubDependencyFactory {
-        private final KtorClientContentLibraryAccessors laccForKtorClientContentLibraryAccessors = new KtorClientContentLibraryAccessors(owner);
-
-        public KtorClientLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>cio</b> with <b>io.ktor:ktor-client-cio</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCio() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("ktor.client.cio");
-        }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>io.ktor:ktor-client-core</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("ktor.client.core");
-        }
-
-        /**
-         * Dependency provider for <b>logging</b> with <b>io.ktor:ktor-client-logging</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getLogging() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("ktor.client.logging");
-        }
-
-        /**
-         * Group of libraries at <b>ktor.client.content</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KtorClientContentLibraryAccessors getContent() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKtorClientContentLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KtorClientContentLibraryAccessors extends SubDependencyFactory {
-
-        public KtorClientContentLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>negotiation</b> with <b>io.ktor:ktor-client-content-negotiation</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getNegotiation() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("ktor.client.content.negotiation");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KtorSerializationLibraryAccessors extends SubDependencyFactory {
-        private final KtorSerializationKotlinxLibraryAccessors laccForKtorSerializationKotlinxLibraryAccessors = new KtorSerializationKotlinxLibraryAccessors(owner);
-
-        public KtorSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>ktor.serialization.kotlinx</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KtorSerializationKotlinxLibraryAccessors getKotlinx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKtorSerializationKotlinxLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KtorSerializationKotlinxLibraryAccessors extends SubDependencyFactory {
-
-        public KtorSerializationKotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>io.ktor:ktor-serialization-kotlinx-json</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("ktor.serialization.kotlinx.json");
-        }
-
-    }
-
-    public static class VersionAccessors extends VersionFactory  {
-
-        public VersionAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Version alias <b>activityCompose</b> with value <b>1.9.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getActivityCompose() { return getVersion("activityCompose"); }
-
-        /**
-         * Version alias <b>agp</b> with value <b>8.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAgp() { return getVersion("agp"); }
-
-        /**
-         * Version alias <b>appcompat</b> with value <b>1.7.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAppcompat() { return getVersion("appcompat"); }
-
-        /**
-         * Version alias <b>cardview</b> with value <b>1.0.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCardview() { return getVersion("cardview"); }
-
-        /**
-         * Version alias <b>coil</b> with value <b>3.0.0-rc01</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoil() { return getVersion("coil"); }
-
-        /**
-         * Version alias <b>composeBom</b> with value <b>2024.10.00</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getComposeBom() { return getVersion("composeBom"); }
-
-        /**
-         * Version alias <b>coreKtx</b> with value <b>1.13.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoreKtx() { return getVersion("coreKtx"); }
-
-        /**
-         * Version alias <b>dataStore</b> with value <b>1.1.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getDataStore() { return getVersion("dataStore"); }
-
-        /**
-         * Version alias <b>espressoCore</b> with value <b>3.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getEspressoCore() { return getVersion("espressoCore"); }
-
-        /**
-         * Version alias <b>hiltAndroid</b> with value <b>2.50</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getHiltAndroid() { return getVersion("hiltAndroid"); }
-
-        /**
-         * Version alias <b>hiltCompiler</b> with value <b>2.50</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getHiltCompiler() { return getVersion("hiltCompiler"); }
-
-        /**
-         * Version alias <b>junit</b> with value <b>4.13.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunit() { return getVersion("junit"); }
-
-        /**
-         * Version alias <b>junitVersion</b> with value <b>1.2.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunitVersion() { return getVersion("junitVersion"); }
-
-        /**
-         * Version alias <b>kotlin</b> with value <b>1.9.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlin() { return getVersion("kotlin"); }
-
-        /**
-         * Version alias <b>kotlinSerialization</b> with value <b>1.6.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlinSerialization() { return getVersion("kotlinSerialization"); }
-
-        /**
-         * Version alias <b>ktor</b> with value <b>2.3.12</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKtor() { return getVersion("ktor"); }
-
-        /**
-         * Version alias <b>lifecycleRuntimeKtx</b> with value <b>2.8.6</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getLifecycleRuntimeKtx() { return getVersion("lifecycleRuntimeKtx"); }
-
-        /**
-         * Version alias <b>navigationCompose</b> with value <b>2.8.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getNavigationCompose() { return getVersion("navigationCompose"); }
-
-        /**
-         * Version alias <b>room</b> with value <b>2.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getRoom() { return getVersion("room"); }
-
-        /**
-         * Version alias <b>splashScreen</b> with value <b>1.0.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getSplashScreen() { return getVersion("splashScreen"); }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class BundleAccessors extends BundleFactory {
-
-        public BundleAccessors(ObjectFactory objects, ProviderFactory providers, DefaultVersionCatalog config, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) { super(objects, providers, config, attributesFactory, capabilityNotationParser); }
-
-        /**
-         * Dependency bundle provider for <b>coil</b> which contains the following dependencies:
-         * <ul>
-         *    <li>io.coil-kt.coil3:coil-compose</li>
-         *    <li>io.coil-kt.coil3:coil-network-okhttp</li>
-         * </ul>
-         * <p>
-         * This bundle was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<ExternalModuleDependencyBundle> getCoil() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return createBundle("coil");
-        }
-
-        /**
-         * Dependency bundle provider for <b>ktor</b> which contains the following dependencies:
-         * <ul>
-         *    <li>io.ktor:ktor-client-cio</li>
-         *    <li>io.ktor:ktor-client-content-negotiation</li>
-         *    <li>io.ktor:ktor-client-core</li>
-         *    <li>io.ktor:ktor-client-logging</li>
-         *    <li>io.ktor:ktor-serialization-kotlinx-json</li>
-         * </ul>
-         * <p>
-         * This bundle was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<ExternalModuleDependencyBundle> getKtor() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return createBundle("ktor");
-        }
-
-    }
-
-    public static class PluginAccessors extends PluginFactory {
-        private final AndroidPluginAccessors paccForAndroidPluginAccessors = new AndroidPluginAccessors(providers, config);
-        private final JetbrainsPluginAccessors paccForJetbrainsPluginAccessors = new JetbrainsPluginAccessors(providers, config);
-
-        public PluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.android</b>
-         */
-        public AndroidPluginAccessors getAndroid() {
-            return paccForAndroidPluginAccessors;
-        }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains</b>
-         */
-        public JetbrainsPluginAccessors getJetbrains() {
-            return paccForJetbrainsPluginAccessors;
-        }
-
-    }
-
-    public static class AndroidPluginAccessors extends PluginFactory {
-
-        public AndroidPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>android.application</b> with plugin id <b>com.android.application</b> and
-         * with version reference <b>agp</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getApplication() { return createPlugin("android.application"); }
-
-    }
-
-    public static class JetbrainsPluginAccessors extends PluginFactory {
-        private final JetbrainsKotlinPluginAccessors paccForJetbrainsKotlinPluginAccessors = new JetbrainsKotlinPluginAccessors(providers, config);
-
-        public JetbrainsPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains.kotlin</b>
-         */
-        public JetbrainsKotlinPluginAccessors getKotlin() {
-            return paccForJetbrainsKotlinPluginAccessors;
-        }
-
-    }
-
-    public static class JetbrainsKotlinPluginAccessors extends PluginFactory {
-
-        public JetbrainsKotlinPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.android</b> with plugin id <b>org.jetbrains.kotlin.android</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getAndroid() { return createPlugin("jetbrains.kotlin.android"); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.serialization</b> with plugin id <b>org.jetbrains.kotlin.plugin.serialization</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getSerialization() { return createPlugin("jetbrains.kotlin.serialization"); }
-
-    }
-
-}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM__Changes_.xml	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,44 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]" date="1729999445360" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26-Oct-24 9:24 PM [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/buildOutputCleanup/buildOutputCleanup.lock" />
-    <option name="AFTER_PATH" value=".gradle/buildOutputCleanup/buildOutputCleanup.lock" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/buildOutputCleanup.lock" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/checksums/sha1-checksums.bin" />
-    <option name="AFTER_PATH" value=".gradle/8.7/checksums/sha1-checksums.bin" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/sha1-checksums.bin" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/fileHashes/resourceHashesCache.bin" />
-    <option name="AFTER_PATH" value=".gradle/8.7/fileHashes/resourceHashesCache.bin" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/resourceHashesCache.bin" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/checksums/checksums.lock" />
-    <option name="AFTER_PATH" value=".gradle/8.7/checksums/checksums.lock" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/checksums.lock" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/checksums/md5-checksums.bin" />
-    <option name="AFTER_PATH" value=".gradle/8.7/checksums/md5-checksums.bin" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/md5-checksums.bin" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/fileHashes/fileHashes.bin" />
-    <option name="AFTER_PATH" value=".gradle/8.7/fileHashes/fileHashes.bin" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/fileHashes.bin" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/file-system.probe" />
-    <option name="AFTER_PATH" value=".gradle/file-system.probe" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/file-system.probe" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/fileHashes/fileHashes.lock" />
-    <option name="AFTER_PATH" value=".gradle/8.7/fileHashes/fileHashes.lock" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/fileHashes.lock" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .gradle/8.7/dependencies-accessors/18401a5638da8f505cc671a011d7cb4f4f5c7f09/sources/org/gradle/accessors/dm/LibrariesForLibs.java
===================================================================
diff --git a/.gradle/8.7/dependencies-accessors/18401a5638da8f505cc671a011d7cb4f4f5c7f09/sources/org/gradle/accessors/dm/LibrariesForLibs.java b/.gradle/8.7/dependencies-accessors/18401a5638da8f505cc671a011d7cb4f4f5c7f09/sources/org/gradle/accessors/dm/LibrariesForLibs.java
deleted file mode 100644
--- a/.gradle/8.7/dependencies-accessors/18401a5638da8f505cc671a011d7cb4f4f5c7f09/sources/org/gradle/accessors/dm/LibrariesForLibs.java	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,986 +0,0 @@
-package org.gradle.accessors.dm;
-
-import org.gradle.api.NonNullApi;
-import org.gradle.api.artifacts.MinimalExternalModuleDependency;
-import org.gradle.plugin.use.PluginDependency;
-import org.gradle.api.artifacts.ExternalModuleDependencyBundle;
-import org.gradle.api.artifacts.MutableVersionConstraint;
-import org.gradle.api.provider.Provider;
-import org.gradle.api.model.ObjectFactory;
-import org.gradle.api.provider.ProviderFactory;
-import org.gradle.api.internal.catalog.AbstractExternalDependencyFactory;
-import org.gradle.api.internal.catalog.DefaultVersionCatalog;
-import java.util.Map;
-import org.gradle.api.internal.attributes.ImmutableAttributesFactory;
-import org.gradle.api.internal.artifacts.dsl.CapabilityNotationParser;
-import javax.inject.Inject;
-
-/**
- * A catalog of dependencies accessible via the {@code libs} extension.
- */
-@NonNullApi
-public class LibrariesForLibs extends AbstractExternalDependencyFactory {
-
-    private final AbstractExternalDependencyFactory owner = this;
-    private final AndroidxLibraryAccessors laccForAndroidxLibraryAccessors = new AndroidxLibraryAccessors(owner);
-    private final CoilLibraryAccessors laccForCoilLibraryAccessors = new CoilLibraryAccessors(owner);
-    private final KotlinxLibraryAccessors laccForKotlinxLibraryAccessors = new KotlinxLibraryAccessors(owner);
-    private final KtorLibraryAccessors laccForKtorLibraryAccessors = new KtorLibraryAccessors(owner);
-    private final VersionAccessors vaccForVersionAccessors = new VersionAccessors(providers, config);
-    private final BundleAccessors baccForBundleAccessors = new BundleAccessors(objects, providers, config, attributesFactory, capabilityNotationParser);
-    private final PluginAccessors paccForPluginAccessors = new PluginAccessors(providers, config);
-
-    @Inject
-    public LibrariesForLibs(DefaultVersionCatalog config, ProviderFactory providers, ObjectFactory objects, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) {
-        super(config, providers, objects, attributesFactory, capabilityNotationParser);
-    }
-
-    /**
-     * Dependency provider for <b>junit</b> with <b>junit:junit</b> coordinates and
-     * with version reference <b>junit</b>
-     * <p>
-     * This dependency was declared in catalog libs.versions.toml
-     */
-    public Provider<MinimalExternalModuleDependency> getJunit() {
-        return create("junit");
-    }
-
-    /**
-     * Group of libraries at <b>androidx</b>
-     */
-    public AndroidxLibraryAccessors getAndroidx() {
-        return laccForAndroidxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>coil</b>
-     */
-    public CoilLibraryAccessors getCoil() {
-        return laccForCoilLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>kotlinx</b>
-     */
-    public KotlinxLibraryAccessors getKotlinx() {
-        return laccForKotlinxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>ktor</b>
-     */
-    public KtorLibraryAccessors getKtor() {
-        return laccForKtorLibraryAccessors;
-    }
-
-    /**
-     * Group of versions at <b>versions</b>
-     */
-    public VersionAccessors getVersions() {
-        return vaccForVersionAccessors;
-    }
-
-    /**
-     * Group of bundles at <b>bundles</b>
-     */
-    public BundleAccessors getBundles() {
-        return baccForBundleAccessors;
-    }
-
-    /**
-     * Group of plugins at <b>plugins</b>
-     */
-    public PluginAccessors getPlugins() {
-        return paccForPluginAccessors;
-    }
-
-    public static class AndroidxLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxActivityLibraryAccessors laccForAndroidxActivityLibraryAccessors = new AndroidxActivityLibraryAccessors(owner);
-        private final AndroidxComposeLibraryAccessors laccForAndroidxComposeLibraryAccessors = new AndroidxComposeLibraryAccessors(owner);
-        private final AndroidxCoreLibraryAccessors laccForAndroidxCoreLibraryAccessors = new AndroidxCoreLibraryAccessors(owner);
-        private final AndroidxDatastoreLibraryAccessors laccForAndroidxDatastoreLibraryAccessors = new AndroidxDatastoreLibraryAccessors(owner);
-        private final AndroidxEspressoLibraryAccessors laccForAndroidxEspressoLibraryAccessors = new AndroidxEspressoLibraryAccessors(owner);
-        private final AndroidxLifecycleLibraryAccessors laccForAndroidxLifecycleLibraryAccessors = new AndroidxLifecycleLibraryAccessors(owner);
-        private final AndroidxRoomLibraryAccessors laccForAndroidxRoomLibraryAccessors = new AndroidxRoomLibraryAccessors(owner);
-        private final AndroidxUiLibraryAccessors laccForAndroidxUiLibraryAccessors = new AndroidxUiLibraryAccessors(owner);
-
-        public AndroidxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>appcompat</b> with <b>androidx.appcompat:appcompat</b> coordinates and
-         * with version reference <b>appcompat</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getAppcompat() {
-            return create("androidx.appcompat");
-        }
-
-        /**
-         * Dependency provider for <b>cardview</b> with <b>androidx.cardview:cardview</b> coordinates and
-         * with version reference <b>cardview</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCardview() {
-            return create("androidx.cardview");
-        }
-
-        /**
-         * Dependency provider for <b>junit</b> with <b>androidx.test.ext:junit</b> coordinates and
-         * with version reference <b>junitVersion</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJunit() {
-            return create("androidx.junit");
-        }
-
-        /**
-         * Dependency provider for <b>material3</b> with <b>androidx.compose.material3:material3</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getMaterial3() {
-            return create("androidx.material3");
-        }
-
-        /**
-         * Dependency provider for <b>splashscreen</b> with <b>androidx.core:core-splashscreen</b> coordinates and
-         * with version reference <b>splashScreen</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getSplashscreen() {
-            return create("androidx.splashscreen");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.activity</b>
-         */
-        public AndroidxActivityLibraryAccessors getActivity() {
-            return laccForAndroidxActivityLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose</b>
-         */
-        public AndroidxComposeLibraryAccessors getCompose() {
-            return laccForAndroidxComposeLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.core</b>
-         */
-        public AndroidxCoreLibraryAccessors getCore() {
-            return laccForAndroidxCoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.datastore</b>
-         */
-        public AndroidxDatastoreLibraryAccessors getDatastore() {
-            return laccForAndroidxDatastoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.espresso</b>
-         */
-        public AndroidxEspressoLibraryAccessors getEspresso() {
-            return laccForAndroidxEspressoLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle</b>
-         */
-        public AndroidxLifecycleLibraryAccessors getLifecycle() {
-            return laccForAndroidxLifecycleLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.room</b>
-         */
-        public AndroidxRoomLibraryAccessors getRoom() {
-            return laccForAndroidxRoomLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui</b>
-         */
-        public AndroidxUiLibraryAccessors getUi() {
-            return laccForAndroidxUiLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxActivityLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxActivityLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>androidx.activity:activity-compose</b> coordinates and
-         * with version reference <b>activityCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            return create("androidx.activity.compose");
-        }
-
-    }
-
-    public static class AndroidxComposeLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxComposeMaterialLibraryAccessors laccForAndroidxComposeMaterialLibraryAccessors = new AndroidxComposeMaterialLibraryAccessors(owner);
-
-        public AndroidxComposeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>bom</b> with <b>androidx.compose:compose-bom</b> coordinates and
-         * with version reference <b>composeBom</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getBom() {
-            return create("androidx.compose.bom");
-        }
-
-        /**
-         * Dependency provider for <b>navigation</b> with <b>androidx.navigation:navigation-compose</b> coordinates and
-         * with version reference <b>navigationCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getNavigation() {
-            return create("androidx.compose.navigation");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material</b>
-         */
-        public AndroidxComposeMaterialLibraryAccessors getMaterial() {
-            return laccForAndroidxComposeMaterialLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxComposeMaterialLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxComposeMaterialIconsLibraryAccessors laccForAndroidxComposeMaterialIconsLibraryAccessors = new AndroidxComposeMaterialIconsLibraryAccessors(owner);
-
-        public AndroidxComposeMaterialLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>material</b> with <b>androidx.compose.material:material</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.compose.material");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material.icons</b>
-         */
-        public AndroidxComposeMaterialIconsLibraryAccessors getIcons() {
-            return laccForAndroidxComposeMaterialIconsLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxComposeMaterialIconsLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxComposeMaterialIconsLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.compose.material:material-icons-core</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            return create("androidx.compose.material.icons.core");
-        }
-
-        /**
-         * Dependency provider for <b>extended</b> with <b>androidx.compose.material:material-icons-extended</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getExtended() {
-            return create("androidx.compose.material.icons.extended");
-        }
-
-    }
-
-    public static class AndroidxCoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxCoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.core:core-ktx</b> coordinates and
-         * with version reference <b>coreKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            return create("androidx.core.ktx");
-        }
-
-    }
-
-    public static class AndroidxDatastoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxDatastoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>preferences</b> with <b>androidx.datastore:datastore-preferences</b> coordinates and
-         * with version reference <b>dataStore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getPreferences() {
-            return create("androidx.datastore.preferences");
-        }
-
-    }
-
-    public static class AndroidxEspressoLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxEspressoLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.test.espresso:espresso-core</b> coordinates and
-         * with version reference <b>espressoCore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            return create("androidx.espresso.core");
-        }
-
-    }
-
-    public static class AndroidxLifecycleLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxLifecycleRuntimeLibraryAccessors laccForAndroidxLifecycleRuntimeLibraryAccessors = new AndroidxLifecycleRuntimeLibraryAccessors(owner);
-
-        public AndroidxLifecycleLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle.runtime</b>
-         */
-        public AndroidxLifecycleRuntimeLibraryAccessors getRuntime() {
-            return laccForAndroidxLifecycleRuntimeLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxLifecycleRuntimeLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxLifecycleRuntimeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.lifecycle:lifecycle-runtime-ktx</b> coordinates and
-         * with version reference <b>lifecycleRuntimeKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            return create("androidx.lifecycle.runtime.ktx");
-        }
-
-    }
-
-    public static class AndroidxRoomLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxRoomLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compiler</b> with <b>androidx.room:room-compiler</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCompiler() {
-            return create("androidx.room.compiler");
-        }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.room:room-ktx</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            return create("androidx.room.ktx");
-        }
-
-        /**
-         * Dependency provider for <b>runtime</b> with <b>androidx.room:room-runtime</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getRuntime() {
-            return create("androidx.room.runtime");
-        }
-
-    }
-
-    public static class AndroidxUiLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxUiTestLibraryAccessors laccForAndroidxUiTestLibraryAccessors = new AndroidxUiTestLibraryAccessors(owner);
-        private final AndroidxUiToolingLibraryAccessors laccForAndroidxUiToolingLibraryAccessors = new AndroidxUiToolingLibraryAccessors(owner);
-
-        public AndroidxUiLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ui</b> with <b>androidx.compose.ui:ui</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.ui");
-        }
-
-        /**
-         * Dependency provider for <b>graphics</b> with <b>androidx.compose.ui:ui-graphics</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getGraphics() {
-            return create("androidx.ui.graphics");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.test</b>
-         */
-        public AndroidxUiTestLibraryAccessors getTest() {
-            return laccForAndroidxUiTestLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.tooling</b>
-         */
-        public AndroidxUiToolingLibraryAccessors getTooling() {
-            return laccForAndroidxUiToolingLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxUiTestLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxUiTestLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>junit4</b> with <b>androidx.compose.ui:ui-test-junit4</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJunit4() {
-            return create("androidx.ui.test.junit4");
-        }
-
-        /**
-         * Dependency provider for <b>manifest</b> with <b>androidx.compose.ui:ui-test-manifest</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getManifest() {
-            return create("androidx.ui.test.manifest");
-        }
-
-    }
-
-    public static class AndroidxUiToolingLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-
-        public AndroidxUiToolingLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>tooling</b> with <b>androidx.compose.ui:ui-tooling</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.ui.tooling");
-        }
-
-        /**
-         * Dependency provider for <b>preview</b> with <b>androidx.compose.ui:ui-tooling-preview</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getPreview() {
-            return create("androidx.ui.tooling.preview");
-        }
-
-    }
-
-    public static class CoilLibraryAccessors extends SubDependencyFactory {
-
-        public CoilLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>io.coil-kt.coil3:coil-compose</b> coordinates and
-         * with version reference <b>coil</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            return create("coil.compose");
-        }
-
-        /**
-         * Dependency provider for <b>network</b> with <b>io.coil-kt.coil3:coil-network-okhttp</b> coordinates and
-         * with version reference <b>coil</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getNetwork() {
-            return create("coil.network");
-        }
-
-    }
-
-    public static class KotlinxLibraryAccessors extends SubDependencyFactory {
-        private final KotlinxSerializationLibraryAccessors laccForKotlinxSerializationLibraryAccessors = new KotlinxSerializationLibraryAccessors(owner);
-
-        public KotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>kotlinx.serialization</b>
-         */
-        public KotlinxSerializationLibraryAccessors getSerialization() {
-            return laccForKotlinxSerializationLibraryAccessors;
-        }
-
-    }
-
-    public static class KotlinxSerializationLibraryAccessors extends SubDependencyFactory {
-
-        public KotlinxSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>org.jetbrains.kotlinx:kotlinx-serialization-json</b> coordinates and
-         * with version reference <b>kotlinSerialization</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            return create("kotlinx.serialization.json");
-        }
-
-    }
-
-    public static class KtorLibraryAccessors extends SubDependencyFactory {
-        private final KtorClientLibraryAccessors laccForKtorClientLibraryAccessors = new KtorClientLibraryAccessors(owner);
-        private final KtorSerializationLibraryAccessors laccForKtorSerializationLibraryAccessors = new KtorSerializationLibraryAccessors(owner);
-
-        public KtorLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>ktor.client</b>
-         */
-        public KtorClientLibraryAccessors getClient() {
-            return laccForKtorClientLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>ktor.serialization</b>
-         */
-        public KtorSerializationLibraryAccessors getSerialization() {
-            return laccForKtorSerializationLibraryAccessors;
-        }
-
-    }
-
-    public static class KtorClientLibraryAccessors extends SubDependencyFactory {
-        private final KtorClientContentLibraryAccessors laccForKtorClientContentLibraryAccessors = new KtorClientContentLibraryAccessors(owner);
-
-        public KtorClientLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>cio</b> with <b>io.ktor:ktor-client-cio</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCio() {
-            return create("ktor.client.cio");
-        }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>io.ktor:ktor-client-core</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            return create("ktor.client.core");
-        }
-
-        /**
-         * Dependency provider for <b>logging</b> with <b>io.ktor:ktor-client-logging</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getLogging() {
-            return create("ktor.client.logging");
-        }
-
-        /**
-         * Group of libraries at <b>ktor.client.content</b>
-         */
-        public KtorClientContentLibraryAccessors getContent() {
-            return laccForKtorClientContentLibraryAccessors;
-        }
-
-    }
-
-    public static class KtorClientContentLibraryAccessors extends SubDependencyFactory {
-
-        public KtorClientContentLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>negotiation</b> with <b>io.ktor:ktor-client-content-negotiation</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getNegotiation() {
-            return create("ktor.client.content.negotiation");
-        }
-
-    }
-
-    public static class KtorSerializationLibraryAccessors extends SubDependencyFactory {
-        private final KtorSerializationKotlinxLibraryAccessors laccForKtorSerializationKotlinxLibraryAccessors = new KtorSerializationKotlinxLibraryAccessors(owner);
-
-        public KtorSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>ktor.serialization.kotlinx</b>
-         */
-        public KtorSerializationKotlinxLibraryAccessors getKotlinx() {
-            return laccForKtorSerializationKotlinxLibraryAccessors;
-        }
-
-    }
-
-    public static class KtorSerializationKotlinxLibraryAccessors extends SubDependencyFactory {
-
-        public KtorSerializationKotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>io.ktor:ktor-serialization-kotlinx-json</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            return create("ktor.serialization.kotlinx.json");
-        }
-
-    }
-
-    public static class VersionAccessors extends VersionFactory  {
-
-        public VersionAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Version alias <b>activityCompose</b> with value <b>1.9.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getActivityCompose() { return getVersion("activityCompose"); }
-
-        /**
-         * Version alias <b>agp</b> with value <b>8.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAgp() { return getVersion("agp"); }
-
-        /**
-         * Version alias <b>appcompat</b> with value <b>1.7.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAppcompat() { return getVersion("appcompat"); }
-
-        /**
-         * Version alias <b>cardview</b> with value <b>1.0.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCardview() { return getVersion("cardview"); }
-
-        /**
-         * Version alias <b>coil</b> with value <b>3.0.0-rc01</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoil() { return getVersion("coil"); }
-
-        /**
-         * Version alias <b>composeBom</b> with value <b>2024.10.00</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getComposeBom() { return getVersion("composeBom"); }
-
-        /**
-         * Version alias <b>coreKtx</b> with value <b>1.13.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoreKtx() { return getVersion("coreKtx"); }
-
-        /**
-         * Version alias <b>dataStore</b> with value <b>1.1.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getDataStore() { return getVersion("dataStore"); }
-
-        /**
-         * Version alias <b>espressoCore</b> with value <b>3.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getEspressoCore() { return getVersion("espressoCore"); }
-
-        /**
-         * Version alias <b>junit</b> with value <b>4.13.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunit() { return getVersion("junit"); }
-
-        /**
-         * Version alias <b>junitVersion</b> with value <b>1.2.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunitVersion() { return getVersion("junitVersion"); }
-
-        /**
-         * Version alias <b>kotlin</b> with value <b>1.9.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlin() { return getVersion("kotlin"); }
-
-        /**
-         * Version alias <b>kotlinSerialization</b> with value <b>1.6.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlinSerialization() { return getVersion("kotlinSerialization"); }
-
-        /**
-         * Version alias <b>ktor</b> with value <b>2.3.12</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKtor() { return getVersion("ktor"); }
-
-        /**
-         * Version alias <b>lifecycleRuntimeKtx</b> with value <b>2.8.6</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getLifecycleRuntimeKtx() { return getVersion("lifecycleRuntimeKtx"); }
-
-        /**
-         * Version alias <b>navigationCompose</b> with value <b>2.8.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getNavigationCompose() { return getVersion("navigationCompose"); }
-
-        /**
-         * Version alias <b>room</b> with value <b>2.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getRoom() { return getVersion("room"); }
-
-        /**
-         * Version alias <b>splashScreen</b> with value <b>1.0.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getSplashScreen() { return getVersion("splashScreen"); }
-
-    }
-
-    public static class BundleAccessors extends BundleFactory {
-
-        public BundleAccessors(ObjectFactory objects, ProviderFactory providers, DefaultVersionCatalog config, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) { super(objects, providers, config, attributesFactory, capabilityNotationParser); }
-
-        /**
-         * Dependency bundle provider for <b>coil</b> which contains the following dependencies:
-         * <ul>
-         *    <li>io.coil-kt.coil3:coil-compose</li>
-         *    <li>io.coil-kt.coil3:coil-network-okhttp</li>
-         * </ul>
-         * <p>
-         * This bundle was declared in catalog libs.versions.toml
-         */
-        public Provider<ExternalModuleDependencyBundle> getCoil() {
-            return createBundle("coil");
-        }
-
-        /**
-         * Dependency bundle provider for <b>ktor</b> which contains the following dependencies:
-         * <ul>
-         *    <li>io.ktor:ktor-client-cio</li>
-         *    <li>io.ktor:ktor-client-content-negotiation</li>
-         *    <li>io.ktor:ktor-client-core</li>
-         *    <li>io.ktor:ktor-client-logging</li>
-         *    <li>io.ktor:ktor-serialization-kotlinx-json</li>
-         * </ul>
-         * <p>
-         * This bundle was declared in catalog libs.versions.toml
-         */
-        public Provider<ExternalModuleDependencyBundle> getKtor() {
-            return createBundle("ktor");
-        }
-
-    }
-
-    public static class PluginAccessors extends PluginFactory {
-        private final AndroidPluginAccessors paccForAndroidPluginAccessors = new AndroidPluginAccessors(providers, config);
-        private final JetbrainsPluginAccessors paccForJetbrainsPluginAccessors = new JetbrainsPluginAccessors(providers, config);
-
-        public PluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.android</b>
-         */
-        public AndroidPluginAccessors getAndroid() {
-            return paccForAndroidPluginAccessors;
-        }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains</b>
-         */
-        public JetbrainsPluginAccessors getJetbrains() {
-            return paccForJetbrainsPluginAccessors;
-        }
-
-    }
-
-    public static class AndroidPluginAccessors extends PluginFactory {
-
-        public AndroidPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>android.application</b> with plugin id <b>com.android.application</b> and
-         * with version reference <b>agp</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getApplication() { return createPlugin("android.application"); }
-
-    }
-
-    public static class JetbrainsPluginAccessors extends PluginFactory {
-        private final JetbrainsKotlinPluginAccessors paccForJetbrainsKotlinPluginAccessors = new JetbrainsKotlinPluginAccessors(providers, config);
-
-        public JetbrainsPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains.kotlin</b>
-         */
-        public JetbrainsKotlinPluginAccessors getKotlin() {
-            return paccForJetbrainsKotlinPluginAccessors;
-        }
-
-    }
-
-    public static class JetbrainsKotlinPluginAccessors extends PluginFactory {
-
-        public JetbrainsKotlinPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.android</b> with plugin id <b>org.jetbrains.kotlin.android</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getAndroid() { return createPlugin("jetbrains.kotlin.android"); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.serialization</b> with plugin id <b>org.jetbrains.kotlin.plugin.serialization</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getSerialization() { return createPlugin("jetbrains.kotlin.serialization"); }
-
-    }
-
-}
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/data/model/Event.kt
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/model/Event.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/model/Event.kt
deleted file mode 100644
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/model/Event.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,10 +0,0 @@
-package proyecto_moviles.uvg.edu.gt.data.model
-
-import kotlinx.serialization.Serializable
-
-@Serializable
-data class Event(
-    val title: String,
-    val description: String,
-    val date: String
-)
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/shelved.patch	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,1409 +0,0 @@
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt
-rename from app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt
-rename to app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt	(date 1730086191781)
-@@ -13,13 +13,76 @@
- import androidx.compose.ui.Alignment
- import androidx.compose.ui.Modifier
- import androidx.compose.ui.text.font.FontWeight
--import androidx.compose.ui.tooling.preview.Preview
- import androidx.compose.ui.unit.sp
- import androidx.compose.material3.MaterialTheme
-+import androidx.compose.runtime.collectAsState
-+import androidx.lifecycle.viewmodel.compose.viewModel
- import proyecto_moviles.uvg.edu.gt.R
-+import proyecto_moviles.uvg.edu.gt.presentacion.Inicio.StartState
-+import proyecto_moviles.uvg.edu.gt.presentacion.Inicio.StartViewModel
-+import proyecto_moviles.uvg.edu.gt.presentacion.common.ErrorView
-+import proyecto_moviles.uvg.edu.gt.presentacion.common.LoadingView
-+
-+@Composable
-+fun StartRoute(
-+    viewModel: StartViewModel = viewModel(factory = StartViewModel.Factory),
-+    onLoginClick: () -> Unit,
-+    onSignUpClick: () -> Unit
-+){
-+    val state = viewModel.state.collectAsState()
-+
-+    StartScreen(
-+        state = state,
-+        onLoginClick = onLoginClick,
-+        onSignUpClick = onSignUpClick,
-+        modifier = Modifier.fillMaxSize()
-+    )
-+}
-+
-+@Composable
-+fun StartScreen(
-+    state: StartState,
-+    onLoginClick: () -> Unit,
-+    onSignUpClick: () -> Unit,
-+    modifier: Modifier
-+){
-+    Box(
-+        modifier = Modifier
-+    ){
-+        when{
-+            state.isLoading -> {
-+                LoadingView(
-+                    modifier = Modifier.align(Alignment.Center)
-+                )
-+            }
-+
-+            state.isError -> {
-+                ErrorView(
-+                    onRetryClick = { /*TODO*/ },
-+                    modifier = Modifier.align(Alignment.Center)
-+                )
-+            }
-+            else{
-+                items(state.data) { user ->
-+                    StartItem(
-+                        user = user,
-+                        onLoginClick = onLoginClick,
-+                        onSignUpClick = onSignUpClick,
-+                        modifier = Modifier.fillMaxSize(),
-+                }
-+
-+            }
-+        }
-+    }
-+}
- 
- @Composable
--fun LoginScreen() {
-+private fun StartItem(
-+    onLoginClick: () -> Unit,
-+    onSignUpClick: () -> Unit,
-+    modifier: Modifier = Modifier
-+
-+) {
-     Column(
-         modifier = Modifier
-             .fillMaxSize()
-@@ -39,7 +102,7 @@
- 
- 
-         Button(
--            onClick = { /* Acción para Log In */ },
-+            onClick = onLoginClick,
-             colors = ButtonDefaults.buttonColors(
-                 containerColor = MaterialTheme.colorScheme.primary
-             ),
-@@ -60,7 +123,7 @@
- 
- 
-         Button(
--            onClick = { /* Acción para Sign Up */ },
-+            onClick = onSignUpClick,
-             colors = ButtonDefaults.buttonColors(
-                 containerColor = MaterialTheme.colorScheme.onPrimaryContainer
-             ),
-@@ -79,10 +142,4 @@
-     }
- }
- 
--@Preview(showBackground = true)
--@Composable
--fun LoginScreenPreview() {
--    MaterialTheme {
--        LoginScreen()
--    }
--}
-+
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ /dev/null	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-@@ -1,170 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.New_Task
--
--import android.app.DatePickerDialog
--import android.content.Context
--import androidx.compose.foundation.Image
--import androidx.compose.foundation.layout.*
--import androidx.compose.material.icons.Icons
--import androidx.compose.material.icons.automirrored.filled.ArrowBack
--import androidx.compose.material.icons.filled.DateRange
--import androidx.compose.material.icons.filled.Edit
--import androidx.compose.material3.*
--import androidx.compose.runtime.*
--import androidx.compose.ui.Alignment
--import androidx.compose.ui.Modifier
--import androidx.compose.ui.graphics.vector.ImageVector
--import androidx.compose.ui.layout.ContentScale
--import androidx.compose.ui.platform.LocalContext
--import androidx.compose.ui.res.vectorResource
--import androidx.compose.ui.tooling.preview.Preview
--import androidx.compose.ui.unit.dp
--import proyecto_moviles.uvg.edu.gt.R
--import java.util.*
--
--@OptIn(ExperimentalMaterial3Api::class)
--@Composable
--fun NewTaskScreen() {
--    var startDate by remember { mutableStateOf("") }
--    var endDate by remember { mutableStateOf("") }
--    val context = LocalContext.current
--
--    Scaffold(
--        topBar = {
--            CenterAlignedTopAppBar(
--                title = { Text("New Task") },
--                navigationIcon = {
--                    IconButton(onClick = { /* Acción al presionar botón de volver */ }) {
--                        Icon(Icons.AutoMirrored.Filled.ArrowBack, contentDescription = "Back")
--                    }
--                }
--            )
--        }
--    ) { paddingValues ->
--        Column(
--            modifier = Modifier
--                .padding(paddingValues)
--                .padding(16.dp)
--        ) {
--            // Imagen
--            Image(
--                imageVector = ImageVector.vectorResource(id = R.drawable.ic_launcher_foreground),
--                contentDescription = "Task icon",
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .wrapContentHeight()
--                    .padding(16.dp),
--                contentScale = ContentScale.Fit
--            )
--
--            // Nombre de la tarea
--            OutlinedTextField(
--                value = "",
--                onValueChange = {},
--                label = { Text("Task name") },
--                modifier = Modifier.fillMaxWidth(),
--                trailingIcon = {
--                    Icon(Icons.Filled.Edit, contentDescription = "Edit task name")
--                }
--            )
--
--            Spacer(modifier = Modifier.height(8.dp))
--
--            // Descripción de la tarea
--            OutlinedTextField(
--                value = "",
--                onValueChange = {},
--                label = { Text("Task description") },
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .padding(vertical = 8.dp),
--                trailingIcon = {
--                    Icon(Icons.Filled.Edit, contentDescription = "Edit task description")
--                }
--            )
--
--            Spacer(modifier = Modifier.height(8.dp))
--
--            // Campo de fecha de inicio
--            DatePickerField(
--                label = "Start date",
--                selectedDate = startDate,
--                onDateSelected = { startDate = it },
--                context = context
--            )
--
--            Spacer(modifier = Modifier.height(8.dp))
--
--            // Campo de fecha de fin
--            DatePickerField(
--                label = "End date",
--                selectedDate = endDate,
--                onDateSelected = { endDate = it },
--                context = context
--            )
--
--            Spacer(modifier = Modifier.height(16.dp))
--
--            // Botón de guardar
--            Box(
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .padding(top = 16.dp),
--                contentAlignment = Alignment.Center
--            ) {
--                Button(
--                    onClick = { /* Acción para guardar tarea */ }
--                ) {
--                    Text("Save")
--                }
--            }
--        }
--    }
--}
--
--@Composable
--fun DatePickerField(
--    label: String,
--    selectedDate: String,
--    onDateSelected: (String) -> Unit,
--    context: Context
--) {
--    OutlinedTextField(
--        value = selectedDate,
--        onValueChange = { /* No hace nada porque es solo lectura */ },
--        label = { Text(label) },
--        placeholder = { Text("mm/dd/yyyy") },
--        modifier = Modifier
--            .fillMaxWidth()
--            .padding(bottom = 8.dp),
--        trailingIcon = {
--            IconButton(onClick = {
--                showDatePicker(context, onDateSelected)
--            }) {
--                Icon(imageVector = Icons.Filled.DateRange, contentDescription = "Select $label")
--            }
--        },
--        readOnly = true
--    )
--}
--
--fun showDatePicker(context: Context, onDateSelected: (String) -> Unit) {
--    val calendar = Calendar.getInstance()
--    val year = calendar.get(Calendar.YEAR)
--    val month = calendar.get(Calendar.MONTH)
--    val day = calendar.get(Calendar.DAY_OF_MONTH)
--
--    DatePickerDialog(
--        context,
--        { _, selectedYear, selectedMonth, selectedDay ->
--            val selectedDate = "${selectedMonth + 1}/$selectedDay/$selectedYear"
--            onDateSelected(selectedDate)
--        },
--        year, month, day
--    ).show()
--}
--
--@Preview(showBackground = true)
--@Composable
--fun NewTaskView() {
--    NewTaskScreen()
--}
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ /dev/null	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-@@ -1,20 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Projects
--
--import androidx.navigation.NavGraphBuilder
--import androidx.navigation.compose.composable
--import kotlinx.serialization.Serializable
--
--@Serializable
--data object ProjectsDestination
--
--fun NavGraphBuilder.projectsScreen(
--    onProjectClick: () -> Unit,
--    onAddProjectClick: () -> Unit
--) {
--    composable<ProjectsDestination> {
--        ProjectsScreen(
--            onSelectClick = onProjectClick,
--            onAddProjectClick = onAddProjectClick
--        )
--    }
--}
-Index: .idea/modules/app/Proyecto-moviles.app.iml
-===================================================================
-diff --git a/.idea/modules/app/Proyecto-moviles.app.iml b/.idea/modules/app/Proyecto-moviles.app.iml
-deleted file mode 100644
---- a/.idea/modules/app/Proyecto-moviles.app.iml	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ /dev/null	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-@@ -1,9 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<module version="4">
--  <component name="ModuleClassLoaderOverlays">
--    <paths>
--      <option value="C:\Users\paula\AppData\Local\Temp\overlay4077726220542928961" />
--      <option value="C:\Users\paula\AppData\Local\Temp\overlay5248428913140422612" />
--    </paths>
--  </component>
--</module>
-\ No newline at end of file
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ /dev/null	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-@@ -1,37 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.data.api
--
--import io.ktor.client.HttpClient
--import io.ktor.client.engine.cio.CIO
--import io.ktor.client.plugins.contentnegotiation.ContentNegotiation
--import io.ktor.client.plugins.defaultRequest
--import io.ktor.client.plugins.logging.ANDROID
--import io.ktor.client.plugins.logging.LogLevel
--import io.ktor.client.plugins.logging.Logger
--import io.ktor.client.plugins.logging.Logging
--import io.ktor.http.ContentType
--import io.ktor.http.contentType
--import io.ktor.serialization.kotlinx.json.json
--import kotlinx.serialization.json.Json
--
--object HttpClientFactory {
--    fun create(): HttpClient {
--        return HttpClient(CIO.create()){
--            install (Logging) {
--                logger = Logger.ANDROID
--                level = LogLevel.ALL
--            }
--
--            install (ContentNegotiation) {
--                json(
--                    json = Json{
--                        ignoreUnknownKeys = true
--                    }
--                )
--            }
--
--            defaultRequest {
--                contentType(ContentType.Application.Json)
--            }
--        }
--    }
--}
-\ No newline at end of file
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ /dev/null	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-@@ -1,2 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.New_Task
--
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ /dev/null	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-@@ -1,2 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Sing_up
--
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ /dev/null	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-@@ -1,186 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Projects
--
--import androidx.compose.foundation.background
--import androidx.compose.foundation.layout.Arrangement
--import androidx.compose.foundation.layout.Box
--import androidx.compose.foundation.layout.Column
--import androidx.compose.foundation.layout.Row
--import androidx.compose.foundation.layout.Spacer
--import androidx.compose.foundation.layout.fillMaxSize
--import androidx.compose.foundation.layout.fillMaxWidth
--import androidx.compose.foundation.layout.height
--import androidx.compose.foundation.layout.padding
--import androidx.compose.foundation.layout.size
--import androidx.compose.foundation.layout.width
--import androidx.compose.material.DropdownMenuItem
--import androidx.compose.material.Icon
--import androidx.compose.material.IconButton
--import androidx.compose.material.icons.Icons
--import androidx.compose.material.icons.filled.ArrowDropUp
--import androidx.compose.material3.Button
--import androidx.compose.material3.DropdownMenu
--import androidx.compose.material3.Text
--import androidx.compose.material3.TextField
--import androidx.compose.runtime.Composable
--import androidx.compose.runtime.getValue
--import androidx.compose.runtime.mutableStateOf
--import androidx.compose.runtime.remember
--import androidx.compose.runtime.setValue
--import androidx.compose.ui.Alignment
--import androidx.compose.ui.Modifier
--import androidx.compose.ui.graphics.Color
--import androidx.compose.ui.text.font.FontWeight
--import androidx.compose.ui.tooling.preview.Preview
--import androidx.compose.ui.unit.dp
--import androidx.compose.ui.unit.sp
--
--@Composable
--fun CreateProjectScreenContent() {
--    var projectNameCps by remember { mutableStateOf("") }
--    var descriptionCps by remember { mutableStateOf("") }
--    var inviteEmailCps by remember { mutableStateOf("") }
--    var generalAccessCps by remember { mutableStateOf("Private") }
--
--    Column(
--        modifier = Modifier
--            .fillMaxSize()
--            .padding(16.dp),
--        verticalArrangement = Arrangement.Top,
--        horizontalAlignment = Alignment.CenterHorizontally
--    ) {
--        // Image Placeholder
--        Box(
--            modifier = Modifier
--                .size(200.dp)
--                .background(Color.Gray),
--            contentAlignment = Alignment.Center
--        ) {
--            // Placeholder para la imagen
--            Column(horizontalAlignment = Alignment.CenterHorizontally) {
--                Icon(
--                    imageVector = Icons.Filled.ArrowDropUp,
--                    contentDescription = "Image Placeholder",
--                    modifier = Modifier.size(50.dp)
--                )
--                Spacer(modifier = Modifier.height(16.dp))
--                Text(text = "1st", fontSize = 20.sp, fontWeight = FontWeight.Bold)
--            }
--        }
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        Column(
--            modifier = Modifier.fillMaxWidth(),
--            horizontalAlignment = Alignment.Start
--        ) {
--            // Project name
--            Text(
--                text = "Project Name:",
--                fontSize = 17.sp,
--                modifier = Modifier.align(Alignment.Start)
--            )
--
--            TextField(
--                value = projectNameCps,
--                onValueChange = { projectNameCps = it },
--                label = { Text("Project name") },
--                modifier = Modifier.fillMaxWidth()
--            )
--        }
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        // General Access
--        Text(
--            text = "General Access:",
--            fontSize = 17.sp,
--            modifier = Modifier.align(Alignment.Start)
--        )
--        var expandedCps by remember { mutableStateOf(false) }
--        Box(modifier = Modifier.fillMaxWidth()) {
--            TextField(
--                value = generalAccessCps,
--                onValueChange = {},
--                modifier = Modifier.fillMaxWidth(),
--                readOnly = true,
--                trailingIcon = {
--                    IconButton(onClick = { expandedCps = true }) {
--                        Icon(
--                            imageVector = Icons.Filled.ArrowDropUp,
--                            contentDescription = "Dropdown Icon"
--                        )
--                    }
--                }
--            )
--            DropdownMenu(
--                expanded = expandedCps,
--                onDismissRequest = { expandedCps = false }
--            ) {
--                DropdownMenuItem(onClick = {
--                    generalAccessCps = "Private"
--                    expandedCps = false
--                }) {
--                    Text("Private")
--                }
--                DropdownMenuItem(onClick = {
--                    generalAccessCps = "Public"
--                    expandedCps = false
--                }) {
--                    Text("Public")
--                }
--            }
--        }
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        // Description
--        Text(
--            text = "Description:",
--            fontSize = 17.sp,
--            modifier = Modifier.align(Alignment.Start)
--        )
--        TextField(
--            value = descriptionCps,
--            onValueChange = { descriptionCps = it },
--            label = { Text("Description") },
--            modifier = Modifier.fillMaxWidth()
--        )
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        // Invite
--        Text(
--            text = "Invite:",
--            fontSize = 17.sp,
--            modifier = Modifier.align(Alignment.Start)
--        )
--        Row(verticalAlignment = Alignment.CenterVertically) {
--            TextField(
--                value = inviteEmailCps,
--                onValueChange = { inviteEmailCps = it },
--                label = { Text("Invite") },
--                modifier = Modifier.weight(1f)
--            )
--            Spacer(modifier = Modifier.width(8.dp))
--            Button(onClick = { /* Logic to handle invite */ }) {
--                Text("Done")
--            }
--        }
--
--        Spacer(modifier = Modifier.height(24.dp))
--
--        // Create Project Button
--        Button(
--            onClick = { /* Logic to handle project creation */ },
--            modifier = Modifier.fillMaxWidth()
--        ) {
--            Text("Create Project")
--        }
--    }
--}
--
--@Preview(showBackground = true)
--@Composable
--fun PreviewCreateProjectScreenContent() {
--    CreateProjectScreenContent()
--}
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ /dev/null	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-@@ -1,128 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Sign_up
--
--import androidx.compose.foundation.Image
--import androidx.compose.foundation.background
--import androidx.compose.foundation.layout.*
--import androidx.compose.material3.*
--import androidx.compose.runtime.*
--import androidx.compose.ui.Alignment
--import androidx.compose.ui.Modifier
--import androidx.compose.ui.graphics.graphicsLayer
--import androidx.compose.ui.res.painterResource
--import androidx.compose.ui.text.font.FontWeight
--import androidx.compose.ui.text.input.PasswordVisualTransformation
--import androidx.compose.ui.text.input.VisualTransformation
--import androidx.compose.ui.tooling.preview.Preview
--import androidx.compose.ui.unit.dp
--import androidx.compose.ui.unit.sp
--import proyecto_moviles.uvg.edu.gt.R
--
--@Composable
--fun SignUpScreen() {
--    Box(
--        modifier = Modifier
--            .fillMaxSize()
--            .background(MaterialTheme.colorScheme.tertiary)
--    ) {
--
--        Image(
--            painter = painterResource(id = R.drawable.logo),
--            contentDescription = "SignUp Background Logo",
--            modifier = Modifier
--                .fillMaxSize()
--                .graphicsLayer {
--                    alpha = 0.1f
--                }
--        )
--
--        Column(
--            modifier = Modifier
--                .fillMaxSize()
--                .padding(24.dp),
--            horizontalAlignment = Alignment.CenterHorizontally,
--            verticalArrangement = Arrangement.Center
--        ) {
--
--
--
--            Text(
--                text = "Create a New Account",
--                color = MaterialTheme.colorScheme.onTertiary,
--                fontSize = 55.sp,
--                fontWeight = FontWeight.Bold,
--                modifier = Modifier.padding(bottom = 32.dp)
--            )
--
--            val username = remember { mutableStateOf("") }
--            TextField(
--                value = username.value,
--                onValueChange = { username.value = it },
--                label = { Text("Username") },
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .padding(bottom = 16.dp)
--            )
--
--            val email = remember { mutableStateOf("") }
--            TextField(
--                value = email.value,
--                onValueChange = { email.value = it },
--                label = { Text("Email") },
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .padding(bottom = 16.dp)
--            )
--
--            val password = remember { mutableStateOf("") }
--            val passwordVisible = remember { mutableStateOf(false) }
--            TextField(
--                value = password.value,
--                onValueChange = { password.value = it },
--                label = { Text("Password") },
--                visualTransformation = if (passwordVisible.value) VisualTransformation.None else PasswordVisualTransformation(),
--                trailingIcon = {
--                    IconButton(onClick = { passwordVisible.value = !passwordVisible.value }) {
--                        Icon(
--                            painter = painterResource(id = R.drawable.visibility_24px),
--                            contentDescription = if (passwordVisible.value) "Hide password" else "Show password"
--                        )
--                    }
--                },
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .padding(bottom = 16.dp)
--            )
--
--            Button(
--                onClick = { /* Acción de Sign Up */ },
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .height(50.dp)
--                    .padding(bottom = 8.dp),
--                colors = ButtonDefaults.buttonColors(MaterialTheme.colorScheme.onTertiaryContainer)
--            ) {
--                Text(text = "Sign Up", color = MaterialTheme.colorScheme.tertiaryContainer)
--            }
--
--            Spacer(modifier = Modifier.height(16.dp))
--
--            Column(
--                horizontalAlignment = Alignment.CenterHorizontally,
--                modifier = Modifier.fillMaxWidth()
--            ) {
--                Text(text = "Have an account?", color = MaterialTheme.colorScheme.onBackground)
--                Spacer(modifier = Modifier.width(4.dp))
--                TextButton(onClick = { /* Acción de Log In */ }) {
--                    Text(text = "  Log In", color = MaterialTheme.colorScheme.onTertiaryContainer, fontWeight = FontWeight.Bold, modifier = Modifier.width(60.dp))
--                }
--            }
--        }
--    }
--}
--
--@Preview(showBackground = true)
--@Composable
--fun SignUpScreenPreview() {
--    SignUpScreen()
--}
--
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ /dev/null	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-@@ -1,14 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Create_Proyecto
--
--import androidx.navigation.NavGraphBuilder
--import androidx.navigation.compose.composable
--import kotlinx.serialization.Serializable
--
--@Serializable
--data object CreateProjectDestination
--
--fun NavGraphBuilder.createProjectScreen() {
--    composable<CreateProjectDestination> {
--        CreateProjectScreenContent()
--    }
--}
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ /dev/null	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-@@ -1,2 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Inicio
--
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ /dev/null	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-@@ -1,186 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Create_Proyecto
--
--import androidx.compose.foundation.background
--import androidx.compose.foundation.layout.Arrangement
--import androidx.compose.foundation.layout.Box
--import androidx.compose.foundation.layout.Column
--import androidx.compose.foundation.layout.Row
--import androidx.compose.foundation.layout.Spacer
--import androidx.compose.foundation.layout.fillMaxSize
--import androidx.compose.foundation.layout.fillMaxWidth
--import androidx.compose.foundation.layout.height
--import androidx.compose.foundation.layout.padding
--import androidx.compose.foundation.layout.size
--import androidx.compose.foundation.layout.width
--import androidx.compose.material.DropdownMenuItem
--import androidx.compose.material.Icon
--import androidx.compose.material.IconButton
--import androidx.compose.material.icons.Icons
--import androidx.compose.material.icons.filled.ArrowDropUp
--import androidx.compose.material3.Button
--import androidx.compose.material3.DropdownMenu
--import androidx.compose.material3.Text
--import androidx.compose.material3.TextField
--import androidx.compose.runtime.Composable
--import androidx.compose.runtime.getValue
--import androidx.compose.runtime.mutableStateOf
--import androidx.compose.runtime.remember
--import androidx.compose.runtime.setValue
--import androidx.compose.ui.Alignment
--import androidx.compose.ui.Modifier
--import androidx.compose.ui.graphics.Color
--import androidx.compose.ui.text.font.FontWeight
--import androidx.compose.ui.tooling.preview.Preview
--import androidx.compose.ui.unit.dp
--import androidx.compose.ui.unit.sp
--
--@Composable
--fun CreateProjectScreenContent() {
--    var projectNameCps by remember { mutableStateOf("") }
--    var descriptionCps by remember { mutableStateOf("") }
--    var inviteEmailCps by remember { mutableStateOf("") }
--    var generalAccessCps by remember { mutableStateOf("Private") }
--
--    Column(
--        modifier = Modifier
--            .fillMaxSize()
--            .padding(16.dp),
--        verticalArrangement = Arrangement.Top,
--        horizontalAlignment = Alignment.CenterHorizontally
--    ) {
--        // Image Placeholder
--        Box(
--            modifier = Modifier
--                .size(200.dp)
--                .background(Color.Gray),
--            contentAlignment = Alignment.Center
--        ) {
--            // Placeholder para la imagen
--            Column(horizontalAlignment = Alignment.CenterHorizontally) {
--                Icon(
--                    imageVector = Icons.Filled.ArrowDropUp,
--                    contentDescription = "Image Placeholder",
--                    modifier = Modifier.size(50.dp)
--                )
--                Spacer(modifier = Modifier.height(16.dp))
--                Text(text = "1st", fontSize = 20.sp, fontWeight = FontWeight.Bold)
--            }
--        }
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        Column(
--            modifier = Modifier.fillMaxWidth(),
--            horizontalAlignment = Alignment.Start
--        ) {
--            // Project name
--            Text(
--                text = "Project Name:",
--                fontSize = 17.sp,
--                modifier = Modifier.align(Alignment.Start)
--            )
--
--            TextField(
--                value = projectNameCps,
--                onValueChange = { projectNameCps = it },
--                label = { Text("Project name") },
--                modifier = Modifier.fillMaxWidth()
--            )
--        }
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        // General Access
--        Text(
--            text = "General Access:",
--            fontSize = 17.sp,
--            modifier = Modifier.align(Alignment.Start)
--        )
--        var expandedCps by remember { mutableStateOf(false) }
--        Box(modifier = Modifier.fillMaxWidth()) {
--            TextField(
--                value = generalAccessCps,
--                onValueChange = {},
--                modifier = Modifier.fillMaxWidth(),
--                readOnly = true,
--                trailingIcon = {
--                    IconButton(onClick = { expandedCps = true }) {
--                        Icon(
--                            imageVector = Icons.Filled.ArrowDropUp,
--                            contentDescription = "Dropdown Icon"
--                        )
--                    }
--                }
--            )
--            DropdownMenu(
--                expanded = expandedCps,
--                onDismissRequest = { expandedCps = false }
--            ) {
--                DropdownMenuItem(onClick = {
--                    generalAccessCps = "Private"
--                    expandedCps = false
--                }) {
--                    Text("Private")
--                }
--                DropdownMenuItem(onClick = {
--                    generalAccessCps = "Public"
--                    expandedCps = false
--                }) {
--                    Text("Public")
--                }
--            }
--        }
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        // Description
--        Text(
--            text = "Description:",
--            fontSize = 17.sp,
--            modifier = Modifier.align(Alignment.Start)
--        )
--        TextField(
--            value = descriptionCps,
--            onValueChange = { descriptionCps = it },
--            label = { Text("Description") },
--            modifier = Modifier.fillMaxWidth()
--        )
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        // Invite
--        Text(
--            text = "Invite:",
--            fontSize = 17.sp,
--            modifier = Modifier.align(Alignment.Start)
--        )
--        Row(verticalAlignment = Alignment.CenterVertically) {
--            TextField(
--                value = inviteEmailCps,
--                onValueChange = { inviteEmailCps = it },
--                label = { Text("Invite") },
--                modifier = Modifier.weight(1f)
--            )
--            Spacer(modifier = Modifier.width(8.dp))
--            Button(onClick = { /* Logic to handle invite */ }) {
--                Text("Done")
--            }
--        }
--
--        Spacer(modifier = Modifier.height(24.dp))
--
--        // Create Project Button
--        Button(
--            onClick = { /* Logic to handle project creation */ },
--            modifier = Modifier.fillMaxWidth()
--        ) {
--            Text("Create Project")
--        }
--    }
--}
--
--@Preview(showBackground = true)
--@Composable
--fun PreviewCreateProjectScreenContent() {
--    CreateProjectScreenContent()
--}
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt
-new file mode 100644
---- /dev/null	(date 1730085306341)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt	(date 1730085306341)
-@@ -0,0 +1,19 @@
-+package proyecto_moviles.uvg.edu.gt.Inicio
-+
-+import androidx.navigation.NavGraphBuilder
-+import androidx.navigation.compose.composable
-+import kotlinx.serialization.Serializable
-+
-+@Serializable
-+data object StartDestination
-+
-+fun NavGraphBuilder.StartScreen(
-+    navigatetoStart: () -> Unit
-+){
-+    composable<StartDestination>{
-+        StartRoute(
-+            onLoginClick = navigatetoLogin,
-+            onSignUpClick = navigatetoSignUp
-+        )
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package proyecto_moviles.uvg.edu.gt.login\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.alpha\r\nimport androidx.compose.ui.layout.ContentScale\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport proyecto_moviles.uvg.edu.gt.R\r\n\r\n@Composable\r\nfun LoginScreen() {\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .background(MaterialTheme.colorScheme.tertiary)\r\n    ) {\r\n\r\n        Image(\r\n            painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = null,\r\n            contentScale = ContentScale.Crop,\r\n            modifier = Modifier\r\n                .size(200.dp)\r\n                .offset(x = (-70).dp, y = (-120).dp)\r\n                .alpha(0.2f)\r\n        )\r\n\r\n        Image(\r\n            painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = null,\r\n            contentScale = ContentScale.Crop,\r\n            modifier = Modifier\r\n                .size(200.dp)\r\n                .offset(x = (70).dp, y = (520).dp)\r\n                .alpha(0.2f)\r\n        )\r\n\r\n\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(24.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally,\r\n            verticalArrangement = Arrangement.Center\r\n        ) {\r\n\r\n\r\n            Text(\r\n                text = \"Welcome Back\",\r\n                color = MaterialTheme.colorScheme.onTertiary,\r\n                fontSize = 80.sp,\r\n                fontWeight = FontWeight.Bold,\r\n                modifier = Modifier\r\n                    .padding(bottom = 40.dp)\r\n            )\r\n\r\n\r\n            val username = remember { mutableStateOf(\"\") }\r\n            TextField(\r\n                value = username.value,\r\n                onValueChange = { username.value = it },\r\n                label = { Text(\"Username\", color = MaterialTheme.colorScheme.onSurface) },\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .padding(bottom = 16.dp),\r\n                colors = TextFieldDefaults.colors(\r\n                    focusedContainerColor = MaterialTheme.colorScheme.surface,\r\n                    unfocusedContainerColor = MaterialTheme.colorScheme.surface,\r\n                    focusedIndicatorColor = MaterialTheme.colorScheme.primary,\r\n                    unfocusedIndicatorColor = MaterialTheme.colorScheme.onSurface\r\n                )\r\n            )\r\n\r\n\r\n            val password = remember { mutableStateOf(\"\") }\r\n            val passwordVisible = remember { mutableStateOf(false) }\r\n            TextField(\r\n                value = password.value,\r\n                onValueChange = { password.value = it },\r\n                label = { Text(\"Password\", color = MaterialTheme.colorScheme.onSurface) },\r\n                visualTransformation = if (passwordVisible.value) VisualTransformation.None else PasswordVisualTransformation(),\r\n                trailingIcon = {\r\n                    IconButton(onClick = { passwordVisible.value = !passwordVisible.value }) {\r\n                        Image(\r\n                            painter = if (passwordVisible.value) painterResource(R.drawable.visibility_off_24px) else painterResource(R.drawable.visibility_24px),\r\n                            contentDescription = if (passwordVisible.value) \"Hide password\" else \"Show password\"\r\n                        )\r\n                    }\r\n                },\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .padding(bottom = 16.dp),\r\n                keyboardOptions = KeyboardOptions.Default.copy(keyboardType = KeyboardType.Password),\r\n                colors = TextFieldDefaults.colors(\r\n                    focusedContainerColor = MaterialTheme.colorScheme.surface,\r\n                    unfocusedContainerColor = MaterialTheme.colorScheme.surface,\r\n                    focusedIndicatorColor = MaterialTheme.colorScheme.primary,\r\n                    unfocusedIndicatorColor = MaterialTheme.colorScheme.onSurface\r\n                )\r\n            )\r\n\r\n\r\n            Button(\r\n                onClick = { /* Acción de Log In */ },\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .height(50.dp)\r\n                    .padding(bottom = 8.dp),\r\n                colors = ButtonDefaults.buttonColors(MaterialTheme.colorScheme.onTertiaryContainer)\r\n            ) {\r\n                Text(text = \"Log In\", color = MaterialTheme.colorScheme.tertiaryContainer)\r\n            }\r\n\r\n\r\n\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n\r\n\r\n            Column(\r\n                horizontalAlignment = Alignment.CenterHorizontally,\r\n                modifier = Modifier.fillMaxWidth()\r\n            ) {\r\n                Text(text = \"Don't have an account?\", color = MaterialTheme.colorScheme.onBackground)\r\n                Spacer(modifier = Modifier.width(4.dp))\r\n                TextButton(onClick = { /* Acción de Sign Up */ }) {\r\n                    Text(text = \"Sign Up\", color = MaterialTheme.colorScheme.onTertiaryContainer, fontWeight = FontWeight.Bold, modifier = Modifier.width(60.dp))\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun LoginScreenPreview() {\r\n    LoginScreen()\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt	(date 1730078739431)
-@@ -15,13 +15,47 @@
- import androidx.compose.ui.text.input.KeyboardType
- import androidx.compose.ui.text.input.PasswordVisualTransformation
- import androidx.compose.ui.text.input.VisualTransformation
--import androidx.compose.ui.tooling.preview.Preview
- import androidx.compose.ui.unit.dp
- import androidx.compose.ui.unit.sp
-+import androidx.lifecycle.viewmodel.compose.viewModel
- import proyecto_moviles.uvg.edu.gt.R
-+import proyecto_moviles.uvg.edu.gt.data.model.User
-+import proyecto_moviles.uvg.edu.gt.presentacion.login.Login.LoginEvent
-+import proyecto_moviles.uvg.edu.gt.presentacion.login.Login.LoginState
-+
-+@Composable
-+fun LoginRoute() {
-+    val login = UserApi.getUser().map {UserDTO->
-+        User(
-+            id = UserDTO.id,
-+            email = UserDTO.email,
-+            name = UserDTO.username
-+        )
-+    }
-+
-+    val state by viewModel.state.collectAsState()
-+    LoginScreen(
-+        state = LoginState,
-+        onLoginClick = onLoginClick,
-+        onNavigateToSignUp = onNavigateToSignUp
-+    )
-+}
- 
- @Composable
--fun LoginScreen() {
-+fun LoginScreen(
-+    isLoading: Boolean,
-+    loginSuccessful: Boolean,
-+    onSuccessfulLogin: () -> Unit,
-+    onNavigateToSignUp: () -> Unit,
-+    onLoginClick: () -> Unit,
-+) {
-+
-+    LaunchedEffect(key1 = loginSuccessful) {
-+        if (loginSuccessful) {
-+            onSuccessfulLogin()
-+        }
-+    }
-+
-     Box(
-         modifier = Modifier
-             .fillMaxSize()
-@@ -114,12 +148,13 @@
- 
- 
-             Button(
--                onClick = { /* Acción de Log In */ },
-+                onClick = onLoginClick,
-                 modifier = Modifier
-                     .fillMaxWidth()
-                     .height(50.dp)
-                     .padding(bottom = 8.dp),
-                 colors = ButtonDefaults.buttonColors(MaterialTheme.colorScheme.onTertiaryContainer)
-+                enabled = !isLoading
-             ) {
-                 Text(text = "Log In", color = MaterialTheme.colorScheme.tertiaryContainer)
-             }
-@@ -135,7 +170,7 @@
-             ) {
-                 Text(text = "Don't have an account?", color = MaterialTheme.colorScheme.onBackground)
-                 Spacer(modifier = Modifier.width(4.dp))
--                TextButton(onClick = { /* Acción de Sign Up */ }) {
-+                TextButton(onClick = onNavigateToSignUp) {
-                     Text(text = "Sign Up", color = MaterialTheme.colorScheme.onTertiaryContainer, fontWeight = FontWeight.Bold, modifier = Modifier.width(60.dp))
-                 }
-             }
-@@ -143,8 +178,3 @@
-     }
- }
- 
--@Preview(showBackground = true)
--@Composable
--fun LoginScreenPreview() {
--    LoginScreen()
--}
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package proyecto_moviles.uvg.edu.gt.Calendar\r\n\r\nimport android.widget.CalendarView\r\nimport androidx.compose.animation.*\r\nimport androidx.compose.animation.core.tween\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.automirrored.filled.ArrowBack\r\nimport androidx.compose.material.icons.automirrored.filled.List\r\nimport androidx.compose.material.icons.filled.*\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.viewinterop.AndroidView\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\n@OptIn(ExperimentalAnimationApi::class, ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun CalendarScreen() {\r\n    var selectedDate by remember { mutableStateOf(\"\") }\r\n\r\n    val formatter = SimpleDateFormat(\"EEE, MMM dd\", Locale.getDefault())\r\n\r\n    Scaffold(\r\n        topBar = {\r\n            TopAppBar(\r\n                title = { Text(\"Calendar\") },\r\n                navigationIcon = {\r\n                    IconButton(onClick = { /* Acción para retroceder */ }) {\r\n                        Icon(Icons.AutoMirrored.Filled.ArrowBack, contentDescription = \"Back\")\r\n                    }\r\n                },\r\n                colors = TopAppBarDefaults.topAppBarColors(\r\n                    containerColor = MaterialTheme.colorScheme.primaryContainer,\r\n                    titleContentColor = MaterialTheme.colorScheme.onPrimaryContainer\r\n                )\r\n            )\r\n        },\r\n        content = { paddingValues ->\r\n            Column(\r\n                modifier = Modifier\r\n                    .fillMaxSize()\r\n                    .padding(paddingValues)\r\n                    .padding(16.dp)\r\n                    .background(MaterialTheme.colorScheme.surface)\r\n            ) {\r\n\r\n                AnimatedContent(\r\n                    targetState = selectedDate,\r\n                    transitionSpec = {\r\n                        (fadeIn(animationSpec = tween(300)) + slideInVertically()).togetherWith(\r\n                            fadeOut(animationSpec = tween(300)) + slideOutVertically()\r\n                        )\r\n                    }, label = \"\"\r\n                ) { targetDate ->\r\n                    Text(\r\n                        text = targetDate.ifEmpty { \"Mon, Aug 17\" },\r\n                        style = MaterialTheme.typography.headlineMedium,\r\n                        color = MaterialTheme.colorScheme.onSurface,\r\n                        modifier = Modifier.padding(bottom = 16.dp)\r\n                    )\r\n                }\r\n\r\n                Card(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(bottom = 16.dp),\r\n                    colors = CardDefaults.cardColors(\r\n                        containerColor = MaterialTheme.colorScheme.primaryContainer\r\n                    ),\r\n                    elevation = CardDefaults.cardElevation(4.dp)\r\n                ) {\r\n                    AndroidView(\r\n                        factory = { CalendarView(it).apply {\r\n                            setOnDateChangeListener { _, year, month, dayOfMonth ->\r\n                                val calendar = Calendar.getInstance()\r\n                                calendar.set(year, month, dayOfMonth)\r\n                                selectedDate = formatter.format(calendar.time)\r\n                            }\r\n                        }},\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .padding(8.dp)\r\n                    )\r\n                }\r\n\r\n                AnimatedVisibility(\r\n                    visible = selectedDate.isNotEmpty(),\r\n                    enter = fadeIn() + expandVertically(),\r\n                    exit = fadeOut() + shrinkVertically()\r\n                ) {\r\n                    EventList(\r\n                        events = listOf(\r\n                            \"Project 4\" to \"Task: Hello World\",\r\n                            \"Math exam\" to \"Study\"\r\n                        )\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        bottomBar = {\r\n            NavigationBar(\r\n                containerColor = MaterialTheme.colorScheme.primaryContainer,\r\n            ) {\r\n                NavigationBarItem(\r\n                    icon = {\r\n                        Icon(\r\n                            Icons.AutoMirrored.Filled.List,\r\n                            contentDescription = \"To do list\"\r\n                        )\r\n                    },\r\n                    label = { Text(\"To do list\") },\r\n                    selected = false,\r\n                    onClick = { /*TODO*/ }\r\n                )\r\n                NavigationBarItem(\r\n                    icon = { Icon(Icons.Filled.CalendarToday, contentDescription = \"Calendar\") },\r\n                    label = { Text(\"Calendar\") },\r\n                    selected = true,\r\n                    onClick = { /*TODO*/ }\r\n                )\r\n                NavigationBarItem(\r\n                    icon = { Icon(Icons.Filled.Person, contentDescription = \"Profile\") },\r\n                    label = { Text(\"Profile\") },\r\n                    selected = false,\r\n                    onClick = { /*TODO*/ }\r\n                )\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n@Composable\r\nfun EventItem(icon: androidx.compose.ui.graphics.vector.ImageVector, title: String, description: String) {\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(vertical = 8.dp),\r\n        verticalAlignment = Alignment.CenterVertically\r\n    ) {\r\n        Icon(\r\n            imageVector = icon,\r\n            contentDescription = null,\r\n            tint = MaterialTheme.colorScheme.primary,\r\n            modifier = Modifier.size(48.dp)\r\n        )\r\n        Spacer(modifier = Modifier.width(16.dp))\r\n        Column {\r\n            Text(\r\n                text = title,\r\n                style = MaterialTheme.typography.bodyLarge,\r\n                fontWeight = androidx.compose.ui.text.font.FontWeight.Bold,\r\n                color = MaterialTheme.colorScheme.onSurface\r\n            )\r\n            Text(\r\n                text = description,\r\n                style = MaterialTheme.typography.bodySmall,\r\n                color = MaterialTheme.colorScheme.onSurfaceVariant\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun EventList(events: List<Pair<String, String>>) {\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(16.dp)\r\n    ) {\r\n        events.forEach { event ->\r\n            EventItem(icon = Icons.Default.Notifications, title = event.first, description = event.second)\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n        }\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun CalendarScreenPreview() {\r\n    CalendarScreen()\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt	(date 1729999444654)
-@@ -16,12 +16,15 @@
- import androidx.compose.ui.tooling.preview.Preview
- import androidx.compose.ui.unit.dp
- import androidx.compose.ui.viewinterop.AndroidView
-+import androidx.navigation.NavController
- import java.text.SimpleDateFormat
- import java.util.*
- 
-+
-+
- @OptIn(ExperimentalAnimationApi::class, ExperimentalMaterial3Api::class)
- @Composable
--fun CalendarScreen() {
-+fun CalendarScreen( navController: NavController ,onNavigateToToDo: () -> Unit, onNavigateToProfile: () -> Unit, onNavigateToHome: () -> Unit) {
-     var selectedDate by remember { mutableStateOf("") }
- 
-     val formatter = SimpleDateFormat("EEE, MMM dd", Locale.getDefault())
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package proyecto_moviles.uvg.edu.gt.Login\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt	(date 1730077071376)
-@@ -1,2 +1,32 @@
--package proyecto_moviles.uvg.edu.gt.Login
-+package proyecto_moviles.uvg.edu.gt.navigation
-+
-+import androidx.navigation.NavGraphBuilder
-+import androidx.navigation.compose.composable
-+import kotlinx.serialization.Serializable
-+import proyecto_moviles.uvg.edu.gt.Sing_up.SignUpDestination
-+import proyecto_moviles.uvg.edu.gt.login.LoginRoute
-+
-+
-+@Serializable
-+data object LoginDestination
- 
-+fun NavGraphBuilder.loginScreen(
-+    onLoginClick: () -> Unit
-+) {
-+    composable<LoginDestination> {
-+        LoginRoute(
-+            onSuccessfulLogin = onLoginClick,
-+        )
-+    }
-+}
-+
-+fun NavGraphBuilder.signUpScreen(
-+    onSignUpClick: () -> Unit
-+) {
-+    composable<SignUpDestination> {
-+        SignUpRoute(
-+            onSuccessfulSignUp = onSignUpClick,
-+            onNavigateToLogin = onNavigateToLogin
-+        )
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package proyecto_moviles.uvg.edu.gt.Calendar\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt	(date 1730076972544)
-@@ -1,2 +1,25 @@
- package proyecto_moviles.uvg.edu.gt.Calendar
- 
-+import androidx.navigation.NavController
-+import kotlinx.serialization.Serializable
-+
-+@Serializable
-+data class CalendarDestination(
-+    val id : Int
-+)
-+
-+fun NavController.navigateToCalendar(
-+    eventID: Int
-+) {
-+    this.navigate(CalendarDestination(id = eventID))
-+}
-+
-+fun NavController.Calendar(
-+    onNavigationBack: () -> Unit
-+) {
-+    composable<CalendarDestination> {
-+        CalendarRoute(
-+            onNavigationBack = onNavigationBack
-+        )
-+    }
-+}
-\ No newline at end of file
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"dfea3bbe-0df6-440d-a9eb-50966e080d13\" name=\"Changes\" comment=\"place holders\">\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/file-system.probe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/file-system.probe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules/app/Proyecto-moviles.app.iml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/build.gradle.kts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/build.gradle.kts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/gradle/libs.versions.toml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/gradle/libs.versions.toml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\\Users\\paula\\.android\\avd\\Pixel_4a_API_34.avd)]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"Kotlin File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"history\": [\r\n    {\r\n      \"state\": \"OPEN\",\r\n      \"author\": \"JavierC22153\"\r\n    },\r\n    {\r\n      \"state\": \"OPEN\"\r\n    }\r\n  ],\r\n  \"lastFilter\": {\r\n    \"state\": \"OPEN\"\r\n  }\r\n}]]></component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/cafetowake/Proyecto-moviles.git&quot;,\r\n    &quot;accountId&quot;: &quot;d387766f-c371-4d7d-9634-196def993a19&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2lz0YQZ7cDAuJCTbcLeofLB7YSG\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Compose Preview.CalendarScreenPreview (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;Compose Preview.CalendarScreenPreview.executor&quot;: &quot;Run&quot;,\r\n    &quot;Compose Preview.LoginScreenPreview.executor&quot;: &quot;Run&quot;,\r\n    &quot;Compose Preview.SignUpScreenPreview.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;full.screen.before.presentation.mode&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Dependencies&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.17&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.new.ui&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;kotlin-gradle-user-dirs&quot;: [\r\n      &quot;C:\\\\Users\\\\paula\\\\.gradle&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Compose Preview.CalendarScreenPreview\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\">\r\n      <module name=\"Proyecto-moviles.app.main\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CalendarScreenPreview (1)\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable CalanderScreenKt.CalendarScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"CalanderScreenKt.CalendarScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CalendarScreenPreview\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable proyecto_moviles.uvg.edu.gt.Calendar.CalanderScreenKt.CalendarScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"proyecto_moviles.uvg.edu.gt.Calendar.CalanderScreenKt.CalendarScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LoginScreenPreview\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable proyecto_moviles.uvg.edu.gt.login.LoginScreenKt.LoginScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"proyecto_moviles.uvg.edu.gt.login.LoginScreenKt.LoginScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SignUpScreenPreview\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable proyecto_moviles.uvg.edu.gt.Sign_up.SignUpScreenKt.SignUpScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"proyecto_moviles.uvg.edu.gt.Sign_up.SignUpScreenKt.SignUpScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Compose Preview.CalendarScreenPreview\" />\r\n        <item itemvalue=\"Compose Preview.CalendarScreenPreview (1)\" />\r\n        <item itemvalue=\"Compose Preview.LoginScreenPreview\" />\r\n        <item itemvalue=\"Compose Preview.SignUpScreenPreview\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"dfea3bbe-0df6-440d-a9eb-50966e080d13\" name=\"Changes\" comment=\"\" />\r\n      <created>1726167644429</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1726167644429</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"cambio\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727150178965</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727150178965</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"cambio\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729744867432</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729744867432</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"orden\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729835366365</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729835366365</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"place holders\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729836045671</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729836045671</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Inicio\" />\r\n    <MESSAGE value=\"cambio\" />\r\n    <MESSAGE value=\"orden\" />\r\n    <MESSAGE value=\"place holders\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"place holders\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ b/.idea/workspace.xml	(date 1730061302389)
-@@ -9,31 +9,42 @@
-     <option name="autoReloadType" value="NONE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="dfea3bbe-0df6-440d-a9eb-50966e080d13" name="Changes" comment="place holders">
-+    <list default="true" id="dfea3bbe-0df6-440d-a9eb-50966e080d13" name="Changes" comment="cambio">
-+      <change afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.bin" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.lock" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/modules/app/Proyecto-moviles.app.iml" beforeDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/app/build.gradle.kts" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/model/guardarpuesto.txt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/repository/guardarpuesto.txt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/source/guardarpuesto.txt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/domain/guardarpuesto.txt" beforeDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeScreen.kt" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/common/guardarpuesto.txt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt" beforeDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/guardarpuesto.txt" beforeDir="false" />
-       <change beforePath="$PROJECT_DIR$/gradle/libs.versions.toml" beforeDir="false" afterPath="$PROJECT_DIR$/gradle/libs.versions.toml" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-@@ -61,20 +72,20 @@
-   <component name="Git.Settings">
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-   </component>
--  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
--  "history": [
-+  <component name="GitHubPullRequestSearchHistory">{
-+  &quot;history&quot;: [
-     {
--      "state": "OPEN",
--      "author": "JavierC22153"
-+      &quot;state&quot;: &quot;OPEN&quot;,
-+      &quot;author&quot;: &quot;JavierC22153&quot;
-     },
-     {
--      "state": "OPEN"
-+      &quot;state&quot;: &quot;OPEN&quot;
-     }
-   ],
--  "lastFilter": {
--    "state": "OPEN"
-+  &quot;lastFilter&quot;: {
-+    &quot;state&quot;: &quot;OPEN&quot;
-   }
--}]]></component>
-+}</component>
-   <component name="GithubPullRequestsUISettings">{
-   &quot;selectedUrlAndAccountId&quot;: {
-     &quot;url&quot;: &quot;https://github.com/cafetowake/Proyecto-moviles.git&quot;,
-@@ -505,14 +516,22 @@
-       <option name="project" value="LOCAL" />
-       <updated>1729836045671</updated>
-     </task>
--    <option name="localTasksCounter" value="5" />
-+    <task id="LOCAL-00005" summary="cambio">
-+      <option name="closed" value="true" />
-+      <created>1729995854512</created>
-+      <option name="number" value="00005" />
-+      <option name="presentableId" value="LOCAL-00005" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1729995854512</updated>
-+    </task>
-+    <option name="localTasksCounter" value="6" />
-     <servers />
-   </component>
-   <component name="VcsManagerConfiguration">
-     <MESSAGE value="Inicio" />
--    <MESSAGE value="cambio" />
-     <MESSAGE value="orden" />
-     <MESSAGE value="place holders" />
--    <option name="LAST_COMMIT_MESSAGE" value="place holders" />
-+    <MESSAGE value="cambio" />
-+    <option name="LAST_COMMIT_MESSAGE" value="cambio" />
-   </component>
- </project>
-\ No newline at end of file
-Index: app/build.gradle.kts
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.jetbrains.kotlin.serialization)\r\n    id(\"kotlin-kapt\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"proyecto_moviles.uvg.edu.gt\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"proyecto_moviles.uvg.edu.gt\"\r\n        minSdk = 26\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n\r\n    kapt {\r\n        arguments {\r\n            arg(\"room.schemaLocation\", \"$projectDir/schemas\")\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.androidx.appcompat)\r\n    implementation(libs.androidx.cardview)\r\n    implementation(libs.androidx.compose.material)\r\n    implementation(libs.androidx.compose.material.icons.core)\r\n    implementation(libs.androidx.compose.material.icons.extended)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n    implementation(libs.androidx.compose.navigation)\r\n    implementation(libs.kotlinx.serialization.json)\r\n    implementation(libs.bundles.ktor)\r\n    implementation(libs.androidx.datastore.preferences)\r\n    implementation(libs.androidx.splashscreen)\r\n    implementation(libs.androidx.room.runtime)\r\n    kapt(libs.androidx.room.compiler)\r\n    implementation(libs.androidx.room.ktx)\r\n    implementation(libs.bundles.ktor)\r\n    implementation(libs.bundles.coil)\r\n}\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/build.gradle.kts b/app/build.gradle.kts
---- a/app/build.gradle.kts	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ b/app/build.gradle.kts	(date 1730085227315)
-@@ -66,11 +66,14 @@
-     implementation(libs.androidx.ui.graphics)
-     implementation(libs.androidx.ui.tooling.preview)
-     implementation(libs.androidx.material3)
--    implementation(libs.androidx.appcompat)
--    implementation(libs.androidx.cardview)
--    implementation(libs.androidx.compose.material)
--    implementation(libs.androidx.compose.material.icons.core)
-+    implementation(libs.androidx.appcompat) 
-+    implementation(libs.androidx.cardview) 
-+    implementation(libs.androidx.compose.material) 
-+    implementation(libs.androidx.compose.material.icons.core) 
-     implementation(libs.androidx.compose.material.icons.extended)
-+    implementation(libs.androidx.espresso.core)
-+    implementation(libs.androidx.espresso.core)
-+    implementation(libs.androidx.ui.desktop)
-     testImplementation(libs.junit)
-     androidTestImplementation(libs.androidx.junit)
-     androidTestImplementation(libs.androidx.espresso.core)
-@@ -88,5 +91,7 @@
-     implementation(libs.androidx.room.ktx)
-     implementation(libs.bundles.ktor)
-     implementation(libs.bundles.coil)
-+    implementation (libs.hilt.android)
-+    kapt (libs.dagger.hilt.compiler)
- }
- 
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt
-rename from app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt
-rename to app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt	(date 1729999444734)
-@@ -1,2 +1,1 @@
- package proyecto_moviles.uvg.edu.gt.Home
--
-Index: gradle/libs.versions.toml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>[versions]\r\nagp = \"8.6.1\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.13.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nlifecycleRuntimeKtx = \"2.8.6\"\r\nactivityCompose = \"1.9.3\"\r\ncomposeBom = \"2024.10.00\"\r\nnavigationCompose = \"2.8.3\"\r\nkotlinSerialization = \"1.6.3\"\r\nappcompat = \"1.7.0\"\r\ncardview = \"1.0.0\"\r\ndataStore = \"1.1.1\"\r\nsplashScreen = \"1.0.1\"\r\nroom = \"2.6.1\"\r\nktor = \"2.3.12\"\r\ncoil = \"3.0.0-rc01\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\nandroidx-compose-navigation = { group = \"androidx.navigation\", name = \"navigation-compose\", version.ref =\"navigationCompose\"}\r\nkotlinx-serialization-json = { group = \"org.jetbrains.kotlinx\", name = \"kotlinx-serialization-json\", version.ref = \"kotlinSerialization\" }\r\nandroidx-datastore-preferences = { group = \"androidx.datastore\", name = \"datastore-preferences\", version.ref = \"dataStore\"}\r\nandroidx-splashscreen = { group = \"androidx.core\", name = \"core-splashscreen\", version.ref = \"splashScreen\" }\r\nandroidx-room-runtime = { group = \"androidx.room\", name = \"room-runtime\", version.ref = \"room\"}\r\nandroidx-room-compiler = { group = \"androidx.room\", name = \"room-compiler\", version.ref = \"room\"}\r\nandroidx-room-ktx = { module = \"androidx.room:room-ktx\", version.ref = \"room\" }\r\nktor-client-cio = { group = \"io.ktor\", name=\"ktor-client-cio\", version.ref = \"ktor\" }\r\nktor-client-content-negotiation = { group = \"io.ktor\", name=\"ktor-client-content-negotiation\", version.ref = \"ktor\" }\r\nktor-client-core = { group = \"io.ktor\", name=\"ktor-client-core\", version.ref = \"ktor\" }\r\nktor-client-logging = { group = \"io.ktor\", name=\"ktor-client-logging\", version.ref = \"ktor\" }\r\nktor-serialization-kotlinx-json = { group = \"io.ktor\", name=\"ktor-serialization-kotlinx-json\", version.ref = \"ktor\" }\r\ncoil-compose = { group = \"io.coil-kt.coil3\", name = \"coil-compose\", version.ref = \"coil\" }\r\ncoil-network = { group = \"io.coil-kt.coil3\", name = \"coil-network-okhttp\", version.ref = \"coil\" }\r\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nandroidx-cardview = { group = \"androidx.cardview\", name = \"cardview\", version.ref = \"cardview\" }\r\nandroidx-compose-material-icons-core = { module = \"androidx.compose.material:material-icons-core\", version = \"1.7.4\" }\r\nandroidx-compose-material-icons-extended = { module = \"androidx.compose.material:material-icons-extended\", version = \"1.7.4\" }\r\nandroidx-compose-material = { module = \"androidx.compose.material:material\", version = \"1.7.4\" }\r\n\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\njetbrains-kotlin-serialization = { id = \"org.jetbrains.kotlin.plugin.serialization\", version.ref = \"kotlin\" }\r\n\r\n[bundles]\r\nktor = [\r\n    \"ktor-client-cio\",\r\n    \"ktor-client-content-negotiation\",\r\n    \"ktor-client-core\",\r\n    \"ktor-client-logging\",\r\n    \"ktor-serialization-kotlinx-json\"\r\n]\r\ncoil = [\r\n    \"coil-compose\",\r\n    \"coil-network\"\r\n]
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
---- a/gradle/libs.versions.toml	(revision 95313717cd7a2c3c3d1a38c8145b329d1ba21daa)
-+++ b/gradle/libs.versions.toml	(date 1730085227299)
-@@ -1,5 +1,7 @@
- [versions]
- agp = "8.6.1"
-+hiltAndroid = "2.50"
-+hiltCompiler = "2.50"
- kotlin = "1.9.0"
- coreKtx = "1.13.1"
- junit = "4.13.2"
-@@ -17,9 +19,12 @@
- room = "2.6.1"
- ktor = "2.3.12"
- coil = "3.0.0-rc01"
-+uiDesktop = "1.7.0"
- 
- [libraries]
- androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
-+dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltCompiler" }
-+hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
- junit = { group = "junit", name = "junit", version.ref = "junit" }
- androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
- androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
-@@ -52,6 +57,7 @@
- androidx-compose-material-icons-core = { module = "androidx.compose.material:material-icons-core", version = "1.7.4" }
- androidx-compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version = "1.7.4" }
- androidx-compose-material = { module = "androidx.compose.material:material", version = "1.7.4" }
-+androidx-ui-desktop = { group = "androidx.compose.ui", name = "ui-desktop", version.ref = "uiDesktop" }
- 
- 
- [plugins]
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/repository/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/repository/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/common/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/common/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/model/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/model/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/source/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/source/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/domain/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/domain/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeScreen.kt
-rename from app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeScreen.kt
-rename to app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeScreen.kt
Index: .gradle/8.7/dependencies-accessors/2ee6179fd4917f3f40d4123d36095ab2555a98d6/sources/org/gradle/accessors/dm/LibrariesForLibs.java
===================================================================
diff --git a/.gradle/8.7/dependencies-accessors/2ee6179fd4917f3f40d4123d36095ab2555a98d6/sources/org/gradle/accessors/dm/LibrariesForLibs.java b/.gradle/8.7/dependencies-accessors/2ee6179fd4917f3f40d4123d36095ab2555a98d6/sources/org/gradle/accessors/dm/LibrariesForLibs.java
deleted file mode 100644
--- a/.gradle/8.7/dependencies-accessors/2ee6179fd4917f3f40d4123d36095ab2555a98d6/sources/org/gradle/accessors/dm/LibrariesForLibs.java	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,675 +0,0 @@
-package org.gradle.accessors.dm;
-
-import org.gradle.api.NonNullApi;
-import org.gradle.api.artifacts.MinimalExternalModuleDependency;
-import org.gradle.plugin.use.PluginDependency;
-import org.gradle.api.artifacts.ExternalModuleDependencyBundle;
-import org.gradle.api.artifacts.MutableVersionConstraint;
-import org.gradle.api.provider.Provider;
-import org.gradle.api.model.ObjectFactory;
-import org.gradle.api.provider.ProviderFactory;
-import org.gradle.api.internal.catalog.AbstractExternalDependencyFactory;
-import org.gradle.api.internal.catalog.DefaultVersionCatalog;
-import java.util.Map;
-import org.gradle.api.internal.attributes.ImmutableAttributesFactory;
-import org.gradle.api.internal.artifacts.dsl.CapabilityNotationParser;
-import javax.inject.Inject;
-
-/**
- * A catalog of dependencies accessible via the {@code libs} extension.
- */
-@NonNullApi
-public class LibrariesForLibs extends AbstractExternalDependencyFactory {
-
-    private final AbstractExternalDependencyFactory owner = this;
-    private final AndroidxLibraryAccessors laccForAndroidxLibraryAccessors = new AndroidxLibraryAccessors(owner);
-    private final KotlinxLibraryAccessors laccForKotlinxLibraryAccessors = new KotlinxLibraryAccessors(owner);
-    private final VersionAccessors vaccForVersionAccessors = new VersionAccessors(providers, config);
-    private final BundleAccessors baccForBundleAccessors = new BundleAccessors(objects, providers, config, attributesFactory, capabilityNotationParser);
-    private final PluginAccessors paccForPluginAccessors = new PluginAccessors(providers, config);
-
-    @Inject
-    public LibrariesForLibs(DefaultVersionCatalog config, ProviderFactory providers, ObjectFactory objects, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) {
-        super(config, providers, objects, attributesFactory, capabilityNotationParser);
-    }
-
-    /**
-     * Dependency provider for <b>junit</b> with <b>junit:junit</b> coordinates and
-     * with version reference <b>junit</b>
-     * <p>
-     * This dependency was declared in catalog libs.versions.toml
-     */
-    public Provider<MinimalExternalModuleDependency> getJunit() {
-        return create("junit");
-    }
-
-    /**
-     * Group of libraries at <b>androidx</b>
-     */
-    public AndroidxLibraryAccessors getAndroidx() {
-        return laccForAndroidxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>kotlinx</b>
-     */
-    public KotlinxLibraryAccessors getKotlinx() {
-        return laccForKotlinxLibraryAccessors;
-    }
-
-    /**
-     * Group of versions at <b>versions</b>
-     */
-    public VersionAccessors getVersions() {
-        return vaccForVersionAccessors;
-    }
-
-    /**
-     * Group of bundles at <b>bundles</b>
-     */
-    public BundleAccessors getBundles() {
-        return baccForBundleAccessors;
-    }
-
-    /**
-     * Group of plugins at <b>plugins</b>
-     */
-    public PluginAccessors getPlugins() {
-        return paccForPluginAccessors;
-    }
-
-    public static class AndroidxLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxActivityLibraryAccessors laccForAndroidxActivityLibraryAccessors = new AndroidxActivityLibraryAccessors(owner);
-        private final AndroidxComposeLibraryAccessors laccForAndroidxComposeLibraryAccessors = new AndroidxComposeLibraryAccessors(owner);
-        private final AndroidxCoreLibraryAccessors laccForAndroidxCoreLibraryAccessors = new AndroidxCoreLibraryAccessors(owner);
-        private final AndroidxEspressoLibraryAccessors laccForAndroidxEspressoLibraryAccessors = new AndroidxEspressoLibraryAccessors(owner);
-        private final AndroidxLifecycleLibraryAccessors laccForAndroidxLifecycleLibraryAccessors = new AndroidxLifecycleLibraryAccessors(owner);
-        private final AndroidxUiLibraryAccessors laccForAndroidxUiLibraryAccessors = new AndroidxUiLibraryAccessors(owner);
-
-        public AndroidxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>appcompat</b> with <b>androidx.appcompat:appcompat</b> coordinates and
-         * with version reference <b>appcompat</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getAppcompat() {
-            return create("androidx.appcompat");
-        }
-
-        /**
-         * Dependency provider for <b>cardview</b> with <b>androidx.cardview:cardview</b> coordinates and
-         * with version reference <b>cardview</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCardview() {
-            return create("androidx.cardview");
-        }
-
-        /**
-         * Dependency provider for <b>junit</b> with <b>androidx.test.ext:junit</b> coordinates and
-         * with version reference <b>junitVersion</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJunit() {
-            return create("androidx.junit");
-        }
-
-        /**
-         * Dependency provider for <b>material3</b> with <b>androidx.compose.material3:material3</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getMaterial3() {
-            return create("androidx.material3");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.activity</b>
-         */
-        public AndroidxActivityLibraryAccessors getActivity() {
-            return laccForAndroidxActivityLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose</b>
-         */
-        public AndroidxComposeLibraryAccessors getCompose() {
-            return laccForAndroidxComposeLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.core</b>
-         */
-        public AndroidxCoreLibraryAccessors getCore() {
-            return laccForAndroidxCoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.espresso</b>
-         */
-        public AndroidxEspressoLibraryAccessors getEspresso() {
-            return laccForAndroidxEspressoLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle</b>
-         */
-        public AndroidxLifecycleLibraryAccessors getLifecycle() {
-            return laccForAndroidxLifecycleLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui</b>
-         */
-        public AndroidxUiLibraryAccessors getUi() {
-            return laccForAndroidxUiLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxActivityLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxActivityLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>androidx.activity:activity-compose</b> coordinates and
-         * with version reference <b>activityCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            return create("androidx.activity.compose");
-        }
-
-    }
-
-    public static class AndroidxComposeLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxComposeMaterialLibraryAccessors laccForAndroidxComposeMaterialLibraryAccessors = new AndroidxComposeMaterialLibraryAccessors(owner);
-
-        public AndroidxComposeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>bom</b> with <b>androidx.compose:compose-bom</b> coordinates and
-         * with version reference <b>composeBom</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getBom() {
-            return create("androidx.compose.bom");
-        }
-
-        /**
-         * Dependency provider for <b>navigation</b> with <b>androidx.navigation:navigation-compose</b> coordinates and
-         * with version reference <b>navigationCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getNavigation() {
-            return create("androidx.compose.navigation");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material</b>
-         */
-        public AndroidxComposeMaterialLibraryAccessors getMaterial() {
-            return laccForAndroidxComposeMaterialLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxComposeMaterialLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxComposeMaterialIconsLibraryAccessors laccForAndroidxComposeMaterialIconsLibraryAccessors = new AndroidxComposeMaterialIconsLibraryAccessors(owner);
-
-        public AndroidxComposeMaterialLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>material</b> with <b>androidx.compose.material:material</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.compose.material");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material.icons</b>
-         */
-        public AndroidxComposeMaterialIconsLibraryAccessors getIcons() {
-            return laccForAndroidxComposeMaterialIconsLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxComposeMaterialIconsLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxComposeMaterialIconsLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.compose.material:material-icons-core</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            return create("androidx.compose.material.icons.core");
-        }
-
-        /**
-         * Dependency provider for <b>extended</b> with <b>androidx.compose.material:material-icons-extended</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getExtended() {
-            return create("androidx.compose.material.icons.extended");
-        }
-
-    }
-
-    public static class AndroidxCoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxCoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.core:core-ktx</b> coordinates and
-         * with version reference <b>coreKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            return create("androidx.core.ktx");
-        }
-
-    }
-
-    public static class AndroidxEspressoLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxEspressoLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.test.espresso:espresso-core</b> coordinates and
-         * with version reference <b>espressoCore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            return create("androidx.espresso.core");
-        }
-
-    }
-
-    public static class AndroidxLifecycleLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxLifecycleRuntimeLibraryAccessors laccForAndroidxLifecycleRuntimeLibraryAccessors = new AndroidxLifecycleRuntimeLibraryAccessors(owner);
-
-        public AndroidxLifecycleLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle.runtime</b>
-         */
-        public AndroidxLifecycleRuntimeLibraryAccessors getRuntime() {
-            return laccForAndroidxLifecycleRuntimeLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxLifecycleRuntimeLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxLifecycleRuntimeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.lifecycle:lifecycle-runtime-ktx</b> coordinates and
-         * with version reference <b>lifecycleRuntimeKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            return create("androidx.lifecycle.runtime.ktx");
-        }
-
-    }
-
-    public static class AndroidxUiLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxUiTestLibraryAccessors laccForAndroidxUiTestLibraryAccessors = new AndroidxUiTestLibraryAccessors(owner);
-        private final AndroidxUiToolingLibraryAccessors laccForAndroidxUiToolingLibraryAccessors = new AndroidxUiToolingLibraryAccessors(owner);
-
-        public AndroidxUiLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ui</b> with <b>androidx.compose.ui:ui</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.ui");
-        }
-
-        /**
-         * Dependency provider for <b>graphics</b> with <b>androidx.compose.ui:ui-graphics</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getGraphics() {
-            return create("androidx.ui.graphics");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.test</b>
-         */
-        public AndroidxUiTestLibraryAccessors getTest() {
-            return laccForAndroidxUiTestLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.tooling</b>
-         */
-        public AndroidxUiToolingLibraryAccessors getTooling() {
-            return laccForAndroidxUiToolingLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxUiTestLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxUiTestLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>junit4</b> with <b>androidx.compose.ui:ui-test-junit4</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJunit4() {
-            return create("androidx.ui.test.junit4");
-        }
-
-        /**
-         * Dependency provider for <b>manifest</b> with <b>androidx.compose.ui:ui-test-manifest</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getManifest() {
-            return create("androidx.ui.test.manifest");
-        }
-
-    }
-
-    public static class AndroidxUiToolingLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-
-        public AndroidxUiToolingLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>tooling</b> with <b>androidx.compose.ui:ui-tooling</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.ui.tooling");
-        }
-
-        /**
-         * Dependency provider for <b>preview</b> with <b>androidx.compose.ui:ui-tooling-preview</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getPreview() {
-            return create("androidx.ui.tooling.preview");
-        }
-
-    }
-
-    public static class KotlinxLibraryAccessors extends SubDependencyFactory {
-        private final KotlinxSerializationLibraryAccessors laccForKotlinxSerializationLibraryAccessors = new KotlinxSerializationLibraryAccessors(owner);
-
-        public KotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>kotlinx.serialization</b>
-         */
-        public KotlinxSerializationLibraryAccessors getSerialization() {
-            return laccForKotlinxSerializationLibraryAccessors;
-        }
-
-    }
-
-    public static class KotlinxSerializationLibraryAccessors extends SubDependencyFactory {
-
-        public KotlinxSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>org.jetbrains.kotlinx:kotlinx-serialization-json</b> coordinates and
-         * with version reference <b>kotlinSerialization</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            return create("kotlinx.serialization.json");
-        }
-
-    }
-
-    public static class VersionAccessors extends VersionFactory  {
-
-        public VersionAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Version alias <b>activityCompose</b> with value <b>1.9.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getActivityCompose() { return getVersion("activityCompose"); }
-
-        /**
-         * Version alias <b>agp</b> with value <b>8.6.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAgp() { return getVersion("agp"); }
-
-        /**
-         * Version alias <b>appcompat</b> with value <b>1.7.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAppcompat() { return getVersion("appcompat"); }
-
-        /**
-         * Version alias <b>cardview</b> with value <b>1.0.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCardview() { return getVersion("cardview"); }
-
-        /**
-         * Version alias <b>composeBom</b> with value <b>2024.10.00</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getComposeBom() { return getVersion("composeBom"); }
-
-        /**
-         * Version alias <b>coreKtx</b> with value <b>1.13.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoreKtx() { return getVersion("coreKtx"); }
-
-        /**
-         * Version alias <b>espressoCore</b> with value <b>3.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getEspressoCore() { return getVersion("espressoCore"); }
-
-        /**
-         * Version alias <b>junit</b> with value <b>4.13.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunit() { return getVersion("junit"); }
-
-        /**
-         * Version alias <b>junitVersion</b> with value <b>1.2.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunitVersion() { return getVersion("junitVersion"); }
-
-        /**
-         * Version alias <b>kotlin</b> with value <b>1.9.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlin() { return getVersion("kotlin"); }
-
-        /**
-         * Version alias <b>kotlinSerialization</b> with value <b>1.6.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlinSerialization() { return getVersion("kotlinSerialization"); }
-
-        /**
-         * Version alias <b>lifecycleRuntimeKtx</b> with value <b>2.8.6</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getLifecycleRuntimeKtx() { return getVersion("lifecycleRuntimeKtx"); }
-
-        /**
-         * Version alias <b>navigationCompose</b> with value <b>2.8.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getNavigationCompose() { return getVersion("navigationCompose"); }
-
-    }
-
-    public static class BundleAccessors extends BundleFactory {
-
-        public BundleAccessors(ObjectFactory objects, ProviderFactory providers, DefaultVersionCatalog config, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) { super(objects, providers, config, attributesFactory, capabilityNotationParser); }
-
-    }
-
-    public static class PluginAccessors extends PluginFactory {
-        private final AndroidPluginAccessors paccForAndroidPluginAccessors = new AndroidPluginAccessors(providers, config);
-        private final JetbrainsPluginAccessors paccForJetbrainsPluginAccessors = new JetbrainsPluginAccessors(providers, config);
-
-        public PluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.android</b>
-         */
-        public AndroidPluginAccessors getAndroid() {
-            return paccForAndroidPluginAccessors;
-        }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains</b>
-         */
-        public JetbrainsPluginAccessors getJetbrains() {
-            return paccForJetbrainsPluginAccessors;
-        }
-
-    }
-
-    public static class AndroidPluginAccessors extends PluginFactory {
-
-        public AndroidPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>android.application</b> with plugin id <b>com.android.application</b> and
-         * with version reference <b>agp</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getApplication() { return createPlugin("android.application"); }
-
-    }
-
-    public static class JetbrainsPluginAccessors extends PluginFactory {
-        private final JetbrainsKotlinPluginAccessors paccForJetbrainsKotlinPluginAccessors = new JetbrainsKotlinPluginAccessors(providers, config);
-
-        public JetbrainsPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains.kotlin</b>
-         */
-        public JetbrainsKotlinPluginAccessors getKotlin() {
-            return paccForJetbrainsKotlinPluginAccessors;
-        }
-
-    }
-
-    public static class JetbrainsKotlinPluginAccessors extends PluginFactory {
-
-        public JetbrainsKotlinPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.android</b> with plugin id <b>org.jetbrains.kotlin.android</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getAndroid() { return createPlugin("jetbrains.kotlin.android"); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.serialization</b> with plugin id <b>org.jetbrains.kotlin.plugin.serialization</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getSerialization() { return createPlugin("jetbrains.kotlin.serialization"); }
-
-    }
-
-}
Index: .gradle/8.7/dependencies-accessors/05244df278ca778d14a8422e0bb13eb9a65f419e/sources/org/gradle/accessors/dm/LibrariesForLibs.java
===================================================================
diff --git a/.gradle/8.7/dependencies-accessors/05244df278ca778d14a8422e0bb13eb9a65f419e/sources/org/gradle/accessors/dm/LibrariesForLibs.java b/.gradle/8.7/dependencies-accessors/05244df278ca778d14a8422e0bb13eb9a65f419e/sources/org/gradle/accessors/dm/LibrariesForLibs.java
deleted file mode 100644
--- a/.gradle/8.7/dependencies-accessors/05244df278ca778d14a8422e0bb13eb9a65f419e/sources/org/gradle/accessors/dm/LibrariesForLibs.java	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,1068 +0,0 @@
-package org.gradle.accessors.dm;
-
-import org.gradle.api.NonNullApi;
-import org.gradle.api.artifacts.MinimalExternalModuleDependency;
-import org.gradle.plugin.use.PluginDependency;
-import org.gradle.api.artifacts.ExternalModuleDependencyBundle;
-import org.gradle.api.artifacts.MutableVersionConstraint;
-import org.gradle.api.provider.Provider;
-import org.gradle.api.model.ObjectFactory;
-import org.gradle.api.provider.ProviderFactory;
-import org.gradle.api.internal.catalog.AbstractExternalDependencyFactory;
-import org.gradle.api.internal.catalog.DefaultVersionCatalog;
-import java.util.Map;
-import org.gradle.api.internal.attributes.ImmutableAttributesFactory;
-import org.gradle.api.internal.artifacts.dsl.CapabilityNotationParser;
-import javax.inject.Inject;
-
-/**
- * A catalog of dependencies accessible via the {@code libs} extension.
- */
-@NonNullApi
-public class LibrariesForLibs extends AbstractExternalDependencyFactory {
-
-    private final AbstractExternalDependencyFactory owner = this;
-    private final AndroidxLibraryAccessors laccForAndroidxLibraryAccessors = new AndroidxLibraryAccessors(owner);
-    private final CoilLibraryAccessors laccForCoilLibraryAccessors = new CoilLibraryAccessors(owner);
-    private final DaggerLibraryAccessors laccForDaggerLibraryAccessors = new DaggerLibraryAccessors(owner);
-    private final HiltLibraryAccessors laccForHiltLibraryAccessors = new HiltLibraryAccessors(owner);
-    private final KotlinxLibraryAccessors laccForKotlinxLibraryAccessors = new KotlinxLibraryAccessors(owner);
-    private final KtorLibraryAccessors laccForKtorLibraryAccessors = new KtorLibraryAccessors(owner);
-    private final VersionAccessors vaccForVersionAccessors = new VersionAccessors(providers, config);
-    private final BundleAccessors baccForBundleAccessors = new BundleAccessors(objects, providers, config, attributesFactory, capabilityNotationParser);
-    private final PluginAccessors paccForPluginAccessors = new PluginAccessors(providers, config);
-
-    @Inject
-    public LibrariesForLibs(DefaultVersionCatalog config, ProviderFactory providers, ObjectFactory objects, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) {
-        super(config, providers, objects, attributesFactory, capabilityNotationParser);
-    }
-
-    /**
-     * Dependency provider for <b>junit</b> with <b>junit:junit</b> coordinates and
-     * with version reference <b>junit</b>
-     * <p>
-     * This dependency was declared in catalog libs.versions.toml
-     */
-    public Provider<MinimalExternalModuleDependency> getJunit() {
-        return create("junit");
-    }
-
-    /**
-     * Group of libraries at <b>androidx</b>
-     */
-    public AndroidxLibraryAccessors getAndroidx() {
-        return laccForAndroidxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>coil</b>
-     */
-    public CoilLibraryAccessors getCoil() {
-        return laccForCoilLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>dagger</b>
-     */
-    public DaggerLibraryAccessors getDagger() {
-        return laccForDaggerLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>hilt</b>
-     */
-    public HiltLibraryAccessors getHilt() {
-        return laccForHiltLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>kotlinx</b>
-     */
-    public KotlinxLibraryAccessors getKotlinx() {
-        return laccForKotlinxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>ktor</b>
-     */
-    public KtorLibraryAccessors getKtor() {
-        return laccForKtorLibraryAccessors;
-    }
-
-    /**
-     * Group of versions at <b>versions</b>
-     */
-    public VersionAccessors getVersions() {
-        return vaccForVersionAccessors;
-    }
-
-    /**
-     * Group of bundles at <b>bundles</b>
-     */
-    public BundleAccessors getBundles() {
-        return baccForBundleAccessors;
-    }
-
-    /**
-     * Group of plugins at <b>plugins</b>
-     */
-    public PluginAccessors getPlugins() {
-        return paccForPluginAccessors;
-    }
-
-    public static class AndroidxLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxActivityLibraryAccessors laccForAndroidxActivityLibraryAccessors = new AndroidxActivityLibraryAccessors(owner);
-        private final AndroidxComposeLibraryAccessors laccForAndroidxComposeLibraryAccessors = new AndroidxComposeLibraryAccessors(owner);
-        private final AndroidxCoreLibraryAccessors laccForAndroidxCoreLibraryAccessors = new AndroidxCoreLibraryAccessors(owner);
-        private final AndroidxDatastoreLibraryAccessors laccForAndroidxDatastoreLibraryAccessors = new AndroidxDatastoreLibraryAccessors(owner);
-        private final AndroidxEspressoLibraryAccessors laccForAndroidxEspressoLibraryAccessors = new AndroidxEspressoLibraryAccessors(owner);
-        private final AndroidxLifecycleLibraryAccessors laccForAndroidxLifecycleLibraryAccessors = new AndroidxLifecycleLibraryAccessors(owner);
-        private final AndroidxRoomLibraryAccessors laccForAndroidxRoomLibraryAccessors = new AndroidxRoomLibraryAccessors(owner);
-        private final AndroidxUiLibraryAccessors laccForAndroidxUiLibraryAccessors = new AndroidxUiLibraryAccessors(owner);
-
-        public AndroidxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>appcompat</b> with <b>androidx.appcompat:appcompat</b> coordinates and
-         * with version reference <b>appcompat</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getAppcompat() {
-            return create("androidx.appcompat");
-        }
-
-        /**
-         * Dependency provider for <b>cardview</b> with <b>androidx.cardview:cardview</b> coordinates and
-         * with version reference <b>cardview</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCardview() {
-            return create("androidx.cardview");
-        }
-
-        /**
-         * Dependency provider for <b>junit</b> with <b>androidx.test.ext:junit</b> coordinates and
-         * with version reference <b>junitVersion</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJunit() {
-            return create("androidx.junit");
-        }
-
-        /**
-         * Dependency provider for <b>material3</b> with <b>androidx.compose.material3:material3</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getMaterial3() {
-            return create("androidx.material3");
-        }
-
-        /**
-         * Dependency provider for <b>splashscreen</b> with <b>androidx.core:core-splashscreen</b> coordinates and
-         * with version reference <b>splashScreen</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getSplashscreen() {
-            return create("androidx.splashscreen");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.activity</b>
-         */
-        public AndroidxActivityLibraryAccessors getActivity() {
-            return laccForAndroidxActivityLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose</b>
-         */
-        public AndroidxComposeLibraryAccessors getCompose() {
-            return laccForAndroidxComposeLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.core</b>
-         */
-        public AndroidxCoreLibraryAccessors getCore() {
-            return laccForAndroidxCoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.datastore</b>
-         */
-        public AndroidxDatastoreLibraryAccessors getDatastore() {
-            return laccForAndroidxDatastoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.espresso</b>
-         */
-        public AndroidxEspressoLibraryAccessors getEspresso() {
-            return laccForAndroidxEspressoLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle</b>
-         */
-        public AndroidxLifecycleLibraryAccessors getLifecycle() {
-            return laccForAndroidxLifecycleLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.room</b>
-         */
-        public AndroidxRoomLibraryAccessors getRoom() {
-            return laccForAndroidxRoomLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui</b>
-         */
-        public AndroidxUiLibraryAccessors getUi() {
-            return laccForAndroidxUiLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxActivityLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxActivityLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>androidx.activity:activity-compose</b> coordinates and
-         * with version reference <b>activityCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            return create("androidx.activity.compose");
-        }
-
-    }
-
-    public static class AndroidxComposeLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxComposeMaterialLibraryAccessors laccForAndroidxComposeMaterialLibraryAccessors = new AndroidxComposeMaterialLibraryAccessors(owner);
-
-        public AndroidxComposeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>bom</b> with <b>androidx.compose:compose-bom</b> coordinates and
-         * with version reference <b>composeBom</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getBom() {
-            return create("androidx.compose.bom");
-        }
-
-        /**
-         * Dependency provider for <b>navigation</b> with <b>androidx.navigation:navigation-compose</b> coordinates and
-         * with version reference <b>navigationCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getNavigation() {
-            return create("androidx.compose.navigation");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material</b>
-         */
-        public AndroidxComposeMaterialLibraryAccessors getMaterial() {
-            return laccForAndroidxComposeMaterialLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxComposeMaterialLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxComposeMaterialIconsLibraryAccessors laccForAndroidxComposeMaterialIconsLibraryAccessors = new AndroidxComposeMaterialIconsLibraryAccessors(owner);
-
-        public AndroidxComposeMaterialLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>material</b> with <b>androidx.compose.material:material</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.compose.material");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material.icons</b>
-         */
-        public AndroidxComposeMaterialIconsLibraryAccessors getIcons() {
-            return laccForAndroidxComposeMaterialIconsLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxComposeMaterialIconsLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxComposeMaterialIconsLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.compose.material:material-icons-core</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            return create("androidx.compose.material.icons.core");
-        }
-
-        /**
-         * Dependency provider for <b>extended</b> with <b>androidx.compose.material:material-icons-extended</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getExtended() {
-            return create("androidx.compose.material.icons.extended");
-        }
-
-    }
-
-    public static class AndroidxCoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxCoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.core:core-ktx</b> coordinates and
-         * with version reference <b>coreKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            return create("androidx.core.ktx");
-        }
-
-    }
-
-    public static class AndroidxDatastoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxDatastoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>preferences</b> with <b>androidx.datastore:datastore-preferences</b> coordinates and
-         * with version reference <b>dataStore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getPreferences() {
-            return create("androidx.datastore.preferences");
-        }
-
-    }
-
-    public static class AndroidxEspressoLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxEspressoLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.test.espresso:espresso-core</b> coordinates and
-         * with version reference <b>espressoCore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            return create("androidx.espresso.core");
-        }
-
-    }
-
-    public static class AndroidxLifecycleLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxLifecycleRuntimeLibraryAccessors laccForAndroidxLifecycleRuntimeLibraryAccessors = new AndroidxLifecycleRuntimeLibraryAccessors(owner);
-
-        public AndroidxLifecycleLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle.runtime</b>
-         */
-        public AndroidxLifecycleRuntimeLibraryAccessors getRuntime() {
-            return laccForAndroidxLifecycleRuntimeLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxLifecycleRuntimeLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxLifecycleRuntimeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.lifecycle:lifecycle-runtime-ktx</b> coordinates and
-         * with version reference <b>lifecycleRuntimeKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            return create("androidx.lifecycle.runtime.ktx");
-        }
-
-    }
-
-    public static class AndroidxRoomLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxRoomLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compiler</b> with <b>androidx.room:room-compiler</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCompiler() {
-            return create("androidx.room.compiler");
-        }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.room:room-ktx</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            return create("androidx.room.ktx");
-        }
-
-        /**
-         * Dependency provider for <b>runtime</b> with <b>androidx.room:room-runtime</b> coordinates and
-         * with version reference <b>room</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getRuntime() {
-            return create("androidx.room.runtime");
-        }
-
-    }
-
-    public static class AndroidxUiLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxUiTestLibraryAccessors laccForAndroidxUiTestLibraryAccessors = new AndroidxUiTestLibraryAccessors(owner);
-        private final AndroidxUiToolingLibraryAccessors laccForAndroidxUiToolingLibraryAccessors = new AndroidxUiToolingLibraryAccessors(owner);
-
-        public AndroidxUiLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ui</b> with <b>androidx.compose.ui:ui</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.ui");
-        }
-
-        /**
-         * Dependency provider for <b>graphics</b> with <b>androidx.compose.ui:ui-graphics</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getGraphics() {
-            return create("androidx.ui.graphics");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.test</b>
-         */
-        public AndroidxUiTestLibraryAccessors getTest() {
-            return laccForAndroidxUiTestLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.tooling</b>
-         */
-        public AndroidxUiToolingLibraryAccessors getTooling() {
-            return laccForAndroidxUiToolingLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxUiTestLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxUiTestLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>junit4</b> with <b>androidx.compose.ui:ui-test-junit4</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJunit4() {
-            return create("androidx.ui.test.junit4");
-        }
-
-        /**
-         * Dependency provider for <b>manifest</b> with <b>androidx.compose.ui:ui-test-manifest</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getManifest() {
-            return create("androidx.ui.test.manifest");
-        }
-
-    }
-
-    public static class AndroidxUiToolingLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-
-        public AndroidxUiToolingLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>tooling</b> with <b>androidx.compose.ui:ui-tooling</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.ui.tooling");
-        }
-
-        /**
-         * Dependency provider for <b>preview</b> with <b>androidx.compose.ui:ui-tooling-preview</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getPreview() {
-            return create("androidx.ui.tooling.preview");
-        }
-
-    }
-
-    public static class CoilLibraryAccessors extends SubDependencyFactory {
-
-        public CoilLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>io.coil-kt.coil3:coil-compose</b> coordinates and
-         * with version reference <b>coil</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            return create("coil.compose");
-        }
-
-        /**
-         * Dependency provider for <b>network</b> with <b>io.coil-kt.coil3:coil-network-okhttp</b> coordinates and
-         * with version reference <b>coil</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getNetwork() {
-            return create("coil.network");
-        }
-
-    }
-
-    public static class DaggerLibraryAccessors extends SubDependencyFactory {
-        private final DaggerHiltLibraryAccessors laccForDaggerHiltLibraryAccessors = new DaggerHiltLibraryAccessors(owner);
-
-        public DaggerLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>dagger.hilt</b>
-         */
-        public DaggerHiltLibraryAccessors getHilt() {
-            return laccForDaggerHiltLibraryAccessors;
-        }
-
-    }
-
-    public static class DaggerHiltLibraryAccessors extends SubDependencyFactory {
-
-        public DaggerHiltLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compiler</b> with <b>com.google.dagger:hilt-compiler</b> coordinates and
-         * with version reference <b>hiltCompiler</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCompiler() {
-            return create("dagger.hilt.compiler");
-        }
-
-    }
-
-    public static class HiltLibraryAccessors extends SubDependencyFactory {
-
-        public HiltLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>android</b> with <b>com.google.dagger:hilt-android</b> coordinates and
-         * with version reference <b>hiltAndroid</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getAndroid() {
-            return create("hilt.android");
-        }
-
-    }
-
-    public static class KotlinxLibraryAccessors extends SubDependencyFactory {
-        private final KotlinxSerializationLibraryAccessors laccForKotlinxSerializationLibraryAccessors = new KotlinxSerializationLibraryAccessors(owner);
-
-        public KotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>kotlinx.serialization</b>
-         */
-        public KotlinxSerializationLibraryAccessors getSerialization() {
-            return laccForKotlinxSerializationLibraryAccessors;
-        }
-
-    }
-
-    public static class KotlinxSerializationLibraryAccessors extends SubDependencyFactory {
-
-        public KotlinxSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>org.jetbrains.kotlinx:kotlinx-serialization-json</b> coordinates and
-         * with version reference <b>kotlinSerialization</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            return create("kotlinx.serialization.json");
-        }
-
-    }
-
-    public static class KtorLibraryAccessors extends SubDependencyFactory {
-        private final KtorClientLibraryAccessors laccForKtorClientLibraryAccessors = new KtorClientLibraryAccessors(owner);
-        private final KtorSerializationLibraryAccessors laccForKtorSerializationLibraryAccessors = new KtorSerializationLibraryAccessors(owner);
-
-        public KtorLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>ktor.client</b>
-         */
-        public KtorClientLibraryAccessors getClient() {
-            return laccForKtorClientLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>ktor.serialization</b>
-         */
-        public KtorSerializationLibraryAccessors getSerialization() {
-            return laccForKtorSerializationLibraryAccessors;
-        }
-
-    }
-
-    public static class KtorClientLibraryAccessors extends SubDependencyFactory {
-        private final KtorClientContentLibraryAccessors laccForKtorClientContentLibraryAccessors = new KtorClientContentLibraryAccessors(owner);
-
-        public KtorClientLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>cio</b> with <b>io.ktor:ktor-client-cio</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCio() {
-            return create("ktor.client.cio");
-        }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>io.ktor:ktor-client-core</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            return create("ktor.client.core");
-        }
-
-        /**
-         * Dependency provider for <b>logging</b> with <b>io.ktor:ktor-client-logging</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getLogging() {
-            return create("ktor.client.logging");
-        }
-
-        /**
-         * Group of libraries at <b>ktor.client.content</b>
-         */
-        public KtorClientContentLibraryAccessors getContent() {
-            return laccForKtorClientContentLibraryAccessors;
-        }
-
-    }
-
-    public static class KtorClientContentLibraryAccessors extends SubDependencyFactory {
-
-        public KtorClientContentLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>negotiation</b> with <b>io.ktor:ktor-client-content-negotiation</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getNegotiation() {
-            return create("ktor.client.content.negotiation");
-        }
-
-    }
-
-    public static class KtorSerializationLibraryAccessors extends SubDependencyFactory {
-        private final KtorSerializationKotlinxLibraryAccessors laccForKtorSerializationKotlinxLibraryAccessors = new KtorSerializationKotlinxLibraryAccessors(owner);
-
-        public KtorSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>ktor.serialization.kotlinx</b>
-         */
-        public KtorSerializationKotlinxLibraryAccessors getKotlinx() {
-            return laccForKtorSerializationKotlinxLibraryAccessors;
-        }
-
-    }
-
-    public static class KtorSerializationKotlinxLibraryAccessors extends SubDependencyFactory {
-
-        public KtorSerializationKotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>io.ktor:ktor-serialization-kotlinx-json</b> coordinates and
-         * with version reference <b>ktor</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            return create("ktor.serialization.kotlinx.json");
-        }
-
-    }
-
-    public static class VersionAccessors extends VersionFactory  {
-
-        public VersionAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Version alias <b>activityCompose</b> with value <b>1.9.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getActivityCompose() { return getVersion("activityCompose"); }
-
-        /**
-         * Version alias <b>agp</b> with value <b>8.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAgp() { return getVersion("agp"); }
-
-        /**
-         * Version alias <b>appcompat</b> with value <b>1.7.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAppcompat() { return getVersion("appcompat"); }
-
-        /**
-         * Version alias <b>cardview</b> with value <b>1.0.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCardview() { return getVersion("cardview"); }
-
-        /**
-         * Version alias <b>coil</b> with value <b>3.0.0-rc01</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoil() { return getVersion("coil"); }
-
-        /**
-         * Version alias <b>composeBom</b> with value <b>2024.10.00</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getComposeBom() { return getVersion("composeBom"); }
-
-        /**
-         * Version alias <b>coreKtx</b> with value <b>1.13.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoreKtx() { return getVersion("coreKtx"); }
-
-        /**
-         * Version alias <b>dataStore</b> with value <b>1.1.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getDataStore() { return getVersion("dataStore"); }
-
-        /**
-         * Version alias <b>espressoCore</b> with value <b>3.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getEspressoCore() { return getVersion("espressoCore"); }
-
-        /**
-         * Version alias <b>hiltAndroid</b> with value <b>2.50</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getHiltAndroid() { return getVersion("hiltAndroid"); }
-
-        /**
-         * Version alias <b>hiltCompiler</b> with value <b>2.50</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getHiltCompiler() { return getVersion("hiltCompiler"); }
-
-        /**
-         * Version alias <b>junit</b> with value <b>4.13.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunit() { return getVersion("junit"); }
-
-        /**
-         * Version alias <b>junitVersion</b> with value <b>1.2.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunitVersion() { return getVersion("junitVersion"); }
-
-        /**
-         * Version alias <b>kotlin</b> with value <b>1.9.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlin() { return getVersion("kotlin"); }
-
-        /**
-         * Version alias <b>kotlinSerialization</b> with value <b>1.6.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlinSerialization() { return getVersion("kotlinSerialization"); }
-
-        /**
-         * Version alias <b>ktor</b> with value <b>2.3.12</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKtor() { return getVersion("ktor"); }
-
-        /**
-         * Version alias <b>lifecycleRuntimeKtx</b> with value <b>2.8.6</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getLifecycleRuntimeKtx() { return getVersion("lifecycleRuntimeKtx"); }
-
-        /**
-         * Version alias <b>navigationCompose</b> with value <b>2.8.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getNavigationCompose() { return getVersion("navigationCompose"); }
-
-        /**
-         * Version alias <b>room</b> with value <b>2.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getRoom() { return getVersion("room"); }
-
-        /**
-         * Version alias <b>splashScreen</b> with value <b>1.0.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getSplashScreen() { return getVersion("splashScreen"); }
-
-    }
-
-    public static class BundleAccessors extends BundleFactory {
-
-        public BundleAccessors(ObjectFactory objects, ProviderFactory providers, DefaultVersionCatalog config, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) { super(objects, providers, config, attributesFactory, capabilityNotationParser); }
-
-        /**
-         * Dependency bundle provider for <b>coil</b> which contains the following dependencies:
-         * <ul>
-         *    <li>io.coil-kt.coil3:coil-compose</li>
-         *    <li>io.coil-kt.coil3:coil-network-okhttp</li>
-         * </ul>
-         * <p>
-         * This bundle was declared in catalog libs.versions.toml
-         */
-        public Provider<ExternalModuleDependencyBundle> getCoil() {
-            return createBundle("coil");
-        }
-
-        /**
-         * Dependency bundle provider for <b>ktor</b> which contains the following dependencies:
-         * <ul>
-         *    <li>io.ktor:ktor-client-cio</li>
-         *    <li>io.ktor:ktor-client-content-negotiation</li>
-         *    <li>io.ktor:ktor-client-core</li>
-         *    <li>io.ktor:ktor-client-logging</li>
-         *    <li>io.ktor:ktor-serialization-kotlinx-json</li>
-         * </ul>
-         * <p>
-         * This bundle was declared in catalog libs.versions.toml
-         */
-        public Provider<ExternalModuleDependencyBundle> getKtor() {
-            return createBundle("ktor");
-        }
-
-    }
-
-    public static class PluginAccessors extends PluginFactory {
-        private final AndroidPluginAccessors paccForAndroidPluginAccessors = new AndroidPluginAccessors(providers, config);
-        private final JetbrainsPluginAccessors paccForJetbrainsPluginAccessors = new JetbrainsPluginAccessors(providers, config);
-
-        public PluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.android</b>
-         */
-        public AndroidPluginAccessors getAndroid() {
-            return paccForAndroidPluginAccessors;
-        }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains</b>
-         */
-        public JetbrainsPluginAccessors getJetbrains() {
-            return paccForJetbrainsPluginAccessors;
-        }
-
-    }
-
-    public static class AndroidPluginAccessors extends PluginFactory {
-
-        public AndroidPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>android.application</b> with plugin id <b>com.android.application</b> and
-         * with version reference <b>agp</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getApplication() { return createPlugin("android.application"); }
-
-    }
-
-    public static class JetbrainsPluginAccessors extends PluginFactory {
-        private final JetbrainsKotlinPluginAccessors paccForJetbrainsKotlinPluginAccessors = new JetbrainsKotlinPluginAccessors(providers, config);
-
-        public JetbrainsPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains.kotlin</b>
-         */
-        public JetbrainsKotlinPluginAccessors getKotlin() {
-            return paccForJetbrainsKotlinPluginAccessors;
-        }
-
-    }
-
-    public static class JetbrainsKotlinPluginAccessors extends PluginFactory {
-
-        public JetbrainsKotlinPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.android</b> with plugin id <b>org.jetbrains.kotlin.android</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getAndroid() { return createPlugin("jetbrains.kotlin.android"); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.serialization</b> with plugin id <b>org.jetbrains.kotlin.plugin.serialization</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getSerialization() { return createPlugin("jetbrains.kotlin.serialization"); }
-
-    }
-
-}
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/AppDependecies.kt
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/AppDependecies.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/AppDependecies.kt
deleted file mode 100644
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/AppDependecies.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,9 +0,0 @@
-package proyecto_moviles.uvg.edu.gt.data.di
-
-import proyecto_moviles.uvg.edu.gt.data.source.UserDb
-import proyecto_moviles.uvg.edu.gt.domain.repository.UserRepository
-
-object AppDependencies {
-    lateinit var userRepository: UserRepository
-    lateinit var database: UserDb
-}
\ No newline at end of file
Index: .gradle/8.7/dependencies-accessors/469750c75d53920d28a0dcb3b26d395ef66919b7/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java
===================================================================
diff --git a/.gradle/8.7/dependencies-accessors/469750c75d53920d28a0dcb3b26d395ef66919b7/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java b/.gradle/8.7/dependencies-accessors/469750c75d53920d28a0dcb3b26d395ef66919b7/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java
deleted file mode 100644
--- a/.gradle/8.7/dependencies-accessors/469750c75d53920d28a0dcb3b26d395ef66919b7/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,865 +0,0 @@
-package org.gradle.accessors.dm;
-
-import org.gradle.api.NonNullApi;
-import org.gradle.api.artifacts.MinimalExternalModuleDependency;
-import org.gradle.plugin.use.PluginDependency;
-import org.gradle.api.artifacts.ExternalModuleDependencyBundle;
-import org.gradle.api.artifacts.MutableVersionConstraint;
-import org.gradle.api.provider.Provider;
-import org.gradle.api.model.ObjectFactory;
-import org.gradle.api.provider.ProviderFactory;
-import org.gradle.api.internal.catalog.AbstractExternalDependencyFactory;
-import org.gradle.api.internal.catalog.DefaultVersionCatalog;
-import java.util.Map;
-import org.gradle.api.internal.attributes.ImmutableAttributesFactory;
-import org.gradle.api.internal.artifacts.dsl.CapabilityNotationParser;
-import javax.inject.Inject;
-
-/**
- * A catalog of dependencies accessible via the {@code libs} extension.
- */
-@NonNullApi
-public class LibrariesForLibsInPluginsBlock extends AbstractExternalDependencyFactory {
-
-    private final AbstractExternalDependencyFactory owner = this;
-    private final AndroidxLibraryAccessors laccForAndroidxLibraryAccessors = new AndroidxLibraryAccessors(owner);
-    private final KotlinxLibraryAccessors laccForKotlinxLibraryAccessors = new KotlinxLibraryAccessors(owner);
-    private final VersionAccessors vaccForVersionAccessors = new VersionAccessors(providers, config);
-    private final BundleAccessors baccForBundleAccessors = new BundleAccessors(objects, providers, config, attributesFactory, capabilityNotationParser);
-    private final PluginAccessors paccForPluginAccessors = new PluginAccessors(providers, config);
-
-    @Inject
-    public LibrariesForLibsInPluginsBlock(DefaultVersionCatalog config, ProviderFactory providers, ObjectFactory objects, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) {
-        super(config, providers, objects, attributesFactory, capabilityNotationParser);
-    }
-
-    /**
-     * Dependency provider for <b>junit</b> with <b>junit:junit</b> coordinates and
-     * with version reference <b>junit</b>
-     * <p>
-     * This dependency was declared in catalog libs.versions.toml
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public Provider<MinimalExternalModuleDependency> getJunit() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return create("junit");
-    }
-
-    /**
-     * Group of libraries at <b>androidx</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public AndroidxLibraryAccessors getAndroidx() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForAndroidxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>kotlinx</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public KotlinxLibraryAccessors getKotlinx() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForKotlinxLibraryAccessors;
-    }
-
-    /**
-     * Group of versions at <b>versions</b>
-     */
-    public VersionAccessors getVersions() {
-        return vaccForVersionAccessors;
-    }
-
-    /**
-     * Group of bundles at <b>bundles</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public BundleAccessors getBundles() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return baccForBundleAccessors;
-    }
-
-    /**
-     * Group of plugins at <b>plugins</b>
-     */
-    public PluginAccessors getPlugins() {
-        return paccForPluginAccessors;
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxActivityLibraryAccessors laccForAndroidxActivityLibraryAccessors = new AndroidxActivityLibraryAccessors(owner);
-        private final AndroidxComposeLibraryAccessors laccForAndroidxComposeLibraryAccessors = new AndroidxComposeLibraryAccessors(owner);
-        private final AndroidxCoreLibraryAccessors laccForAndroidxCoreLibraryAccessors = new AndroidxCoreLibraryAccessors(owner);
-        private final AndroidxEspressoLibraryAccessors laccForAndroidxEspressoLibraryAccessors = new AndroidxEspressoLibraryAccessors(owner);
-        private final AndroidxLifecycleLibraryAccessors laccForAndroidxLifecycleLibraryAccessors = new AndroidxLifecycleLibraryAccessors(owner);
-        private final AndroidxUiLibraryAccessors laccForAndroidxUiLibraryAccessors = new AndroidxUiLibraryAccessors(owner);
-
-        public AndroidxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>appcompat</b> with <b>androidx.appcompat:appcompat</b> coordinates and
-         * with version reference <b>appcompat</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getAppcompat() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.appcompat");
-        }
-
-        /**
-         * Dependency provider for <b>cardview</b> with <b>androidx.cardview:cardview</b> coordinates and
-         * with version reference <b>cardview</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCardview() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.cardview");
-        }
-
-        /**
-         * Dependency provider for <b>junit</b> with <b>androidx.test.ext:junit</b> coordinates and
-         * with version reference <b>junitVersion</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJunit() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.junit");
-        }
-
-        /**
-         * Dependency provider for <b>material3</b> with <b>androidx.compose.material3:material3</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getMaterial3() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.material3");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.activity</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxActivityLibraryAccessors getActivity() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxActivityLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeLibraryAccessors getCompose() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.core</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxCoreLibraryAccessors getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxCoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.espresso</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxEspressoLibraryAccessors getEspresso() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxEspressoLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxLifecycleLibraryAccessors getLifecycle() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxLifecycleLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiLibraryAccessors getUi() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxActivityLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxActivityLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>androidx.activity:activity-compose</b> coordinates and
-         * with version reference <b>activityCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.activity.compose");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxComposeMaterialLibraryAccessors laccForAndroidxComposeMaterialLibraryAccessors = new AndroidxComposeMaterialLibraryAccessors(owner);
-
-        public AndroidxComposeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>bom</b> with <b>androidx.compose:compose-bom</b> coordinates and
-         * with version reference <b>composeBom</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getBom() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.bom");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeMaterialLibraryAccessors getMaterial() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeMaterialLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeMaterialLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxComposeMaterialIconsLibraryAccessors laccForAndroidxComposeMaterialIconsLibraryAccessors = new AndroidxComposeMaterialIconsLibraryAccessors(owner);
-
-        public AndroidxComposeMaterialLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>material</b> with <b>androidx.compose.material:material</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material.icons</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeMaterialIconsLibraryAccessors getIcons() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeMaterialIconsLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeMaterialIconsLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxComposeMaterialIconsLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.compose.material:material-icons-core</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material.icons.core");
-        }
-
-        /**
-         * Dependency provider for <b>extended</b> with <b>androidx.compose.material:material-icons-extended</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getExtended() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material.icons.extended");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxCoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxCoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.core:core-ktx</b> coordinates and
-         * with version reference <b>coreKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.core.ktx");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxEspressoLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxEspressoLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.test.espresso:espresso-core</b> coordinates and
-         * with version reference <b>espressoCore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.espresso.core");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLifecycleLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxLifecycleRuntimeLibraryAccessors laccForAndroidxLifecycleRuntimeLibraryAccessors = new AndroidxLifecycleRuntimeLibraryAccessors(owner);
-
-        public AndroidxLifecycleLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle.runtime</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxLifecycleRuntimeLibraryAccessors getRuntime() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxLifecycleRuntimeLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLifecycleRuntimeLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxLifecycleRuntimeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.lifecycle:lifecycle-runtime-ktx</b> coordinates and
-         * with version reference <b>lifecycleRuntimeKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.lifecycle.runtime.ktx");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxUiTestLibraryAccessors laccForAndroidxUiTestLibraryAccessors = new AndroidxUiTestLibraryAccessors(owner);
-        private final AndroidxUiToolingLibraryAccessors laccForAndroidxUiToolingLibraryAccessors = new AndroidxUiToolingLibraryAccessors(owner);
-
-        public AndroidxUiLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ui</b> with <b>androidx.compose.ui:ui</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui");
-        }
-
-        /**
-         * Dependency provider for <b>graphics</b> with <b>androidx.compose.ui:ui-graphics</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getGraphics() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.graphics");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.test</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiTestLibraryAccessors getTest() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiTestLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.tooling</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiToolingLibraryAccessors getTooling() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiToolingLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiTestLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxUiTestLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>junit4</b> with <b>androidx.compose.ui:ui-test-junit4</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJunit4() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.test.junit4");
-        }
-
-        /**
-         * Dependency provider for <b>manifest</b> with <b>androidx.compose.ui:ui-test-manifest</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getManifest() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.test.manifest");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiToolingLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-
-        public AndroidxUiToolingLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>tooling</b> with <b>androidx.compose.ui:ui-tooling</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.tooling");
-        }
-
-        /**
-         * Dependency provider for <b>preview</b> with <b>androidx.compose.ui:ui-tooling-preview</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getPreview() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.tooling.preview");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KotlinxLibraryAccessors extends SubDependencyFactory {
-        private final KotlinxSerializationLibraryAccessors laccForKotlinxSerializationLibraryAccessors = new KotlinxSerializationLibraryAccessors(owner);
-
-        public KotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>kotlinx.serialization</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KotlinxSerializationLibraryAccessors getSerialization() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKotlinxSerializationLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KotlinxSerializationLibraryAccessors extends SubDependencyFactory {
-
-        public KotlinxSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>org.jetbrains.kotlinx:kotlinx-serialization-json</b> coordinates and
-         * with version <b>1.7.2</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("kotlinx.serialization.json");
-        }
-
-    }
-
-    public static class VersionAccessors extends VersionFactory  {
-
-        public VersionAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Version alias <b>activityCompose</b> with value <b>1.9.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getActivityCompose() { return getVersion("activityCompose"); }
-
-        /**
-         * Version alias <b>agp</b> with value <b>8.5.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAgp() { return getVersion("agp"); }
-
-        /**
-         * Version alias <b>appcompat</b> with value <b>1.7.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAppcompat() { return getVersion("appcompat"); }
-
-        /**
-         * Version alias <b>cardview</b> with value <b>1.0.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCardview() { return getVersion("cardview"); }
-
-        /**
-         * Version alias <b>composeBom</b> with value <b>2024.10.00</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getComposeBom() { return getVersion("composeBom"); }
-
-        /**
-         * Version alias <b>coreKtx</b> with value <b>1.13.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoreKtx() { return getVersion("coreKtx"); }
-
-        /**
-         * Version alias <b>espressoCore</b> with value <b>3.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getEspressoCore() { return getVersion("espressoCore"); }
-
-        /**
-         * Version alias <b>junit</b> with value <b>4.13.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunit() { return getVersion("junit"); }
-
-        /**
-         * Version alias <b>junitVersion</b> with value <b>1.2.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunitVersion() { return getVersion("junitVersion"); }
-
-        /**
-         * Version alias <b>kotlin</b> with value <b>1.9.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlin() { return getVersion("kotlin"); }
-
-        /**
-         * Version alias <b>kotlinSerialization</b> with value <b>1.7.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlinSerialization() { return getVersion("kotlinSerialization"); }
-
-        /**
-         * Version alias <b>lifecycleRuntimeKtx</b> with value <b>2.8.6</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getLifecycleRuntimeKtx() { return getVersion("lifecycleRuntimeKtx"); }
-
-        /**
-         * Version alias <b>navigationCompose</b> with value <b>2.8.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getNavigationCompose() { return getVersion("navigationCompose"); }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class BundleAccessors extends BundleFactory {
-
-        public BundleAccessors(ObjectFactory objects, ProviderFactory providers, DefaultVersionCatalog config, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) { super(objects, providers, config, attributesFactory, capabilityNotationParser); }
-
-    }
-
-    public static class PluginAccessors extends PluginFactory {
-        private final AndroidPluginAccessors paccForAndroidPluginAccessors = new AndroidPluginAccessors(providers, config);
-        private final JetbrainsPluginAccessors paccForJetbrainsPluginAccessors = new JetbrainsPluginAccessors(providers, config);
-
-        public PluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.android</b>
-         */
-        public AndroidPluginAccessors getAndroid() {
-            return paccForAndroidPluginAccessors;
-        }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains</b>
-         */
-        public JetbrainsPluginAccessors getJetbrains() {
-            return paccForJetbrainsPluginAccessors;
-        }
-
-    }
-
-    public static class AndroidPluginAccessors extends PluginFactory {
-
-        public AndroidPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>android.application</b> with plugin id <b>com.android.application</b> and
-         * with version reference <b>agp</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getApplication() { return createPlugin("android.application"); }
-
-    }
-
-    public static class JetbrainsPluginAccessors extends PluginFactory {
-        private final JetbrainsKotlinPluginAccessors paccForJetbrainsKotlinPluginAccessors = new JetbrainsKotlinPluginAccessors(providers, config);
-
-        public JetbrainsPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains.kotlin</b>
-         */
-        public JetbrainsKotlinPluginAccessors getKotlin() {
-            return paccForJetbrainsKotlinPluginAccessors;
-        }
-
-    }
-
-    public static class JetbrainsKotlinPluginAccessors extends PluginFactory {
-
-        public JetbrainsKotlinPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.android</b> with plugin id <b>org.jetbrains.kotlin.android</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getAndroid() { return createPlugin("jetbrains.kotlin.android"); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.serialization</b> with plugin id <b>org.jetbrains.kotlin.plugin.serialization</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getSerialization() { return createPlugin("jetbrains.kotlin.serialization"); }
-
-    }
-
-}
Index: .gradle/8.7/dependencies-accessors/2ee6179fd4917f3f40d4123d36095ab2555a98d6/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java
===================================================================
diff --git a/.gradle/8.7/dependencies-accessors/2ee6179fd4917f3f40d4123d36095ab2555a98d6/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java b/.gradle/8.7/dependencies-accessors/2ee6179fd4917f3f40d4123d36095ab2555a98d6/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java
deleted file mode 100644
--- a/.gradle/8.7/dependencies-accessors/2ee6179fd4917f3f40d4123d36095ab2555a98d6/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,879 +0,0 @@
-package org.gradle.accessors.dm;
-
-import org.gradle.api.NonNullApi;
-import org.gradle.api.artifacts.MinimalExternalModuleDependency;
-import org.gradle.plugin.use.PluginDependency;
-import org.gradle.api.artifacts.ExternalModuleDependencyBundle;
-import org.gradle.api.artifacts.MutableVersionConstraint;
-import org.gradle.api.provider.Provider;
-import org.gradle.api.model.ObjectFactory;
-import org.gradle.api.provider.ProviderFactory;
-import org.gradle.api.internal.catalog.AbstractExternalDependencyFactory;
-import org.gradle.api.internal.catalog.DefaultVersionCatalog;
-import java.util.Map;
-import org.gradle.api.internal.attributes.ImmutableAttributesFactory;
-import org.gradle.api.internal.artifacts.dsl.CapabilityNotationParser;
-import javax.inject.Inject;
-
-/**
- * A catalog of dependencies accessible via the {@code libs} extension.
- */
-@NonNullApi
-public class LibrariesForLibsInPluginsBlock extends AbstractExternalDependencyFactory {
-
-    private final AbstractExternalDependencyFactory owner = this;
-    private final AndroidxLibraryAccessors laccForAndroidxLibraryAccessors = new AndroidxLibraryAccessors(owner);
-    private final KotlinxLibraryAccessors laccForKotlinxLibraryAccessors = new KotlinxLibraryAccessors(owner);
-    private final VersionAccessors vaccForVersionAccessors = new VersionAccessors(providers, config);
-    private final BundleAccessors baccForBundleAccessors = new BundleAccessors(objects, providers, config, attributesFactory, capabilityNotationParser);
-    private final PluginAccessors paccForPluginAccessors = new PluginAccessors(providers, config);
-
-    @Inject
-    public LibrariesForLibsInPluginsBlock(DefaultVersionCatalog config, ProviderFactory providers, ObjectFactory objects, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) {
-        super(config, providers, objects, attributesFactory, capabilityNotationParser);
-    }
-
-    /**
-     * Dependency provider for <b>junit</b> with <b>junit:junit</b> coordinates and
-     * with version reference <b>junit</b>
-     * <p>
-     * This dependency was declared in catalog libs.versions.toml
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public Provider<MinimalExternalModuleDependency> getJunit() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return create("junit");
-    }
-
-    /**
-     * Group of libraries at <b>androidx</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public AndroidxLibraryAccessors getAndroidx() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForAndroidxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>kotlinx</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public KotlinxLibraryAccessors getKotlinx() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return laccForKotlinxLibraryAccessors;
-    }
-
-    /**
-     * Group of versions at <b>versions</b>
-     */
-    public VersionAccessors getVersions() {
-        return vaccForVersionAccessors;
-    }
-
-    /**
-     * Group of bundles at <b>bundles</b>
-     *
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public BundleAccessors getBundles() {
-        org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-        return baccForBundleAccessors;
-    }
-
-    /**
-     * Group of plugins at <b>plugins</b>
-     */
-    public PluginAccessors getPlugins() {
-        return paccForPluginAccessors;
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxActivityLibraryAccessors laccForAndroidxActivityLibraryAccessors = new AndroidxActivityLibraryAccessors(owner);
-        private final AndroidxComposeLibraryAccessors laccForAndroidxComposeLibraryAccessors = new AndroidxComposeLibraryAccessors(owner);
-        private final AndroidxCoreLibraryAccessors laccForAndroidxCoreLibraryAccessors = new AndroidxCoreLibraryAccessors(owner);
-        private final AndroidxEspressoLibraryAccessors laccForAndroidxEspressoLibraryAccessors = new AndroidxEspressoLibraryAccessors(owner);
-        private final AndroidxLifecycleLibraryAccessors laccForAndroidxLifecycleLibraryAccessors = new AndroidxLifecycleLibraryAccessors(owner);
-        private final AndroidxUiLibraryAccessors laccForAndroidxUiLibraryAccessors = new AndroidxUiLibraryAccessors(owner);
-
-        public AndroidxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>appcompat</b> with <b>androidx.appcompat:appcompat</b> coordinates and
-         * with version reference <b>appcompat</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getAppcompat() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.appcompat");
-        }
-
-        /**
-         * Dependency provider for <b>cardview</b> with <b>androidx.cardview:cardview</b> coordinates and
-         * with version reference <b>cardview</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCardview() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.cardview");
-        }
-
-        /**
-         * Dependency provider for <b>junit</b> with <b>androidx.test.ext:junit</b> coordinates and
-         * with version reference <b>junitVersion</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJunit() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.junit");
-        }
-
-        /**
-         * Dependency provider for <b>material3</b> with <b>androidx.compose.material3:material3</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getMaterial3() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.material3");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.activity</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxActivityLibraryAccessors getActivity() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxActivityLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeLibraryAccessors getCompose() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.core</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxCoreLibraryAccessors getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxCoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.espresso</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxEspressoLibraryAccessors getEspresso() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxEspressoLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxLifecycleLibraryAccessors getLifecycle() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxLifecycleLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiLibraryAccessors getUi() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxActivityLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxActivityLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>androidx.activity:activity-compose</b> coordinates and
-         * with version reference <b>activityCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.activity.compose");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxComposeMaterialLibraryAccessors laccForAndroidxComposeMaterialLibraryAccessors = new AndroidxComposeMaterialLibraryAccessors(owner);
-
-        public AndroidxComposeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>bom</b> with <b>androidx.compose:compose-bom</b> coordinates and
-         * with version reference <b>composeBom</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getBom() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.bom");
-        }
-
-        /**
-         * Dependency provider for <b>navigation</b> with <b>androidx.navigation:navigation-compose</b> coordinates and
-         * with version reference <b>navigationCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getNavigation() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.navigation");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeMaterialLibraryAccessors getMaterial() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeMaterialLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeMaterialLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxComposeMaterialIconsLibraryAccessors laccForAndroidxComposeMaterialIconsLibraryAccessors = new AndroidxComposeMaterialIconsLibraryAccessors(owner);
-
-        public AndroidxComposeMaterialLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>material</b> with <b>androidx.compose.material:material</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material.icons</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxComposeMaterialIconsLibraryAccessors getIcons() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxComposeMaterialIconsLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxComposeMaterialIconsLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxComposeMaterialIconsLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.compose.material:material-icons-core</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material.icons.core");
-        }
-
-        /**
-         * Dependency provider for <b>extended</b> with <b>androidx.compose.material:material-icons-extended</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getExtended() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.compose.material.icons.extended");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxCoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxCoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.core:core-ktx</b> coordinates and
-         * with version reference <b>coreKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.core.ktx");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxEspressoLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxEspressoLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.test.espresso:espresso-core</b> coordinates and
-         * with version reference <b>espressoCore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.espresso.core");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLifecycleLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxLifecycleRuntimeLibraryAccessors laccForAndroidxLifecycleRuntimeLibraryAccessors = new AndroidxLifecycleRuntimeLibraryAccessors(owner);
-
-        public AndroidxLifecycleLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle.runtime</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxLifecycleRuntimeLibraryAccessors getRuntime() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxLifecycleRuntimeLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxLifecycleRuntimeLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxLifecycleRuntimeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.lifecycle:lifecycle-runtime-ktx</b> coordinates and
-         * with version reference <b>lifecycleRuntimeKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.lifecycle.runtime.ktx");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxUiTestLibraryAccessors laccForAndroidxUiTestLibraryAccessors = new AndroidxUiTestLibraryAccessors(owner);
-        private final AndroidxUiToolingLibraryAccessors laccForAndroidxUiToolingLibraryAccessors = new AndroidxUiToolingLibraryAccessors(owner);
-
-        public AndroidxUiLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ui</b> with <b>androidx.compose.ui:ui</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui");
-        }
-
-        /**
-         * Dependency provider for <b>graphics</b> with <b>androidx.compose.ui:ui-graphics</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getGraphics() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.graphics");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.test</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiTestLibraryAccessors getTest() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiTestLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.tooling</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public AndroidxUiToolingLibraryAccessors getTooling() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForAndroidxUiToolingLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiTestLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxUiTestLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>junit4</b> with <b>androidx.compose.ui:ui-test-junit4</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJunit4() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.test.junit4");
-        }
-
-        /**
-         * Dependency provider for <b>manifest</b> with <b>androidx.compose.ui:ui-test-manifest</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getManifest() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.test.manifest");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class AndroidxUiToolingLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-
-        public AndroidxUiToolingLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>tooling</b> with <b>androidx.compose.ui:ui-tooling</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.tooling");
-        }
-
-        /**
-         * Dependency provider for <b>preview</b> with <b>androidx.compose.ui:ui-tooling-preview</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getPreview() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("androidx.ui.tooling.preview");
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KotlinxLibraryAccessors extends SubDependencyFactory {
-        private final KotlinxSerializationLibraryAccessors laccForKotlinxSerializationLibraryAccessors = new KotlinxSerializationLibraryAccessors(owner);
-
-        public KotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>kotlinx.serialization</b>
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public KotlinxSerializationLibraryAccessors getSerialization() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return laccForKotlinxSerializationLibraryAccessors;
-        }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class KotlinxSerializationLibraryAccessors extends SubDependencyFactory {
-
-        public KotlinxSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>org.jetbrains.kotlinx:kotlinx-serialization-json</b> coordinates and
-         * with version reference <b>kotlinSerialization</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         *
-         * @deprecated Will be removed in Gradle 9.0.
-         */
-        @Deprecated
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            org.gradle.internal.deprecation.DeprecationLogger.deprecateBehaviour("Accessing libraries or bundles from version catalogs in the plugins block.").withAdvice("Only use versions or plugins from catalogs in the plugins block.").willBeRemovedInGradle9().withUpgradeGuideSection(8, "kotlin_dsl_deprecated_catalogs_plugins_block").nagUser();
-            return create("kotlinx.serialization.json");
-        }
-
-    }
-
-    public static class VersionAccessors extends VersionFactory  {
-
-        public VersionAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Version alias <b>activityCompose</b> with value <b>1.9.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getActivityCompose() { return getVersion("activityCompose"); }
-
-        /**
-         * Version alias <b>agp</b> with value <b>8.6.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAgp() { return getVersion("agp"); }
-
-        /**
-         * Version alias <b>appcompat</b> with value <b>1.7.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAppcompat() { return getVersion("appcompat"); }
-
-        /**
-         * Version alias <b>cardview</b> with value <b>1.0.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCardview() { return getVersion("cardview"); }
-
-        /**
-         * Version alias <b>composeBom</b> with value <b>2024.10.00</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getComposeBom() { return getVersion("composeBom"); }
-
-        /**
-         * Version alias <b>coreKtx</b> with value <b>1.13.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoreKtx() { return getVersion("coreKtx"); }
-
-        /**
-         * Version alias <b>espressoCore</b> with value <b>3.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getEspressoCore() { return getVersion("espressoCore"); }
-
-        /**
-         * Version alias <b>junit</b> with value <b>4.13.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunit() { return getVersion("junit"); }
-
-        /**
-         * Version alias <b>junitVersion</b> with value <b>1.2.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunitVersion() { return getVersion("junitVersion"); }
-
-        /**
-         * Version alias <b>kotlin</b> with value <b>1.9.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlin() { return getVersion("kotlin"); }
-
-        /**
-         * Version alias <b>kotlinSerialization</b> with value <b>1.6.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlinSerialization() { return getVersion("kotlinSerialization"); }
-
-        /**
-         * Version alias <b>lifecycleRuntimeKtx</b> with value <b>2.8.6</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getLifecycleRuntimeKtx() { return getVersion("lifecycleRuntimeKtx"); }
-
-        /**
-         * Version alias <b>navigationCompose</b> with value <b>2.8.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getNavigationCompose() { return getVersion("navigationCompose"); }
-
-    }
-
-    /**
-     * @deprecated Will be removed in Gradle 9.0.
-     */
-    @Deprecated
-    public static class BundleAccessors extends BundleFactory {
-
-        public BundleAccessors(ObjectFactory objects, ProviderFactory providers, DefaultVersionCatalog config, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) { super(objects, providers, config, attributesFactory, capabilityNotationParser); }
-
-    }
-
-    public static class PluginAccessors extends PluginFactory {
-        private final AndroidPluginAccessors paccForAndroidPluginAccessors = new AndroidPluginAccessors(providers, config);
-        private final JetbrainsPluginAccessors paccForJetbrainsPluginAccessors = new JetbrainsPluginAccessors(providers, config);
-
-        public PluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.android</b>
-         */
-        public AndroidPluginAccessors getAndroid() {
-            return paccForAndroidPluginAccessors;
-        }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains</b>
-         */
-        public JetbrainsPluginAccessors getJetbrains() {
-            return paccForJetbrainsPluginAccessors;
-        }
-
-    }
-
-    public static class AndroidPluginAccessors extends PluginFactory {
-
-        public AndroidPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>android.application</b> with plugin id <b>com.android.application</b> and
-         * with version reference <b>agp</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getApplication() { return createPlugin("android.application"); }
-
-    }
-
-    public static class JetbrainsPluginAccessors extends PluginFactory {
-        private final JetbrainsKotlinPluginAccessors paccForJetbrainsKotlinPluginAccessors = new JetbrainsKotlinPluginAccessors(providers, config);
-
-        public JetbrainsPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains.kotlin</b>
-         */
-        public JetbrainsKotlinPluginAccessors getKotlin() {
-            return paccForJetbrainsKotlinPluginAccessors;
-        }
-
-    }
-
-    public static class JetbrainsKotlinPluginAccessors extends PluginFactory {
-
-        public JetbrainsKotlinPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.android</b> with plugin id <b>org.jetbrains.kotlin.android</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getAndroid() { return createPlugin("jetbrains.kotlin.android"); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.serialization</b> with plugin id <b>org.jetbrains.kotlin.plugin.serialization</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getSerialization() { return createPlugin("jetbrains.kotlin.serialization"); }
-
-    }
-
-}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/shelved.patch	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,1448 +0,0 @@
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package proyecto_moviles.uvg.edu.gt.Calendar\r\n\r\nimport android.widget.CalendarView\r\nimport androidx.compose.animation.*\r\nimport androidx.compose.animation.core.tween\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.automirrored.filled.ArrowBack\r\nimport androidx.compose.material.icons.automirrored.filled.List\r\nimport androidx.compose.material.icons.filled.*\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.viewinterop.AndroidView\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\n@OptIn(ExperimentalAnimationApi::class, ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun CalendarScreen() {\r\n    var selectedDate by remember { mutableStateOf(\"\") }\r\n\r\n    val formatter = SimpleDateFormat(\"EEE, MMM dd\", Locale.getDefault())\r\n\r\n    Scaffold(\r\n        topBar = {\r\n            TopAppBar(\r\n                title = { Text(\"Calendar\") },\r\n                navigationIcon = {\r\n                    IconButton(onClick = { /* Acción para retroceder */ }) {\r\n                        Icon(Icons.AutoMirrored.Filled.ArrowBack, contentDescription = \"Back\")\r\n                    }\r\n                },\r\n                colors = TopAppBarDefaults.topAppBarColors(\r\n                    containerColor = MaterialTheme.colorScheme.primaryContainer,\r\n                    titleContentColor = MaterialTheme.colorScheme.onPrimaryContainer\r\n                )\r\n            )\r\n        },\r\n        content = { paddingValues ->\r\n            Column(\r\n                modifier = Modifier\r\n                    .fillMaxSize()\r\n                    .padding(paddingValues)\r\n                    .padding(16.dp)\r\n                    .background(MaterialTheme.colorScheme.surface)\r\n            ) {\r\n\r\n                AnimatedContent(\r\n                    targetState = selectedDate,\r\n                    transitionSpec = {\r\n                        (fadeIn(animationSpec = tween(300)) + slideInVertically()).togetherWith(\r\n                            fadeOut(animationSpec = tween(300)) + slideOutVertically()\r\n                        )\r\n                    }, label = \"\"\r\n                ) { targetDate ->\r\n                    Text(\r\n                        text = targetDate.ifEmpty { \"Mon, Aug 17\" },\r\n                        style = MaterialTheme.typography.headlineMedium,\r\n                        color = MaterialTheme.colorScheme.onSurface,\r\n                        modifier = Modifier.padding(bottom = 16.dp)\r\n                    )\r\n                }\r\n\r\n                Card(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(bottom = 16.dp),\r\n                    colors = CardDefaults.cardColors(\r\n                        containerColor = MaterialTheme.colorScheme.primaryContainer\r\n                    ),\r\n                    elevation = CardDefaults.cardElevation(4.dp)\r\n                ) {\r\n                    AndroidView(\r\n                        factory = { CalendarView(it).apply {\r\n                            setOnDateChangeListener { _, year, month, dayOfMonth ->\r\n                                val calendar = Calendar.getInstance()\r\n                                calendar.set(year, month, dayOfMonth)\r\n                                selectedDate = formatter.format(calendar.time)\r\n                            }\r\n                        }},\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .padding(8.dp)\r\n                    )\r\n                }\r\n\r\n                AnimatedVisibility(\r\n                    visible = selectedDate.isNotEmpty(),\r\n                    enter = fadeIn() + expandVertically(),\r\n                    exit = fadeOut() + shrinkVertically()\r\n                ) {\r\n                    EventList(\r\n                        events = listOf(\r\n                            \"Project 4\" to \"Task: Hello World\",\r\n                            \"Math exam\" to \"Study\"\r\n                        )\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        bottomBar = {\r\n            NavigationBar(\r\n                containerColor = MaterialTheme.colorScheme.primaryContainer,\r\n            ) {\r\n                NavigationBarItem(\r\n                    icon = {\r\n                        Icon(\r\n                            Icons.AutoMirrored.Filled.List,\r\n                            contentDescription = \"To do list\"\r\n                        )\r\n                    },\r\n                    label = { Text(\"To do list\") },\r\n                    selected = false,\r\n                    onClick = { /*TODO*/ }\r\n                )\r\n                NavigationBarItem(\r\n                    icon = { Icon(Icons.Filled.CalendarToday, contentDescription = \"Calendar\") },\r\n                    label = { Text(\"Calendar\") },\r\n                    selected = true,\r\n                    onClick = { /*TODO*/ }\r\n                )\r\n                NavigationBarItem(\r\n                    icon = { Icon(Icons.Filled.Person, contentDescription = \"Profile\") },\r\n                    label = { Text(\"Profile\") },\r\n                    selected = false,\r\n                    onClick = { /*TODO*/ }\r\n                )\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n@Composable\r\nfun EventItem(icon: androidx.compose.ui.graphics.vector.ImageVector, title: String, description: String) {\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(vertical = 8.dp),\r\n        verticalAlignment = Alignment.CenterVertically\r\n    ) {\r\n        Icon(\r\n            imageVector = icon,\r\n            contentDescription = null,\r\n            tint = MaterialTheme.colorScheme.primary,\r\n            modifier = Modifier.size(48.dp)\r\n        )\r\n        Spacer(modifier = Modifier.width(16.dp))\r\n        Column {\r\n            Text(\r\n                text = title,\r\n                style = MaterialTheme.typography.bodyLarge,\r\n                fontWeight = androidx.compose.ui.text.font.FontWeight.Bold,\r\n                color = MaterialTheme.colorScheme.onSurface\r\n            )\r\n            Text(\r\n                text = description,\r\n                style = MaterialTheme.typography.bodySmall,\r\n                color = MaterialTheme.colorScheme.onSurfaceVariant\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun EventList(events: List<Pair<String, String>>) {\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(16.dp)\r\n    ) {\r\n        events.forEach { event ->\r\n            EventItem(icon = Icons.Default.Notifications, title = event.first, description = event.second)\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n        }\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun CalendarScreenPreview() {\r\n    CalendarScreen()\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt	(date 1729930922765)
-@@ -16,12 +16,15 @@
- import androidx.compose.ui.tooling.preview.Preview
- import androidx.compose.ui.unit.dp
- import androidx.compose.ui.viewinterop.AndroidView
-+import androidx.navigation.NavController
- import java.text.SimpleDateFormat
- import java.util.*
- 
-+
-+
- @OptIn(ExperimentalAnimationApi::class, ExperimentalMaterial3Api::class)
- @Composable
--fun CalendarScreen() {
-+fun CalendarScreen( navController: NavController ,onNavigateToToDo: () -> Unit, onNavigateToProfile: () -> Unit, onNavigateToHome: () -> Unit) {
-     var selectedDate by remember { mutableStateOf("") }
- 
-     val formatter = SimpleDateFormat("EEE, MMM dd", Locale.getDefault())
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package proyecto_moviles.uvg.edu.gt.Calendar\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt	(date 1729921569034)
-@@ -1,2 +1,13 @@
- package proyecto_moviles.uvg.edu.gt.Calendar
- 
-+import androidx.navigation.NavController
-+import kotlinx.serialization.Serializable
-+
-+@Serializable
-+sealed class CalendarDestination(val route: String) {
-+    data object Calendar : CalendarDestination("calendar")
-+}
-+
-+fun NavController.navigateToCalendar() {
-+    this.navigate(CalendarDestination.Calendar.route)
-+}
-\ No newline at end of file
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ /dev/null	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-@@ -1,170 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.New_Task
--
--import android.app.DatePickerDialog
--import android.content.Context
--import androidx.compose.foundation.Image
--import androidx.compose.foundation.layout.*
--import androidx.compose.material.icons.Icons
--import androidx.compose.material.icons.automirrored.filled.ArrowBack
--import androidx.compose.material.icons.filled.DateRange
--import androidx.compose.material.icons.filled.Edit
--import androidx.compose.material3.*
--import androidx.compose.runtime.*
--import androidx.compose.ui.Alignment
--import androidx.compose.ui.Modifier
--import androidx.compose.ui.graphics.vector.ImageVector
--import androidx.compose.ui.layout.ContentScale
--import androidx.compose.ui.platform.LocalContext
--import androidx.compose.ui.res.vectorResource
--import androidx.compose.ui.tooling.preview.Preview
--import androidx.compose.ui.unit.dp
--import proyecto_moviles.uvg.edu.gt.R
--import java.util.*
--
--@OptIn(ExperimentalMaterial3Api::class)
--@Composable
--fun NewTaskScreen() {
--    var startDate by remember { mutableStateOf("") }
--    var endDate by remember { mutableStateOf("") }
--    val context = LocalContext.current
--
--    Scaffold(
--        topBar = {
--            CenterAlignedTopAppBar(
--                title = { Text("New Task") },
--                navigationIcon = {
--                    IconButton(onClick = { /* Acción al presionar botón de volver */ }) {
--                        Icon(Icons.AutoMirrored.Filled.ArrowBack, contentDescription = "Back")
--                    }
--                }
--            )
--        }
--    ) { paddingValues ->
--        Column(
--            modifier = Modifier
--                .padding(paddingValues)
--                .padding(16.dp)
--        ) {
--            // Imagen
--            Image(
--                imageVector = ImageVector.vectorResource(id = R.drawable.ic_launcher_foreground),
--                contentDescription = "Task icon",
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .wrapContentHeight()
--                    .padding(16.dp),
--                contentScale = ContentScale.Fit
--            )
--
--            // Nombre de la tarea
--            OutlinedTextField(
--                value = "",
--                onValueChange = {},
--                label = { Text("Task name") },
--                modifier = Modifier.fillMaxWidth(),
--                trailingIcon = {
--                    Icon(Icons.Filled.Edit, contentDescription = "Edit task name")
--                }
--            )
--
--            Spacer(modifier = Modifier.height(8.dp))
--
--            // Descripción de la tarea
--            OutlinedTextField(
--                value = "",
--                onValueChange = {},
--                label = { Text("Task description") },
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .padding(vertical = 8.dp),
--                trailingIcon = {
--                    Icon(Icons.Filled.Edit, contentDescription = "Edit task description")
--                }
--            )
--
--            Spacer(modifier = Modifier.height(8.dp))
--
--            // Campo de fecha de inicio
--            DatePickerField(
--                label = "Start date",
--                selectedDate = startDate,
--                onDateSelected = { startDate = it },
--                context = context
--            )
--
--            Spacer(modifier = Modifier.height(8.dp))
--
--            // Campo de fecha de fin
--            DatePickerField(
--                label = "End date",
--                selectedDate = endDate,
--                onDateSelected = { endDate = it },
--                context = context
--            )
--
--            Spacer(modifier = Modifier.height(16.dp))
--
--            // Botón de guardar
--            Box(
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .padding(top = 16.dp),
--                contentAlignment = Alignment.Center
--            ) {
--                Button(
--                    onClick = { /* Acción para guardar tarea */ }
--                ) {
--                    Text("Save")
--                }
--            }
--        }
--    }
--}
--
--@Composable
--fun DatePickerField(
--    label: String,
--    selectedDate: String,
--    onDateSelected: (String) -> Unit,
--    context: Context
--) {
--    OutlinedTextField(
--        value = selectedDate,
--        onValueChange = { /* No hace nada porque es solo lectura */ },
--        label = { Text(label) },
--        placeholder = { Text("mm/dd/yyyy") },
--        modifier = Modifier
--            .fillMaxWidth()
--            .padding(bottom = 8.dp),
--        trailingIcon = {
--            IconButton(onClick = {
--                showDatePicker(context, onDateSelected)
--            }) {
--                Icon(imageVector = Icons.Filled.DateRange, contentDescription = "Select $label")
--            }
--        },
--        readOnly = true
--    )
--}
--
--fun showDatePicker(context: Context, onDateSelected: (String) -> Unit) {
--    val calendar = Calendar.getInstance()
--    val year = calendar.get(Calendar.YEAR)
--    val month = calendar.get(Calendar.MONTH)
--    val day = calendar.get(Calendar.DAY_OF_MONTH)
--
--    DatePickerDialog(
--        context,
--        { _, selectedYear, selectedMonth, selectedDay ->
--            val selectedDate = "${selectedMonth + 1}/$selectedDay/$selectedYear"
--            onDateSelected(selectedDate)
--        },
--        year, month, day
--    ).show()
--}
--
--@Preview(showBackground = true)
--@Composable
--fun NewTaskView() {
--    NewTaskScreen()
--}
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ /dev/null	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-@@ -1,2 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Projects
--
-Index: .idea/modules/app/Proyecto-moviles.app.iml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/modules/app/Proyecto-moviles.app.iml b/.idea/modules/app/Proyecto-moviles.app.iml
-deleted file mode 100644
---- a/.idea/modules/app/Proyecto-moviles.app.iml	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ /dev/null	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-@@ -1,9 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<module version="4">
--  <component name="ModuleClassLoaderOverlays">
--    <paths>
--      <option value="C:\Users\paula\AppData\Local\Temp\overlay4077726220542928961" />
--      <option value="C:\Users\paula\AppData\Local\Temp\overlay5248428913140422612" />
--    </paths>
--  </component>
--</module>
-\ No newline at end of file
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ /dev/null	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-@@ -1,37 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.data.api
--
--import io.ktor.client.HttpClient
--import io.ktor.client.engine.cio.CIO
--import io.ktor.client.plugins.contentnegotiation.ContentNegotiation
--import io.ktor.client.plugins.defaultRequest
--import io.ktor.client.plugins.logging.ANDROID
--import io.ktor.client.plugins.logging.LogLevel
--import io.ktor.client.plugins.logging.Logger
--import io.ktor.client.plugins.logging.Logging
--import io.ktor.http.ContentType
--import io.ktor.http.contentType
--import io.ktor.serialization.kotlinx.json.json
--import kotlinx.serialization.json.Json
--
--object HttpClientFactory {
--    fun create(): HttpClient {
--        return HttpClient(CIO.create()){
--            install (Logging) {
--                logger = Logger.ANDROID
--                level = LogLevel.ALL
--            }
--
--            install (ContentNegotiation) {
--                json(
--                    json = Json{
--                        ignoreUnknownKeys = true
--                    }
--                )
--            }
--
--            defaultRequest {
--                contentType(ContentType.Application.Json)
--            }
--        }
--    }
--}
-\ No newline at end of file
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ /dev/null	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-@@ -1,2 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.New_Task
--
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ /dev/null	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-@@ -1,2 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Sing_up
--
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ /dev/null	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-@@ -1,200 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Projects
--
--import androidx.compose.foundation.Image
--import androidx.compose.foundation.background
--import androidx.compose.foundation.layout.*
--import androidx.compose.foundation.shape.CircleShape
--import androidx.compose.material.icons.Icons
--import androidx.compose.material.icons.filled.MoreVert
--import androidx.compose.material.icons.filled.Add
--import androidx.compose.material3.*
--import androidx.compose.runtime.*
--import androidx.compose.ui.Alignment
--import androidx.compose.ui.Modifier
--import androidx.compose.ui.graphics.Color
--import androidx.compose.ui.layout.ContentScale
--import androidx.compose.ui.res.painterResource
--import androidx.compose.ui.text.font.FontWeight
--import androidx.compose.ui.unit.dp
--import androidx.compose.ui.unit.sp
--import androidx.compose.ui.tooling.preview.Preview
--import androidx.compose.ui.draw.clip
--import proyecto_moviles.uvg.edu.gt.R
--
--@OptIn(ExperimentalMaterial3Api::class)
--@Composable
--fun ProjectsScreen() {
--    // Estado para manejar si el menú de opciones está desplegado o no
--    var expanded by remember { mutableStateOf(false) }
--    // Estado para manejar la visibilidad del diálogo de confirmación
--    var showDeleteConfirmation by remember { mutableStateOf(false) }
--
--    Scaffold(
--        floatingActionButton = {
--            FloatingActionButton(
--                onClick = { /* Acción del botón flotante */ }
--            ) {
--                Icon(
--                    imageVector = Icons.Default.Add,
--                    contentDescription = "Add new project"
--                )
--            }
--        },
--        containerColor = MaterialTheme.colorScheme.background
--    ) { paddingValues ->
--        Column(
--            modifier = Modifier
--                .fillMaxSize()
--                .padding(paddingValues)
--                .padding(16.dp),
--            verticalArrangement = Arrangement.Top,
--            horizontalAlignment = Alignment.CenterHorizontally
--        ) {
--            // Card principal
--            Card(
--                modifier = Modifier.fillMaxWidth(),
--                colors = CardDefaults.cardColors(containerColor = MaterialTheme.colorScheme.surfaceVariant)
--            ) {
--                Column(
--                    modifier = Modifier.padding(16.dp),
--                    verticalArrangement = Arrangement.spacedBy(8.dp)
--                ) {
--                    // Sección de encabezado con el círculo y el texto
--                    Row(
--                        modifier = Modifier.fillMaxWidth(),
--                        verticalAlignment = Alignment.CenterVertically,
--                        horizontalArrangement = Arrangement.SpaceBetween
--                    ) {
--                        Box(
--                            modifier = Modifier
--                                .size(40.dp)
--                                .clip(CircleShape)
--                                .background(MaterialTheme.colorScheme.primary),
--                            contentAlignment = Alignment.Center
--                        ) {
--                            Text(
--                                text = "A", // Inicial
--                                fontWeight = FontWeight.Bold,
--                                fontSize = 20.sp,
--                                color = MaterialTheme.colorScheme.onPrimary
--                            )
--                        }
--
--                        Text(
--                            text = "Project 1\nCompleted",
--                            fontSize = 16.sp,
--                            color = MaterialTheme.colorScheme.onSurface,
--                            fontWeight = FontWeight.Bold
--                        )
--
--                        // Ícono de "More options"
--                        Box {
--                            IconButton(onClick = { expanded = true }) {
--                                Icon(
--                                    imageVector = Icons.Default.MoreVert,
--                                    contentDescription = "More options"
--                                )
--                            }
--
--                            // Menú desplegable
--                            DropdownMenu(
--                                expanded = expanded,
--                                onDismissRequest = { expanded = false }
--                            ) {
--                                DropdownMenuItem(
--                                    text = { Text("Delete project") },
--                                    onClick = {
--                                        expanded = false
--                                        showDeleteConfirmation = true // Muestra la advertencia
--                                    }
--                                )
--                            }
--                        }
--                    }
--
--                    Spacer(modifier = Modifier.height(8.dp))
--
--                    // Imagen representativa
--                    Image(
--                        painter = painterResource(id = R.drawable.ic_placeholder), // Asegúrate de tener esta imagen en drawable
--                        contentDescription = "Calculus image",
--                        modifier = Modifier.fillMaxWidth(),
--                        contentScale = ContentScale.Crop
--                    )
--
--                    Spacer(modifier = Modifier.height(8.dp))
--
--                    // Descripción
--                    Text(
--                        text = "Calculus 2",
--                        fontSize = 20.sp,
--                        fontWeight = FontWeight.Bold,
--                        color = MaterialTheme.colorScheme.onSurface
--                    )
--
--                    Text(
--                        text = "What do you think will be this class?",
--                        fontSize = 16.sp,
--                        color = MaterialTheme.colorScheme.onSurfaceVariant
--                    )
--
--                    Text(
--                        text = "The group must express different topics that they think they are going to study.",
--                        fontSize = 14.sp,
--                        color = MaterialTheme.colorScheme.onSurfaceVariant
--                    )
--
--                    Spacer(modifier = Modifier.height(8.dp))
--
--                    // Botón Select
--                    Button(
--                        onClick = { /* Acción del botón */ },
--                        modifier = Modifier.fillMaxWidth(),
--                        colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.primary)
--                    ) {
--                        Text(
--                            text = "Select",
--                            color = MaterialTheme.colorScheme.onPrimary
--                        )
--                    }
--                }
--            }
--        }
--    }
--
--    // Diálogo de advertencia de eliminación
--    if (showDeleteConfirmation) {
--        AlertDialog(
--            onDismissRequest = { showDeleteConfirmation = false },
--            title = { Text(text = "Delete Project") },
--            text = { Text("Are you sure you want to delete this project? This action cannot be undone.") },
--            confirmButton = {
--                Button(
--                    onClick = {
--                        // Lógica para eliminar el proyecto
--                        showDeleteConfirmation = false
--                    }
--                ) {
--                    Text("Delete")
--                }
--            },
--            dismissButton = {
--                Button(
--                    onClick = { showDeleteConfirmation = false }
--                ) {
--                    Text("Cancel")
--                }
--            }
--        )
--    }
--}
--
--//@Preview(showBackground = true)
--//@Composable
--//fun PreviewProjectsScreen() {
--//    PruebasProjectoTheme {
--//        ProjectsScreen()
--//    }
--//}
--
--
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ /dev/null	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-@@ -1,128 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Sign_up
--
--import androidx.compose.foundation.Image
--import androidx.compose.foundation.background
--import androidx.compose.foundation.layout.*
--import androidx.compose.material3.*
--import androidx.compose.runtime.*
--import androidx.compose.ui.Alignment
--import androidx.compose.ui.Modifier
--import androidx.compose.ui.graphics.graphicsLayer
--import androidx.compose.ui.res.painterResource
--import androidx.compose.ui.text.font.FontWeight
--import androidx.compose.ui.text.input.PasswordVisualTransformation
--import androidx.compose.ui.text.input.VisualTransformation
--import androidx.compose.ui.tooling.preview.Preview
--import androidx.compose.ui.unit.dp
--import androidx.compose.ui.unit.sp
--import proyecto_moviles.uvg.edu.gt.R
--
--@Composable
--fun SignUpScreen() {
--    Box(
--        modifier = Modifier
--            .fillMaxSize()
--            .background(MaterialTheme.colorScheme.tertiary)
--    ) {
--
--        Image(
--            painter = painterResource(id = R.drawable.logo),
--            contentDescription = "SignUp Background Logo",
--            modifier = Modifier
--                .fillMaxSize()
--                .graphicsLayer {
--                    alpha = 0.1f
--                }
--        )
--
--        Column(
--            modifier = Modifier
--                .fillMaxSize()
--                .padding(24.dp),
--            horizontalAlignment = Alignment.CenterHorizontally,
--            verticalArrangement = Arrangement.Center
--        ) {
--
--
--
--            Text(
--                text = "Create a New Account",
--                color = MaterialTheme.colorScheme.onTertiary,
--                fontSize = 55.sp,
--                fontWeight = FontWeight.Bold,
--                modifier = Modifier.padding(bottom = 32.dp)
--            )
--
--            val username = remember { mutableStateOf("") }
--            TextField(
--                value = username.value,
--                onValueChange = { username.value = it },
--                label = { Text("Username") },
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .padding(bottom = 16.dp)
--            )
--
--            val email = remember { mutableStateOf("") }
--            TextField(
--                value = email.value,
--                onValueChange = { email.value = it },
--                label = { Text("Email") },
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .padding(bottom = 16.dp)
--            )
--
--            val password = remember { mutableStateOf("") }
--            val passwordVisible = remember { mutableStateOf(false) }
--            TextField(
--                value = password.value,
--                onValueChange = { password.value = it },
--                label = { Text("Password") },
--                visualTransformation = if (passwordVisible.value) VisualTransformation.None else PasswordVisualTransformation(),
--                trailingIcon = {
--                    IconButton(onClick = { passwordVisible.value = !passwordVisible.value }) {
--                        Icon(
--                            painter = painterResource(id = R.drawable.visibility_24px),
--                            contentDescription = if (passwordVisible.value) "Hide password" else "Show password"
--                        )
--                    }
--                },
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .padding(bottom = 16.dp)
--            )
--
--            Button(
--                onClick = { /* Acción de Sign Up */ },
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .height(50.dp)
--                    .padding(bottom = 8.dp),
--                colors = ButtonDefaults.buttonColors(MaterialTheme.colorScheme.onTertiaryContainer)
--            ) {
--                Text(text = "Sign Up", color = MaterialTheme.colorScheme.tertiaryContainer)
--            }
--
--            Spacer(modifier = Modifier.height(16.dp))
--
--            Column(
--                horizontalAlignment = Alignment.CenterHorizontally,
--                modifier = Modifier.fillMaxWidth()
--            ) {
--                Text(text = "Have an account?", color = MaterialTheme.colorScheme.onBackground)
--                Spacer(modifier = Modifier.width(4.dp))
--                TextButton(onClick = { /* Acción de Log In */ }) {
--                    Text(text = "  Log In", color = MaterialTheme.colorScheme.onTertiaryContainer, fontWeight = FontWeight.Bold, modifier = Modifier.width(60.dp))
--                }
--            }
--        }
--    }
--}
--
--@Preview(showBackground = true)
--@Composable
--fun SignUpScreenPreview() {
--    SignUpScreen()
--}
--
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ /dev/null	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-@@ -1,2 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Create_Proyecto
--
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt
-deleted file mode 100644
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ /dev/null	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-@@ -1,187 +0,0 @@
--package proyecto_moviles.uvg.edu.gt.Create_Proyecto
--
--//noinspection UsingMaterialAndMaterial3Libraries
--import androidx.compose.foundation.background
--import androidx.compose.foundation.layout.Arrangement
--import androidx.compose.foundation.layout.Box
--import androidx.compose.foundation.layout.Column
--import androidx.compose.foundation.layout.Row
--import androidx.compose.foundation.layout.Spacer
--import androidx.compose.foundation.layout.fillMaxSize
--import androidx.compose.foundation.layout.fillMaxWidth
--import androidx.compose.foundation.layout.height
--import androidx.compose.foundation.layout.padding
--import androidx.compose.foundation.layout.size
--import androidx.compose.foundation.layout.width
--import androidx.compose.material.DropdownMenuItem
--import androidx.compose.material.Icon
--import androidx.compose.material.IconButton
--import androidx.compose.material.icons.Icons
--import androidx.compose.material.icons.filled.ArrowDropUp
--import androidx.compose.material3.Button
--import androidx.compose.material3.DropdownMenu
--import androidx.compose.material3.Text
--import androidx.compose.material3.TextField
--import androidx.compose.runtime.Composable
--import androidx.compose.runtime.getValue
--import androidx.compose.runtime.mutableStateOf
--import androidx.compose.runtime.remember
--import androidx.compose.runtime.setValue
--import androidx.compose.ui.Alignment
--import androidx.compose.ui.Modifier
--import androidx.compose.ui.graphics.Color
--import androidx.compose.ui.text.font.FontWeight
--import androidx.compose.ui.tooling.preview.Preview
--import androidx.compose.ui.unit.dp
--import androidx.compose.ui.unit.sp
--
--@Composable
--fun CreateProjectScreenContent() {
--    var projectNameCps by remember { mutableStateOf("") }
--    var descriptionCps by remember { mutableStateOf("") }
--    var inviteEmailCps by remember { mutableStateOf("") }
--    var generalAccessCps by remember { mutableStateOf("Private") }
--
--    Column(
--        modifier = Modifier
--            .fillMaxSize()
--            .padding(16.dp),
--        verticalArrangement = Arrangement.Top,
--        horizontalAlignment = Alignment.CenterHorizontally
--    ) {
--        // Image Placeholder
--        Box(
--            modifier = Modifier
--                .size(200.dp)
--                .background(Color.Gray),
--            contentAlignment = Alignment.Center
--        ) {
--            // Placeholder para la imagen
--            Column(horizontalAlignment = Alignment.CenterHorizontally) {
--                Icon(
--                    imageVector = Icons.Filled.ArrowDropUp,
--                    contentDescription = "Image Placeholder",
--                    modifier = Modifier.size(50.dp)
--                )
--                Spacer(modifier = Modifier.height(16.dp))
--                Text(text = "1st", fontSize = 20.sp, fontWeight = FontWeight.Bold)
--            }
--        }
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        Column(
--            modifier = Modifier.fillMaxWidth(),
--            horizontalAlignment = Alignment.Start
--        ) {
--            // Project name
--            Text(
--                text = "Project Name:",
--                fontSize = 17.sp,
--                modifier = Modifier.align(Alignment.Start)
--            )
--
--            TextField(
--                value = projectNameCps,
--                onValueChange = { projectNameCps = it },
--                label = { Text("Project name") },
--                modifier = Modifier.fillMaxWidth()
--            )
--        }
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        // General Access
--        Text(
--            text = "General Access:",
--            fontSize = 17.sp,
--            modifier = Modifier.align(Alignment.Start)
--        )
--        var expandedCps by remember { mutableStateOf(false) }
--        Box(modifier = Modifier.fillMaxWidth()) {
--            TextField(
--                value = generalAccessCps,
--                onValueChange = {},
--                modifier = Modifier.fillMaxWidth(),
--                readOnly = true,
--                trailingIcon = {
--                    IconButton(onClick = { expandedCps = true }) {
--                        Icon(
--                            imageVector = Icons.Filled.ArrowDropUp,
--                            contentDescription = "Dropdown Icon"
--                        )
--                    }
--                }
--            )
--            DropdownMenu(
--                expanded = expandedCps,
--                onDismissRequest = { expandedCps = false }
--            ) {
--                DropdownMenuItem(onClick = {
--                    generalAccessCps = "Private"
--                    expandedCps = false
--                }) {
--                    Text("Private")
--                }
--                DropdownMenuItem(onClick = {
--                    generalAccessCps = "Public"
--                    expandedCps = false
--                }) {
--                    Text("Public")
--                }
--            }
--        }
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        // Description
--        Text(
--            text = "Description:",
--            fontSize = 17.sp,
--            modifier = Modifier.align(Alignment.Start)
--        )
--        TextField(
--            value = descriptionCps,
--            onValueChange = { descriptionCps = it },
--            label = { Text("Description") },
--            modifier = Modifier.fillMaxWidth()
--        )
--
--        Spacer(modifier = Modifier.height(16.dp))
--
--        // Invite
--        Text(
--            text = "Invite:",
--            fontSize = 17.sp,
--            modifier = Modifier.align(Alignment.Start)
--        )
--        Row(verticalAlignment = Alignment.CenterVertically) {
--            TextField(
--                value = inviteEmailCps,
--                onValueChange = { inviteEmailCps = it },
--                label = { Text("Invite") },
--                modifier = Modifier.weight(1f)
--            )
--            Spacer(modifier = Modifier.width(8.dp))
--            Button(onClick = { /* Logic to handle invite */ }) {
--                Text("Done")
--            }
--        }
--
--        Spacer(modifier = Modifier.height(24.dp))
--
--        // Create Project Button
--        Button(
--            onClick = { /* Logic to handle project creation */ },
--            modifier = Modifier.fillMaxWidth()
--        ) {
--            Text("Create Project")
--        }
--    }
--}
--
--@Preview(showBackground = true)
--@Composable
--fun PreviewCreateProjectScreenContent() {
--    CreateProjectScreenContent()
--}
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package proyecto_moviles.uvg.edu.gt.ToDoList\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.shape.CircleShape\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.automirrored.filled.List\r\nimport androidx.compose.material.icons.filled.CalendarToday\r\nimport androidx.compose.material.icons.filled.Person\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.layout.ContentScale\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport proyecto_moviles.uvg.edu.gt.R\r\n\r\nclass ToDoListScreen : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n            ToDoListScreenContent()\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun ToDoListScreenContent() {\r\n    Scaffold(\r\n        bottomBar = { BottomNavigationBar() } // Barra de navegación en la parte inferior\r\n    ) { innerPadding ->\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(innerPadding)\r\n        ) {\r\n            // Parte superior de la pantalla\r\n            Box(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .height(300.dp), // Ajusta la altura de la imagen\r\n                contentAlignment = Alignment.BottomStart\r\n            ) {\r\n                // Imagen de fondo\r\n                Image(\r\n                    painter = painterResource(id = R.drawable.ic_placeholder),\r\n                    contentDescription = \"Background\",\r\n                    modifier = Modifier.fillMaxSize(),\r\n                    contentScale = ContentScale.Crop\r\n                )\r\n\r\n                // Texto \"Calculus 2\"\r\n                Text(\r\n                    text = \"Calculus 2\",\r\n                    style = MaterialTheme.typography.headlineLarge.copy(color = MaterialTheme.colorScheme.onBackground),\r\n                    modifier = Modifier\r\n                        .align(Alignment.CenterStart)\r\n                        .padding(start = 16.dp, bottom = 20.dp) // Ajusta el padding si es necesario\r\n                )\r\n\r\n                // Botón \"Add new task\"\r\n                Button(\r\n                    onClick = { /* Acción para añadir nueva tarea */ },\r\n                    modifier = Modifier\r\n                        .padding(16.dp)\r\n                        .align(Alignment.BottomStart),\r\n                    shape = MaterialTheme.shapes.small\r\n                ) {\r\n                    Icon(\r\n                        painter = painterResource(id = R.drawable.event),\r\n                        contentDescription = \"Add Task\",\r\n                        modifier = Modifier.size(18.dp)\r\n                    )\r\n                    Spacer(modifier = Modifier.width(8.dp))\r\n                    Text(text = \"Add new task\")\r\n                }\r\n            }\r\n\r\n            // Contenido adicional: lista de tareas\r\n            Column(\r\n                modifier = Modifier.fillMaxWidth(),\r\n                horizontalAlignment = Alignment.CenterHorizontally // Centra los elementos en la columna\r\n            ) {\r\n                Text(\r\n                    text = \"Tasks\",\r\n                    style = MaterialTheme.typography.headlineMedium // Aumenta el tamaño de la fuente\r\n                )\r\n                Text(\r\n                    text = \"To do list\",\r\n                    style = MaterialTheme.typography.bodyLarge // Estilo normal para el texto secundario\r\n                )\r\n            }\r\n            Column(modifier = Modifier.padding(16.dp)) {\r\n                // Lista de tareas con divisores\r\n                TaskItem(taskTitle = \"Task 1\", isComplete = true, onClick = {})\r\n                HorizontalDivider(thickness = 1.dp, color = Color.Gray)\r\n                TaskItem(taskTitle = \"Task 2\", isComplete = true, onClick = {})\r\n                HorizontalDivider(thickness = 1.dp, color = Color.Gray)\r\n                TaskItem(taskTitle = \"Task 3\", isComplete = false, onClick = {})\r\n                Spacer(modifier = Modifier.height(16.dp))\r\n\r\n                // Botón para ver todas las tareas, centrado\r\n                Button(\r\n                    onClick = { /* Acción para ver todas las tareas */ },\r\n                    modifier = Modifier.align(Alignment.CenterHorizontally) // Centrado\r\n                ) {\r\n                    Text(text = \"View all tasks\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun TaskItem(taskTitle: String, isComplete: Boolean, onClick: () -> Unit) {\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(vertical = 8.dp),\r\n        verticalAlignment = Alignment.CenterVertically\r\n    ) {\r\n        // Imagen simple para las tareas\r\n        Image(\r\n            painter = painterResource(id = R.drawable.ic_placeholder),\r\n            contentDescription = \"Icono de tarea\",\r\n            modifier = Modifier\r\n                .size(50.dp)\r\n                .clip(CircleShape)\r\n        )\r\n\r\n        Spacer(modifier = Modifier.width(16.dp))\r\n\r\n        Column(modifier = Modifier.weight(1f)) {\r\n            Text(text = taskTitle, style = MaterialTheme.typography.bodyLarge)\r\n            Text(text = \"Description\", style = MaterialTheme.typography.bodySmall)\r\n        }\r\n\r\n        Spacer(modifier = Modifier.width(16.dp))\r\n\r\n        // Botón \"Complete\" o \"Not Complete\" sin color personalizado\r\n        Button(\r\n            onClick = onClick,\r\n            shape = RoundedCornerShape(16.dp)\r\n        ) {\r\n            Text(text = if (isComplete) \"Complete\" else \"Not Complete\") // Color predeterminado\r\n        }\r\n    }\r\n}\r\n\r\n// Composable del BottomNavigationBar\r\n@Composable\r\nfun BottomNavigationBar() {\r\n    var selectedItem by remember { mutableIntStateOf(0) }\r\n\r\n    NavigationBar {\r\n        NavigationBarItem(\r\n            icon = { Icon(Icons.AutoMirrored.Filled.List, contentDescription = \"To do list\") },\r\n            label = { Text(\"To do list\") },\r\n            selected = selectedItem == 0,\r\n            onClick = { selectedItem = 0 }\r\n        )\r\n        NavigationBarItem(\r\n            icon = { Icon(Icons.Filled.CalendarToday, contentDescription = \"Calendar\") },\r\n            label = { Text(\"Calendar\") },\r\n            selected = selectedItem == 1,\r\n            onClick = { selectedItem = 1 }\r\n        )\r\n        NavigationBarItem(\r\n            icon = { Icon(Icons.Filled.Person, contentDescription = \"Profile\") },\r\n            label = { Text(\"Profile\") },\r\n            selected = selectedItem == 2,\r\n            onClick = { selectedItem = 2 }\r\n        )\r\n    }\r\n}\r\n\r\n// Este preview permite visualizar cómo se verá la pantalla\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun PreviewToDoListScreen() {\r\n    ToDoListScreenContent()\r\n}\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt	(date 1726703938596)
-@@ -1,191 +1,2 @@
- package proyecto_moviles.uvg.edu.gt.ToDoList
- 
--import android.os.Bundle
--import androidx.activity.ComponentActivity
--import androidx.activity.compose.setContent
--import androidx.compose.foundation.Image
--import androidx.compose.foundation.layout.*
--import androidx.compose.foundation.shape.CircleShape
--import androidx.compose.foundation.shape.RoundedCornerShape
--import androidx.compose.material.icons.Icons
--import androidx.compose.material.icons.automirrored.filled.List
--import androidx.compose.material.icons.filled.CalendarToday
--import androidx.compose.material.icons.filled.Person
--import androidx.compose.material3.*
--import androidx.compose.runtime.*
--import androidx.compose.ui.Alignment
--import androidx.compose.ui.Modifier
--import androidx.compose.ui.draw.clip
--import androidx.compose.ui.graphics.Color
--import androidx.compose.ui.layout.ContentScale
--import androidx.compose.ui.res.painterResource
--import androidx.compose.ui.tooling.preview.Preview
--import androidx.compose.ui.unit.dp
--import proyecto_moviles.uvg.edu.gt.R
--
--class ToDoListScreen : ComponentActivity() {
--    override fun onCreate(savedInstanceState: Bundle?) {
--        super.onCreate(savedInstanceState)
--        setContent {
--            ToDoListScreenContent()
--        }
--    }
--}
--
--@Composable
--fun ToDoListScreenContent() {
--    Scaffold(
--        bottomBar = { BottomNavigationBar() } // Barra de navegación en la parte inferior
--    ) { innerPadding ->
--        Column(
--            modifier = Modifier
--                .fillMaxSize()
--                .padding(innerPadding)
--        ) {
--            // Parte superior de la pantalla
--            Box(
--                modifier = Modifier
--                    .fillMaxWidth()
--                    .height(300.dp), // Ajusta la altura de la imagen
--                contentAlignment = Alignment.BottomStart
--            ) {
--                // Imagen de fondo
--                Image(
--                    painter = painterResource(id = R.drawable.ic_placeholder),
--                    contentDescription = "Background",
--                    modifier = Modifier.fillMaxSize(),
--                    contentScale = ContentScale.Crop
--                )
--
--                // Texto "Calculus 2"
--                Text(
--                    text = "Calculus 2",
--                    style = MaterialTheme.typography.headlineLarge.copy(color = MaterialTheme.colorScheme.onBackground),
--                    modifier = Modifier
--                        .align(Alignment.CenterStart)
--                        .padding(start = 16.dp, bottom = 20.dp) // Ajusta el padding si es necesario
--                )
--
--                // Botón "Add new task"
--                Button(
--                    onClick = { /* Acción para añadir nueva tarea */ },
--                    modifier = Modifier
--                        .padding(16.dp)
--                        .align(Alignment.BottomStart),
--                    shape = MaterialTheme.shapes.small
--                ) {
--                    Icon(
--                        painter = painterResource(id = R.drawable.event),
--                        contentDescription = "Add Task",
--                        modifier = Modifier.size(18.dp)
--                    )
--                    Spacer(modifier = Modifier.width(8.dp))
--                    Text(text = "Add new task")
--                }
--            }
--
--            // Contenido adicional: lista de tareas
--            Column(
--                modifier = Modifier.fillMaxWidth(),
--                horizontalAlignment = Alignment.CenterHorizontally // Centra los elementos en la columna
--            ) {
--                Text(
--                    text = "Tasks",
--                    style = MaterialTheme.typography.headlineMedium // Aumenta el tamaño de la fuente
--                )
--                Text(
--                    text = "To do list",
--                    style = MaterialTheme.typography.bodyLarge // Estilo normal para el texto secundario
--                )
--            }
--            Column(modifier = Modifier.padding(16.dp)) {
--                // Lista de tareas con divisores
--                TaskItem(taskTitle = "Task 1", isComplete = true, onClick = {})
--                HorizontalDivider(thickness = 1.dp, color = Color.Gray)
--                TaskItem(taskTitle = "Task 2", isComplete = true, onClick = {})
--                HorizontalDivider(thickness = 1.dp, color = Color.Gray)
--                TaskItem(taskTitle = "Task 3", isComplete = false, onClick = {})
--                Spacer(modifier = Modifier.height(16.dp))
--
--                // Botón para ver todas las tareas, centrado
--                Button(
--                    onClick = { /* Acción para ver todas las tareas */ },
--                    modifier = Modifier.align(Alignment.CenterHorizontally) // Centrado
--                ) {
--                    Text(text = "View all tasks")
--                }
--            }
--        }
--    }
--}
--
--@Composable
--fun TaskItem(taskTitle: String, isComplete: Boolean, onClick: () -> Unit) {
--    Row(
--        modifier = Modifier
--            .fillMaxWidth()
--            .padding(vertical = 8.dp),
--        verticalAlignment = Alignment.CenterVertically
--    ) {
--        // Imagen simple para las tareas
--        Image(
--            painter = painterResource(id = R.drawable.ic_placeholder),
--            contentDescription = "Icono de tarea",
--            modifier = Modifier
--                .size(50.dp)
--                .clip(CircleShape)
--        )
--
--        Spacer(modifier = Modifier.width(16.dp))
--
--        Column(modifier = Modifier.weight(1f)) {
--            Text(text = taskTitle, style = MaterialTheme.typography.bodyLarge)
--            Text(text = "Description", style = MaterialTheme.typography.bodySmall)
--        }
--
--        Spacer(modifier = Modifier.width(16.dp))
--
--        // Botón "Complete" o "Not Complete" sin color personalizado
--        Button(
--            onClick = onClick,
--            shape = RoundedCornerShape(16.dp)
--        ) {
--            Text(text = if (isComplete) "Complete" else "Not Complete") // Color predeterminado
--        }
--    }
--}
--
--// Composable del BottomNavigationBar
--@Composable
--fun BottomNavigationBar() {
--    var selectedItem by remember { mutableIntStateOf(0) }
--
--    NavigationBar {
--        NavigationBarItem(
--            icon = { Icon(Icons.AutoMirrored.Filled.List, contentDescription = "To do list") },
--            label = { Text("To do list") },
--            selected = selectedItem == 0,
--            onClick = { selectedItem = 0 }
--        )
--        NavigationBarItem(
--            icon = { Icon(Icons.Filled.CalendarToday, contentDescription = "Calendar") },
--            label = { Text("Calendar") },
--            selected = selectedItem == 1,
--            onClick = { selectedItem = 1 }
--        )
--        NavigationBarItem(
--            icon = { Icon(Icons.Filled.Person, contentDescription = "Profile") },
--            label = { Text("Profile") },
--            selected = selectedItem == 2,
--            onClick = { selectedItem = 2 }
--        )
--    }
--}
--
--// Este preview permite visualizar cómo se verá la pantalla
--@Preview(showBackground = true)
--@Composable
--fun PreviewToDoListScreen() {
--    ToDoListScreenContent()
--}
--
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package proyecto_moviles.uvg.edu.gt.login\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.alpha\r\nimport androidx.compose.ui.layout.ContentScale\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\r\nimport androidx.compose.ui.text.input.VisualTransformation\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport proyecto_moviles.uvg.edu.gt.R\r\n\r\n@Composable\r\nfun LoginScreen() {\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .background(MaterialTheme.colorScheme.tertiary)\r\n    ) {\r\n\r\n        Image(\r\n            painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = null,\r\n            contentScale = ContentScale.Crop,\r\n            modifier = Modifier\r\n                .size(200.dp)\r\n                .offset(x = (-70).dp, y = (-120).dp)\r\n                .alpha(0.2f)\r\n        )\r\n\r\n        Image(\r\n            painter = painterResource(id = R.drawable.logo),\r\n            contentDescription = null,\r\n            contentScale = ContentScale.Crop,\r\n            modifier = Modifier\r\n                .size(200.dp)\r\n                .offset(x = (70).dp, y = (520).dp)\r\n                .alpha(0.2f)\r\n        )\r\n\r\n\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(24.dp),\r\n            horizontalAlignment = Alignment.CenterHorizontally,\r\n            verticalArrangement = Arrangement.Center\r\n        ) {\r\n\r\n\r\n            Text(\r\n                text = \"Welcome Back\",\r\n                color = MaterialTheme.colorScheme.onTertiary,\r\n                fontSize = 80.sp,\r\n                fontWeight = FontWeight.Bold,\r\n                modifier = Modifier\r\n                    .padding(bottom = 40.dp)\r\n            )\r\n\r\n\r\n            val username = remember { mutableStateOf(\"\") }\r\n            TextField(\r\n                value = username.value,\r\n                onValueChange = { username.value = it },\r\n                label = { Text(\"Username\", color = MaterialTheme.colorScheme.onSurface) },\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .padding(bottom = 16.dp),\r\n                colors = TextFieldDefaults.colors(\r\n                    focusedContainerColor = MaterialTheme.colorScheme.surface,\r\n                    unfocusedContainerColor = MaterialTheme.colorScheme.surface,\r\n                    focusedIndicatorColor = MaterialTheme.colorScheme.primary,\r\n                    unfocusedIndicatorColor = MaterialTheme.colorScheme.onSurface\r\n                )\r\n            )\r\n\r\n\r\n            val password = remember { mutableStateOf(\"\") }\r\n            val passwordVisible = remember { mutableStateOf(false) }\r\n            TextField(\r\n                value = password.value,\r\n                onValueChange = { password.value = it },\r\n                label = { Text(\"Password\", color = MaterialTheme.colorScheme.onSurface) },\r\n                visualTransformation = if (passwordVisible.value) VisualTransformation.None else PasswordVisualTransformation(),\r\n                trailingIcon = {\r\n                    IconButton(onClick = { passwordVisible.value = !passwordVisible.value }) {\r\n                        Image(\r\n                            painter = if (passwordVisible.value) painterResource(R.drawable.visibility_off_24px) else painterResource(R.drawable.visibility_24px),\r\n                            contentDescription = if (passwordVisible.value) \"Hide password\" else \"Show password\"\r\n                        )\r\n                    }\r\n                },\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .padding(bottom = 16.dp),\r\n                keyboardOptions = KeyboardOptions.Default.copy(keyboardType = KeyboardType.Password),\r\n                colors = TextFieldDefaults.colors(\r\n                    focusedContainerColor = MaterialTheme.colorScheme.surface,\r\n                    unfocusedContainerColor = MaterialTheme.colorScheme.surface,\r\n                    focusedIndicatorColor = MaterialTheme.colorScheme.primary,\r\n                    unfocusedIndicatorColor = MaterialTheme.colorScheme.onSurface\r\n                )\r\n            )\r\n\r\n\r\n            Button(\r\n                onClick = { /* Acción de Log In */ },\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .height(50.dp)\r\n                    .padding(bottom = 8.dp),\r\n                colors = ButtonDefaults.buttonColors(MaterialTheme.colorScheme.onTertiaryContainer)\r\n            ) {\r\n                Text(text = \"Log In\", color = MaterialTheme.colorScheme.tertiaryContainer)\r\n            }\r\n\r\n\r\n\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n\r\n\r\n            Column(\r\n                horizontalAlignment = Alignment.CenterHorizontally,\r\n                modifier = Modifier.fillMaxWidth()\r\n            ) {\r\n                Text(text = \"Don't have an account?\", color = MaterialTheme.colorScheme.onBackground)\r\n                Spacer(modifier = Modifier.width(4.dp))\r\n                TextButton(onClick = { /* Acción de Sign Up */ }) {\r\n                    Text(text = \"Sign Up\", color = MaterialTheme.colorScheme.onTertiaryContainer, fontWeight = FontWeight.Bold, modifier = Modifier.width(60.dp))\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun LoginScreenPreview() {\r\n    LoginScreen()\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt	(date 1729971803033)
-@@ -18,10 +18,18 @@
- import androidx.compose.ui.tooling.preview.Preview
- import androidx.compose.ui.unit.dp
- import androidx.compose.ui.unit.sp
-+import androidx.navigation.NavController
- import proyecto_moviles.uvg.edu.gt.R
- 
-+
-+
- @Composable
--fun LoginScreen() {
-+fun LoginScreen(
-+    navController: NavController,
-+    onNavigateToHome: () -> Unit,
-+    onNavigateToSignUp: () -> Unit,
-+    viewModel: AppViewModel = viewModel()
-+) {
-     Box(
-         modifier = Modifier
-             .fillMaxSize()
-@@ -114,7 +122,7 @@
- 
- 
-             Button(
--                onClick = { /* Acción de Log In */ },
-+                onClick = onNavigateToHome,
-                 modifier = Modifier
-                     .fillMaxWidth()
-                     .height(50.dp)
-@@ -135,7 +143,7 @@
-             ) {
-                 Text(text = "Don't have an account?", color = MaterialTheme.colorScheme.onBackground)
-                 Spacer(modifier = Modifier.width(4.dp))
--                TextButton(onClick = { /* Acción de Sign Up */ }) {
-+                TextButton(onClick = onNavigateToSignUp) {
-                     Text(text = "Sign Up", color = MaterialTheme.colorScheme.onTertiaryContainer, fontWeight = FontWeight.Bold, modifier = Modifier.width(60.dp))
-                 }
-             }
-@@ -146,5 +154,5 @@
- @Preview(showBackground = true)
- @Composable
- fun LoginScreenPreview() {
--    LoginScreen()
-+    LoginScreen(onNavigateToHome = {}, onNavigateToSignUp = {})
- }
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package proyecto_moviles.uvg.edu.gt.Login\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt	(date 1729921190667)
-@@ -1,2 +1,13 @@
- package proyecto_moviles.uvg.edu.gt.Login
- 
-+import androidx.navigation.NavController
-+import kotlinx.serialization.Serializable
-+
-+@Serializable
-+sealed class LoginDestination(val route: String) {
-+    data object Login : LoginDestination("login")
-+}
-+
-+fun NavController.navigateToLogin() {
-+    this.navigate(LoginDestination.Login.route)
-+}
-\ No newline at end of file
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"dfea3bbe-0df6-440d-a9eb-50966e080d13\" name=\"Changes\" comment=\"place holders\">\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/file-system.probe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/file-system.probe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules/app/Proyecto-moviles.app.iml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/build.gradle.kts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/build.gradle.kts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/gradle/libs.versions.toml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/gradle/libs.versions.toml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\\Users\\paula\\.android\\avd\\Pixel_4a_API_34.avd)]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"Kotlin File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"history\": [\r\n    {\r\n      \"state\": \"OPEN\",\r\n      \"author\": \"JavierC22153\"\r\n    },\r\n    {\r\n      \"state\": \"OPEN\"\r\n    }\r\n  ],\r\n  \"lastFilter\": {\r\n    \"state\": \"OPEN\"\r\n  }\r\n}]]></component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/cafetowake/Proyecto-moviles.git&quot;,\r\n    &quot;accountId&quot;: &quot;d387766f-c371-4d7d-9634-196def993a19&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2lz0YQZ7cDAuJCTbcLeofLB7YSG\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Compose Preview.CalendarScreenPreview (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;Compose Preview.CalendarScreenPreview.executor&quot;: &quot;Run&quot;,\r\n    &quot;Compose Preview.LoginScreenPreview.executor&quot;: &quot;Run&quot;,\r\n    &quot;Compose Preview.SignUpScreenPreview.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;full.screen.before.presentation.mode&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Dependencies&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.17&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.new.ui&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;kotlin-gradle-user-dirs&quot;: [\r\n      &quot;C:\\\\Users\\\\paula\\\\.gradle&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Compose Preview.CalendarScreenPreview\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\">\r\n      <module name=\"Proyecto-moviles.app.main\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CalendarScreenPreview (1)\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable CalanderScreenKt.CalendarScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"CalanderScreenKt.CalendarScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CalendarScreenPreview\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable proyecto_moviles.uvg.edu.gt.Calendar.CalanderScreenKt.CalendarScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"proyecto_moviles.uvg.edu.gt.Calendar.CalanderScreenKt.CalendarScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LoginScreenPreview\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable proyecto_moviles.uvg.edu.gt.login.LoginScreenKt.LoginScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"proyecto_moviles.uvg.edu.gt.login.LoginScreenKt.LoginScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SignUpScreenPreview\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable proyecto_moviles.uvg.edu.gt.Sign_up.SignUpScreenKt.SignUpScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"proyecto_moviles.uvg.edu.gt.Sign_up.SignUpScreenKt.SignUpScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Compose Preview.CalendarScreenPreview\" />\r\n        <item itemvalue=\"Compose Preview.CalendarScreenPreview (1)\" />\r\n        <item itemvalue=\"Compose Preview.LoginScreenPreview\" />\r\n        <item itemvalue=\"Compose Preview.SignUpScreenPreview\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"dfea3bbe-0df6-440d-a9eb-50966e080d13\" name=\"Changes\" comment=\"\" />\r\n      <created>1726167644429</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1726167644429</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"cambio\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727150178965</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727150178965</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"cambio\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729744867432</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729744867432</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"orden\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729835366365</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729835366365</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"place holders\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729836045671</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729836045671</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Inicio\" />\r\n    <MESSAGE value=\"cambio\" />\r\n    <MESSAGE value=\"orden\" />\r\n    <MESSAGE value=\"place holders\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"place holders\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ b/.idea/workspace.xml	(date 1729999436130)
-@@ -9,31 +9,42 @@
-     <option name="autoReloadType" value="NONE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="dfea3bbe-0df6-440d-a9eb-50966e080d13" name="Changes" comment="place holders">
-+    <list default="true" id="dfea3bbe-0df6-440d-a9eb-50966e080d13" name="Changes" comment="cambio">
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.bin" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/executionHistory/executionHistory.lock" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/modules/app/Proyecto-moviles.app.iml" beforeDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/app/build.gradle.kts" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/model/guardarpuesto.txt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/repository/guardarpuesto.txt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/source/guardarpuesto.txt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/domain/guardarpuesto.txt" beforeDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeScreen.kt" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/common/guardarpuesto.txt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt" beforeDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt" beforeDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt" beforeDir="false" />
-       <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/guardarpuesto.txt" beforeDir="false" />
-       <change beforePath="$PROJECT_DIR$/gradle/libs.versions.toml" beforeDir="false" afterPath="$PROJECT_DIR$/gradle/libs.versions.toml" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-@@ -60,21 +71,22 @@
-   </component>
-   <component name="Git.Settings">
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-+    <option name="UPDATE_TYPE" value="REBASE" />
-   </component>
--  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
--  "history": [
-+  <component name="GitHubPullRequestSearchHistory">{
-+  &quot;history&quot;: [
-     {
--      "state": "OPEN",
--      "author": "JavierC22153"
-+      &quot;state&quot;: &quot;OPEN&quot;,
-+      &quot;author&quot;: &quot;JavierC22153&quot;
-     },
-     {
--      "state": "OPEN"
-+      &quot;state&quot;: &quot;OPEN&quot;
-     }
-   ],
--  "lastFilter": {
--    "state": "OPEN"
-+  &quot;lastFilter&quot;: {
-+    &quot;state&quot;: &quot;OPEN&quot;
-   }
--}]]></component>
-+}</component>
-   <component name="GithubPullRequestsUISettings">{
-   &quot;selectedUrlAndAccountId&quot;: {
-     &quot;url&quot;: &quot;https://github.com/cafetowake/Proyecto-moviles.git&quot;,
-@@ -505,14 +517,22 @@
-       <option name="project" value="LOCAL" />
-       <updated>1729836045671</updated>
-     </task>
--    <option name="localTasksCounter" value="5" />
-+    <task id="LOCAL-00005" summary="cambio">
-+      <option name="closed" value="true" />
-+      <created>1729995854512</created>
-+      <option name="number" value="00005" />
-+      <option name="presentableId" value="LOCAL-00005" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1729995854512</updated>
-+    </task>
-+    <option name="localTasksCounter" value="6" />
-     <servers />
-   </component>
-   <component name="VcsManagerConfiguration">
-     <MESSAGE value="Inicio" />
--    <MESSAGE value="cambio" />
-     <MESSAGE value="orden" />
-     <MESSAGE value="place holders" />
--    <option name="LAST_COMMIT_MESSAGE" value="place holders" />
-+    <MESSAGE value="cambio" />
-+    <option name="LAST_COMMIT_MESSAGE" value="cambio" />
-   </component>
- </project>
-\ No newline at end of file
-Index: app/build.gradle.kts
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.jetbrains.kotlin.serialization)\r\n    id(\"kotlin-kapt\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"proyecto_moviles.uvg.edu.gt\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"proyecto_moviles.uvg.edu.gt\"\r\n        minSdk = 26\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n\r\n    kapt {\r\n        arguments {\r\n            arg(\"room.schemaLocation\", \"$projectDir/schemas\")\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.androidx.appcompat)\r\n    implementation(libs.androidx.cardview)\r\n    implementation(libs.androidx.compose.material)\r\n    implementation(libs.androidx.compose.material.icons.core)\r\n    implementation(libs.androidx.compose.material.icons.extended)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n    implementation(libs.androidx.compose.navigation)\r\n    implementation(libs.kotlinx.serialization.json)\r\n    implementation(libs.bundles.ktor)\r\n    implementation(libs.androidx.datastore.preferences)\r\n    implementation(libs.androidx.splashscreen)\r\n    implementation(libs.androidx.room.runtime)\r\n    kapt(libs.androidx.room.compiler)\r\n    implementation(libs.androidx.room.ktx)\r\n    implementation(libs.bundles.ktor)\r\n    implementation(libs.bundles.coil)\r\n}\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/build.gradle.kts b/app/build.gradle.kts
---- a/app/build.gradle.kts	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ b/app/build.gradle.kts	(date 1729988234551)
-@@ -66,11 +66,12 @@
-     implementation(libs.androidx.ui.graphics)
-     implementation(libs.androidx.ui.tooling.preview)
-     implementation(libs.androidx.material3)
--    implementation(libs.androidx.appcompat)
--    implementation(libs.androidx.cardview)
--    implementation(libs.androidx.compose.material)
--    implementation(libs.androidx.compose.material.icons.core)
-+    implementation(libs.androidx.appcompat) 
-+    implementation(libs.androidx.cardview) 
-+    implementation(libs.androidx.compose.material) 
-+    implementation(libs.androidx.compose.material.icons.core) 
-     implementation(libs.androidx.compose.material.icons.extended)
-+    implementation(libs.androidx.espresso.core)
-     testImplementation(libs.junit)
-     androidTestImplementation(libs.androidx.junit)
-     androidTestImplementation(libs.androidx.espresso.core)
-@@ -88,5 +89,7 @@
-     implementation(libs.androidx.room.ktx)
-     implementation(libs.bundles.ktor)
-     implementation(libs.bundles.coil)
-+    implementation (libs.hilt.android)
-+    kapt (libs.dagger.hilt.compiler)
- }
- 
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt
-rename from app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt
-rename to app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt	(date 1729900153804)
-@@ -1,2 +1,1 @@
- package proyecto_moviles.uvg.edu.gt.Home
--
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt
-rename from app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt
-rename to app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt	(date 1729996593346)
-@@ -16,10 +16,16 @@
- import androidx.compose.ui.tooling.preview.Preview
- import androidx.compose.ui.unit.sp
- import androidx.compose.material3.MaterialTheme
-+import androidx.navigation.NavController
- import proyecto_moviles.uvg.edu.gt.R
-+import proyecto_moviles.uvg.edu.gt.presentacion.navigation.Screen
- 
- @Composable
--fun LoginScreen() {
-+fun StartScreen(
-+    navController: NavController, 
-+    onLoginClick: () -> Unit = { navController.navigate("login") },
-+    onSignUpClick: () -> Unit = { navController.navigate("sign_up") }
-+) {
-     Column(
-         modifier = Modifier
-             .fillMaxSize()
-@@ -39,7 +45,7 @@
- 
- 
-         Button(
--            onClick = { /* Acción para Log In */ },
-+            onClick = onLoginClick,
-             colors = ButtonDefaults.buttonColors(
-                 containerColor = MaterialTheme.colorScheme.primary
-             ),
-@@ -60,7 +66,7 @@
- 
- 
-         Button(
--            onClick = { /* Acción para Sign Up */ },
-+            onClick = onSignUpClick,
-             colors = ButtonDefaults.buttonColors(
-                 containerColor = MaterialTheme.colorScheme.onPrimaryContainer
-             ),
-@@ -79,10 +85,12 @@
-     }
- }
- 
--@Preview(showBackground = true)
--@Composable
--fun LoginScreenPreview() {
--    MaterialTheme {
--        LoginScreen()
--    }
--}
-+
-+
-+//@Preview(showBackground = true)
-+//@Composable
-+//fun StartScreenPreview() {
-+//    MaterialTheme {
-+//        StartScreen(navController = NavController( ))
-+//    }
-+//}
-Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt
-rename from app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt
-rename to app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt
---- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt	(date 1729989900350)
-@@ -1,2 +1,13 @@
- package proyecto_moviles.uvg.edu.gt.Inicio
- 
-+import androidx.navigation.NavController
-+import proyecto_moviles.uvg.edu.gt.presentacion.navigation.Screen
-+
-+object StartNavigation {
-+    fun navigate(navController: NavController) {
-+        navController.navigate(Screen.Start.route) {
-+            popUpTo(navController.graph.startDestinationId)
-+            launchSingleTop = true
-+        }
-+    }
-+}
-\ No newline at end of file
-Index: gradle/libs.versions.toml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>[versions]\r\nagp = \"8.6.1\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.13.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nlifecycleRuntimeKtx = \"2.8.6\"\r\nactivityCompose = \"1.9.3\"\r\ncomposeBom = \"2024.10.00\"\r\nnavigationCompose = \"2.8.3\"\r\nkotlinSerialization = \"1.6.3\"\r\nappcompat = \"1.7.0\"\r\ncardview = \"1.0.0\"\r\ndataStore = \"1.1.1\"\r\nsplashScreen = \"1.0.1\"\r\nroom = \"2.6.1\"\r\nktor = \"2.3.12\"\r\ncoil = \"3.0.0-rc01\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\nandroidx-compose-navigation = { group = \"androidx.navigation\", name = \"navigation-compose\", version.ref =\"navigationCompose\"}\r\nkotlinx-serialization-json = { group = \"org.jetbrains.kotlinx\", name = \"kotlinx-serialization-json\", version.ref = \"kotlinSerialization\" }\r\nandroidx-datastore-preferences = { group = \"androidx.datastore\", name = \"datastore-preferences\", version.ref = \"dataStore\"}\r\nandroidx-splashscreen = { group = \"androidx.core\", name = \"core-splashscreen\", version.ref = \"splashScreen\" }\r\nandroidx-room-runtime = { group = \"androidx.room\", name = \"room-runtime\", version.ref = \"room\"}\r\nandroidx-room-compiler = { group = \"androidx.room\", name = \"room-compiler\", version.ref = \"room\"}\r\nandroidx-room-ktx = { module = \"androidx.room:room-ktx\", version.ref = \"room\" }\r\nktor-client-cio = { group = \"io.ktor\", name=\"ktor-client-cio\", version.ref = \"ktor\" }\r\nktor-client-content-negotiation = { group = \"io.ktor\", name=\"ktor-client-content-negotiation\", version.ref = \"ktor\" }\r\nktor-client-core = { group = \"io.ktor\", name=\"ktor-client-core\", version.ref = \"ktor\" }\r\nktor-client-logging = { group = \"io.ktor\", name=\"ktor-client-logging\", version.ref = \"ktor\" }\r\nktor-serialization-kotlinx-json = { group = \"io.ktor\", name=\"ktor-serialization-kotlinx-json\", version.ref = \"ktor\" }\r\ncoil-compose = { group = \"io.coil-kt.coil3\", name = \"coil-compose\", version.ref = \"coil\" }\r\ncoil-network = { group = \"io.coil-kt.coil3\", name = \"coil-network-okhttp\", version.ref = \"coil\" }\r\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nandroidx-cardview = { group = \"androidx.cardview\", name = \"cardview\", version.ref = \"cardview\" }\r\nandroidx-compose-material-icons-core = { module = \"androidx.compose.material:material-icons-core\", version = \"1.7.4\" }\r\nandroidx-compose-material-icons-extended = { module = \"androidx.compose.material:material-icons-extended\", version = \"1.7.4\" }\r\nandroidx-compose-material = { module = \"androidx.compose.material:material\", version = \"1.7.4\" }\r\n\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\njetbrains-kotlin-serialization = { id = \"org.jetbrains.kotlin.plugin.serialization\", version.ref = \"kotlin\" }\r\n\r\n[bundles]\r\nktor = [\r\n    \"ktor-client-cio\",\r\n    \"ktor-client-content-negotiation\",\r\n    \"ktor-client-core\",\r\n    \"ktor-client-logging\",\r\n    \"ktor-serialization-kotlinx-json\"\r\n]\r\ncoil = [\r\n    \"coil-compose\",\r\n    \"coil-network\"\r\n]
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
---- a/gradle/libs.versions.toml	(revision b9137acd389ed773375afe8ac3c1c7f8c3011311)
-+++ b/gradle/libs.versions.toml	(date 1729988234558)
-@@ -1,5 +1,7 @@
- [versions]
- agp = "8.6.1"
-+hiltAndroid = "2.50"
-+hiltCompiler = "2.50"
- kotlin = "1.9.0"
- coreKtx = "1.13.1"
- junit = "4.13.2"
-@@ -20,6 +22,8 @@
- 
- [libraries]
- androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
-+dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltCompiler" }
-+hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
- junit = { group = "junit", name = "junit", version.ref = "junit" }
- androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
- androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/repository/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/repository/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/common/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/common/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/model/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/model/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/source/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/source/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/domain/guardarpuesto.txt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/domain/guardarpuesto.txt
-deleted file mode 100644
-diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeScreen.kt
-rename from app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeScreen.kt
-rename to app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeScreen.kt
Index: .gradle/8.7/dependencies-accessors/469750c75d53920d28a0dcb3b26d395ef66919b7/sources/org/gradle/accessors/dm/LibrariesForLibs.java
===================================================================
diff --git a/.gradle/8.7/dependencies-accessors/469750c75d53920d28a0dcb3b26d395ef66919b7/sources/org/gradle/accessors/dm/LibrariesForLibs.java b/.gradle/8.7/dependencies-accessors/469750c75d53920d28a0dcb3b26d395ef66919b7/sources/org/gradle/accessors/dm/LibrariesForLibs.java
deleted file mode 100644
--- a/.gradle/8.7/dependencies-accessors/469750c75d53920d28a0dcb3b26d395ef66919b7/sources/org/gradle/accessors/dm/LibrariesForLibs.java	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,665 +0,0 @@
-package org.gradle.accessors.dm;
-
-import org.gradle.api.NonNullApi;
-import org.gradle.api.artifacts.MinimalExternalModuleDependency;
-import org.gradle.plugin.use.PluginDependency;
-import org.gradle.api.artifacts.ExternalModuleDependencyBundle;
-import org.gradle.api.artifacts.MutableVersionConstraint;
-import org.gradle.api.provider.Provider;
-import org.gradle.api.model.ObjectFactory;
-import org.gradle.api.provider.ProviderFactory;
-import org.gradle.api.internal.catalog.AbstractExternalDependencyFactory;
-import org.gradle.api.internal.catalog.DefaultVersionCatalog;
-import java.util.Map;
-import org.gradle.api.internal.attributes.ImmutableAttributesFactory;
-import org.gradle.api.internal.artifacts.dsl.CapabilityNotationParser;
-import javax.inject.Inject;
-
-/**
- * A catalog of dependencies accessible via the {@code libs} extension.
- */
-@NonNullApi
-public class LibrariesForLibs extends AbstractExternalDependencyFactory {
-
-    private final AbstractExternalDependencyFactory owner = this;
-    private final AndroidxLibraryAccessors laccForAndroidxLibraryAccessors = new AndroidxLibraryAccessors(owner);
-    private final KotlinxLibraryAccessors laccForKotlinxLibraryAccessors = new KotlinxLibraryAccessors(owner);
-    private final VersionAccessors vaccForVersionAccessors = new VersionAccessors(providers, config);
-    private final BundleAccessors baccForBundleAccessors = new BundleAccessors(objects, providers, config, attributesFactory, capabilityNotationParser);
-    private final PluginAccessors paccForPluginAccessors = new PluginAccessors(providers, config);
-
-    @Inject
-    public LibrariesForLibs(DefaultVersionCatalog config, ProviderFactory providers, ObjectFactory objects, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) {
-        super(config, providers, objects, attributesFactory, capabilityNotationParser);
-    }
-
-    /**
-     * Dependency provider for <b>junit</b> with <b>junit:junit</b> coordinates and
-     * with version reference <b>junit</b>
-     * <p>
-     * This dependency was declared in catalog libs.versions.toml
-     */
-    public Provider<MinimalExternalModuleDependency> getJunit() {
-        return create("junit");
-    }
-
-    /**
-     * Group of libraries at <b>androidx</b>
-     */
-    public AndroidxLibraryAccessors getAndroidx() {
-        return laccForAndroidxLibraryAccessors;
-    }
-
-    /**
-     * Group of libraries at <b>kotlinx</b>
-     */
-    public KotlinxLibraryAccessors getKotlinx() {
-        return laccForKotlinxLibraryAccessors;
-    }
-
-    /**
-     * Group of versions at <b>versions</b>
-     */
-    public VersionAccessors getVersions() {
-        return vaccForVersionAccessors;
-    }
-
-    /**
-     * Group of bundles at <b>bundles</b>
-     */
-    public BundleAccessors getBundles() {
-        return baccForBundleAccessors;
-    }
-
-    /**
-     * Group of plugins at <b>plugins</b>
-     */
-    public PluginAccessors getPlugins() {
-        return paccForPluginAccessors;
-    }
-
-    public static class AndroidxLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxActivityLibraryAccessors laccForAndroidxActivityLibraryAccessors = new AndroidxActivityLibraryAccessors(owner);
-        private final AndroidxComposeLibraryAccessors laccForAndroidxComposeLibraryAccessors = new AndroidxComposeLibraryAccessors(owner);
-        private final AndroidxCoreLibraryAccessors laccForAndroidxCoreLibraryAccessors = new AndroidxCoreLibraryAccessors(owner);
-        private final AndroidxEspressoLibraryAccessors laccForAndroidxEspressoLibraryAccessors = new AndroidxEspressoLibraryAccessors(owner);
-        private final AndroidxLifecycleLibraryAccessors laccForAndroidxLifecycleLibraryAccessors = new AndroidxLifecycleLibraryAccessors(owner);
-        private final AndroidxUiLibraryAccessors laccForAndroidxUiLibraryAccessors = new AndroidxUiLibraryAccessors(owner);
-
-        public AndroidxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>appcompat</b> with <b>androidx.appcompat:appcompat</b> coordinates and
-         * with version reference <b>appcompat</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getAppcompat() {
-            return create("androidx.appcompat");
-        }
-
-        /**
-         * Dependency provider for <b>cardview</b> with <b>androidx.cardview:cardview</b> coordinates and
-         * with version reference <b>cardview</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCardview() {
-            return create("androidx.cardview");
-        }
-
-        /**
-         * Dependency provider for <b>junit</b> with <b>androidx.test.ext:junit</b> coordinates and
-         * with version reference <b>junitVersion</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJunit() {
-            return create("androidx.junit");
-        }
-
-        /**
-         * Dependency provider for <b>material3</b> with <b>androidx.compose.material3:material3</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getMaterial3() {
-            return create("androidx.material3");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.activity</b>
-         */
-        public AndroidxActivityLibraryAccessors getActivity() {
-            return laccForAndroidxActivityLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose</b>
-         */
-        public AndroidxComposeLibraryAccessors getCompose() {
-            return laccForAndroidxComposeLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.core</b>
-         */
-        public AndroidxCoreLibraryAccessors getCore() {
-            return laccForAndroidxCoreLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.espresso</b>
-         */
-        public AndroidxEspressoLibraryAccessors getEspresso() {
-            return laccForAndroidxEspressoLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle</b>
-         */
-        public AndroidxLifecycleLibraryAccessors getLifecycle() {
-            return laccForAndroidxLifecycleLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui</b>
-         */
-        public AndroidxUiLibraryAccessors getUi() {
-            return laccForAndroidxUiLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxActivityLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxActivityLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>compose</b> with <b>androidx.activity:activity-compose</b> coordinates and
-         * with version reference <b>activityCompose</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCompose() {
-            return create("androidx.activity.compose");
-        }
-
-    }
-
-    public static class AndroidxComposeLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxComposeMaterialLibraryAccessors laccForAndroidxComposeMaterialLibraryAccessors = new AndroidxComposeMaterialLibraryAccessors(owner);
-
-        public AndroidxComposeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>bom</b> with <b>androidx.compose:compose-bom</b> coordinates and
-         * with version reference <b>composeBom</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getBom() {
-            return create("androidx.compose.bom");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material</b>
-         */
-        public AndroidxComposeMaterialLibraryAccessors getMaterial() {
-            return laccForAndroidxComposeMaterialLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxComposeMaterialLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxComposeMaterialIconsLibraryAccessors laccForAndroidxComposeMaterialIconsLibraryAccessors = new AndroidxComposeMaterialIconsLibraryAccessors(owner);
-
-        public AndroidxComposeMaterialLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>material</b> with <b>androidx.compose.material:material</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.compose.material");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.compose.material.icons</b>
-         */
-        public AndroidxComposeMaterialIconsLibraryAccessors getIcons() {
-            return laccForAndroidxComposeMaterialIconsLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxComposeMaterialIconsLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxComposeMaterialIconsLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.compose.material:material-icons-core</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            return create("androidx.compose.material.icons.core");
-        }
-
-        /**
-         * Dependency provider for <b>extended</b> with <b>androidx.compose.material:material-icons-extended</b> coordinates and
-         * with version <b>1.7.4</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getExtended() {
-            return create("androidx.compose.material.icons.extended");
-        }
-
-    }
-
-    public static class AndroidxCoreLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxCoreLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.core:core-ktx</b> coordinates and
-         * with version reference <b>coreKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            return create("androidx.core.ktx");
-        }
-
-    }
-
-    public static class AndroidxEspressoLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxEspressoLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>core</b> with <b>androidx.test.espresso:espresso-core</b> coordinates and
-         * with version reference <b>espressoCore</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getCore() {
-            return create("androidx.espresso.core");
-        }
-
-    }
-
-    public static class AndroidxLifecycleLibraryAccessors extends SubDependencyFactory {
-        private final AndroidxLifecycleRuntimeLibraryAccessors laccForAndroidxLifecycleRuntimeLibraryAccessors = new AndroidxLifecycleRuntimeLibraryAccessors(owner);
-
-        public AndroidxLifecycleLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>androidx.lifecycle.runtime</b>
-         */
-        public AndroidxLifecycleRuntimeLibraryAccessors getRuntime() {
-            return laccForAndroidxLifecycleRuntimeLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxLifecycleRuntimeLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxLifecycleRuntimeLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ktx</b> with <b>androidx.lifecycle:lifecycle-runtime-ktx</b> coordinates and
-         * with version reference <b>lifecycleRuntimeKtx</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getKtx() {
-            return create("androidx.lifecycle.runtime.ktx");
-        }
-
-    }
-
-    public static class AndroidxUiLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-        private final AndroidxUiTestLibraryAccessors laccForAndroidxUiTestLibraryAccessors = new AndroidxUiTestLibraryAccessors(owner);
-        private final AndroidxUiToolingLibraryAccessors laccForAndroidxUiToolingLibraryAccessors = new AndroidxUiToolingLibraryAccessors(owner);
-
-        public AndroidxUiLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>ui</b> with <b>androidx.compose.ui:ui</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.ui");
-        }
-
-        /**
-         * Dependency provider for <b>graphics</b> with <b>androidx.compose.ui:ui-graphics</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getGraphics() {
-            return create("androidx.ui.graphics");
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.test</b>
-         */
-        public AndroidxUiTestLibraryAccessors getTest() {
-            return laccForAndroidxUiTestLibraryAccessors;
-        }
-
-        /**
-         * Group of libraries at <b>androidx.ui.tooling</b>
-         */
-        public AndroidxUiToolingLibraryAccessors getTooling() {
-            return laccForAndroidxUiToolingLibraryAccessors;
-        }
-
-    }
-
-    public static class AndroidxUiTestLibraryAccessors extends SubDependencyFactory {
-
-        public AndroidxUiTestLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>junit4</b> with <b>androidx.compose.ui:ui-test-junit4</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJunit4() {
-            return create("androidx.ui.test.junit4");
-        }
-
-        /**
-         * Dependency provider for <b>manifest</b> with <b>androidx.compose.ui:ui-test-manifest</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getManifest() {
-            return create("androidx.ui.test.manifest");
-        }
-
-    }
-
-    public static class AndroidxUiToolingLibraryAccessors extends SubDependencyFactory implements DependencyNotationSupplier {
-
-        public AndroidxUiToolingLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>tooling</b> with <b>androidx.compose.ui:ui-tooling</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> asProvider() {
-            return create("androidx.ui.tooling");
-        }
-
-        /**
-         * Dependency provider for <b>preview</b> with <b>androidx.compose.ui:ui-tooling-preview</b> coordinates and
-         * with <b>no version specified</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getPreview() {
-            return create("androidx.ui.tooling.preview");
-        }
-
-    }
-
-    public static class KotlinxLibraryAccessors extends SubDependencyFactory {
-        private final KotlinxSerializationLibraryAccessors laccForKotlinxSerializationLibraryAccessors = new KotlinxSerializationLibraryAccessors(owner);
-
-        public KotlinxLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Group of libraries at <b>kotlinx.serialization</b>
-         */
-        public KotlinxSerializationLibraryAccessors getSerialization() {
-            return laccForKotlinxSerializationLibraryAccessors;
-        }
-
-    }
-
-    public static class KotlinxSerializationLibraryAccessors extends SubDependencyFactory {
-
-        public KotlinxSerializationLibraryAccessors(AbstractExternalDependencyFactory owner) { super(owner); }
-
-        /**
-         * Dependency provider for <b>json</b> with <b>org.jetbrains.kotlinx:kotlinx-serialization-json</b> coordinates and
-         * with version <b>1.7.2</b>
-         * <p>
-         * This dependency was declared in catalog libs.versions.toml
-         */
-        public Provider<MinimalExternalModuleDependency> getJson() {
-            return create("kotlinx.serialization.json");
-        }
-
-    }
-
-    public static class VersionAccessors extends VersionFactory  {
-
-        public VersionAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Version alias <b>activityCompose</b> with value <b>1.9.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getActivityCompose() { return getVersion("activityCompose"); }
-
-        /**
-         * Version alias <b>agp</b> with value <b>8.5.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAgp() { return getVersion("agp"); }
-
-        /**
-         * Version alias <b>appcompat</b> with value <b>1.7.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getAppcompat() { return getVersion("appcompat"); }
-
-        /**
-         * Version alias <b>cardview</b> with value <b>1.0.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCardview() { return getVersion("cardview"); }
-
-        /**
-         * Version alias <b>composeBom</b> with value <b>2024.10.00</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getComposeBom() { return getVersion("composeBom"); }
-
-        /**
-         * Version alias <b>coreKtx</b> with value <b>1.13.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getCoreKtx() { return getVersion("coreKtx"); }
-
-        /**
-         * Version alias <b>espressoCore</b> with value <b>3.6.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getEspressoCore() { return getVersion("espressoCore"); }
-
-        /**
-         * Version alias <b>junit</b> with value <b>4.13.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunit() { return getVersion("junit"); }
-
-        /**
-         * Version alias <b>junitVersion</b> with value <b>1.2.1</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getJunitVersion() { return getVersion("junitVersion"); }
-
-        /**
-         * Version alias <b>kotlin</b> with value <b>1.9.0</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlin() { return getVersion("kotlin"); }
-
-        /**
-         * Version alias <b>kotlinSerialization</b> with value <b>1.7.2</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getKotlinSerialization() { return getVersion("kotlinSerialization"); }
-
-        /**
-         * Version alias <b>lifecycleRuntimeKtx</b> with value <b>2.8.6</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getLifecycleRuntimeKtx() { return getVersion("lifecycleRuntimeKtx"); }
-
-        /**
-         * Version alias <b>navigationCompose</b> with value <b>2.8.3</b>
-         * <p>
-         * If the version is a rich version and cannot be represented as a
-         * single version string, an empty string is returned.
-         * <p>
-         * This version was declared in catalog libs.versions.toml
-         */
-        public Provider<String> getNavigationCompose() { return getVersion("navigationCompose"); }
-
-    }
-
-    public static class BundleAccessors extends BundleFactory {
-
-        public BundleAccessors(ObjectFactory objects, ProviderFactory providers, DefaultVersionCatalog config, ImmutableAttributesFactory attributesFactory, CapabilityNotationParser capabilityNotationParser) { super(objects, providers, config, attributesFactory, capabilityNotationParser); }
-
-    }
-
-    public static class PluginAccessors extends PluginFactory {
-        private final AndroidPluginAccessors paccForAndroidPluginAccessors = new AndroidPluginAccessors(providers, config);
-        private final JetbrainsPluginAccessors paccForJetbrainsPluginAccessors = new JetbrainsPluginAccessors(providers, config);
-
-        public PluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.android</b>
-         */
-        public AndroidPluginAccessors getAndroid() {
-            return paccForAndroidPluginAccessors;
-        }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains</b>
-         */
-        public JetbrainsPluginAccessors getJetbrains() {
-            return paccForJetbrainsPluginAccessors;
-        }
-
-    }
-
-    public static class AndroidPluginAccessors extends PluginFactory {
-
-        public AndroidPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>android.application</b> with plugin id <b>com.android.application</b> and
-         * with version reference <b>agp</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getApplication() { return createPlugin("android.application"); }
-
-    }
-
-    public static class JetbrainsPluginAccessors extends PluginFactory {
-        private final JetbrainsKotlinPluginAccessors paccForJetbrainsKotlinPluginAccessors = new JetbrainsKotlinPluginAccessors(providers, config);
-
-        public JetbrainsPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Group of plugins at <b>plugins.jetbrains.kotlin</b>
-         */
-        public JetbrainsKotlinPluginAccessors getKotlin() {
-            return paccForJetbrainsKotlinPluginAccessors;
-        }
-
-    }
-
-    public static class JetbrainsKotlinPluginAccessors extends PluginFactory {
-
-        public JetbrainsKotlinPluginAccessors(ProviderFactory providers, DefaultVersionCatalog config) { super(providers, config); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.android</b> with plugin id <b>org.jetbrains.kotlin.android</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getAndroid() { return createPlugin("jetbrains.kotlin.android"); }
-
-        /**
-         * Plugin provider for <b>jetbrains.kotlin.serialization</b> with plugin id <b>org.jetbrains.kotlin.plugin.serialization</b> and
-         * with version reference <b>kotlin</b>
-         * <p>
-         * This plugin was declared in catalog libs.versions.toml
-         */
-        public Provider<PluginDependency> getSerialization() { return createPlugin("jetbrains.kotlin.serialization"); }
-
-    }
-
-}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM__Changes_.xml	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ /dev/null	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
@@ -1,44 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]" date="1730087236546" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 27-Oct-24 9:47 PM [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/buildOutputCleanup/buildOutputCleanup.lock" />
-    <option name="AFTER_PATH" value=".gradle/buildOutputCleanup/buildOutputCleanup.lock" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/buildOutputCleanup.lock" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/checksums/sha1-checksums.bin" />
-    <option name="AFTER_PATH" value=".gradle/8.7/checksums/sha1-checksums.bin" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/sha1-checksums.bin" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/fileHashes/resourceHashesCache.bin" />
-    <option name="AFTER_PATH" value=".gradle/8.7/fileHashes/resourceHashesCache.bin" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/resourceHashesCache.bin" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/checksums/checksums.lock" />
-    <option name="AFTER_PATH" value=".gradle/8.7/checksums/checksums.lock" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/checksums.lock" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/checksums/md5-checksums.bin" />
-    <option name="AFTER_PATH" value=".gradle/8.7/checksums/md5-checksums.bin" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/md5-checksums.bin" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/fileHashes/fileHashes.bin" />
-    <option name="AFTER_PATH" value=".gradle/8.7/fileHashes/fileHashes.bin" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/fileHashes.bin" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/8.7/fileHashes/fileHashes.lock" />
-    <option name="AFTER_PATH" value=".gradle/8.7/fileHashes/fileHashes.lock" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/fileHashes.lock" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".gradle/file-system.probe" />
-    <option name="AFTER_PATH" value=".gradle/file-system.probe" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/file-system.probe" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto_moviles.uvg.edu.gt\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport proyecto_moviles.uvg.edu.gt.ui.theme.ProyectomovilesTheme\r\nimport androidx.compose.material3.MaterialTheme\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()  // Mantener la funcionalidad de edge-to-edge\r\n\r\n        setContent {\r\n            ProyectomovilesTheme {  // Se mantiene el uso del tema personalizado\r\n                // Scaffold para la estructura de la UI\r\n                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->\r\n                    // Llamadas a las diferentes pantallas\r\n                    Greeting(\r\n                        name = \"Android\",\r\n                        modifier = Modifier.padding(innerPadding)\r\n                    )\r\n                    // Invocamos las otras funciones\r\n                    HomeScreen()\r\n                    ProfileScreen() \r\n                    NewTaskScreen()\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun Greeting(name: String, modifier: Modifier = Modifier) {\r\n    Text(\r\n        text = \"Hello $name!\",\r\n        modifier = modifier\r\n    )\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun GreetingPreview() {\r\n    ProyectomovilesTheme {\r\n        Greeting(\"Android\")\r\n    }\r\n}\r\n\r\n\r\n@Composable\r\nfun HomeScreen() {\r\n    // Implementación de la pantalla HomeScreen\r\n}\r\n\r\n@Composable\r\nfun ProfileScreen() {\r\n    // Implementación de la pantalla ProfileScreen\r\n}\r\n\r\n@Composable\r\nfun NewTaskScreen() {\r\n    // Implementación de la pantalla NewTaskScreen\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/MainActivity.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/MainActivity.kt
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/MainActivity.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/MainActivity.kt	(date 1731884147763)
@@ -38,34 +38,4 @@
     }
 }
 
-@Composable
-fun Greeting(name: String, modifier: Modifier = Modifier) {
-    Text(
-        text = "Hello $name!",
-        modifier = modifier
-    )
-}
-
-@Preview(showBackground = true)
-@Composable
-fun GreetingPreview() {
-    ProyectomovilesTheme {
-        Greeting("Android")
-    }
-}
-
-
-@Composable
-fun HomeScreen() {
-    // Implementación de la pantalla HomeScreen
-}
 
-@Composable
-fun ProfileScreen() {
-    // Implementación de la pantalla ProfileScreen
-}
-
-@Composable
-fun NewTaskScreen() {
-    // Implementación de la pantalla NewTaskScreen
-}
Index: .idea/caches/deviceStreaming.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DeviceStreaming\">\r\n    <option name=\"deviceSelectionList\">\r\n      <list>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"27\" />\r\n          <option name=\"brand\" value=\"DOCOMO\" />\r\n          <option name=\"codename\" value=\"F01L\" />\r\n          <option name=\"id\" value=\"F01L\" />\r\n          <option name=\"manufacturer\" value=\"FUJITSU\" />\r\n          <option name=\"name\" value=\"F-01L\" />\r\n          <option name=\"screenDensity\" value=\"360\" />\r\n          <option name=\"screenX\" value=\"720\" />\r\n          <option name=\"screenY\" value=\"1280\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"28\" />\r\n          <option name=\"brand\" value=\"DOCOMO\" />\r\n          <option name=\"codename\" value=\"SH-01L\" />\r\n          <option name=\"id\" value=\"SH-01L\" />\r\n          <option name=\"manufacturer\" value=\"SHARP\" />\r\n          <option name=\"name\" value=\"AQUOS sense2 SH-01L\" />\r\n          <option name=\"screenDensity\" value=\"480\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2160\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"Lenovo\" />\r\n          <option name=\"codename\" value=\"TB370FU\" />\r\n          <option name=\"id\" value=\"TB370FU\" />\r\n          <option name=\"manufacturer\" value=\"Lenovo\" />\r\n          <option name=\"name\" value=\"Tab P12\" />\r\n          <option name=\"screenDensity\" value=\"340\" />\r\n          <option name=\"screenX\" value=\"1840\" />\r\n          <option name=\"screenY\" value=\"2944\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"31\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"a51\" />\r\n          <option name=\"id\" value=\"a51\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy A51\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"akita\" />\r\n          <option name=\"id\" value=\"akita\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 8a\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"b0q\" />\r\n          <option name=\"id\" value=\"b0q\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy S22 Ultra\" />\r\n          <option name=\"screenDensity\" value=\"600\" />\r\n          <option name=\"screenX\" value=\"1440\" />\r\n          <option name=\"screenY\" value=\"3088\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"32\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"bluejay\" />\r\n          <option name=\"id\" value=\"bluejay\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 6a\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"caiman\" />\r\n          <option name=\"id\" value=\"caiman\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 9 Pro\" />\r\n          <option name=\"screenDensity\" value=\"360\" />\r\n          <option name=\"screenX\" value=\"960\" />\r\n          <option name=\"screenY\" value=\"2142\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"comet\" />\r\n          <option name=\"id\" value=\"comet\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 9 Pro Fold\" />\r\n          <option name=\"screenDensity\" value=\"390\" />\r\n          <option name=\"screenX\" value=\"2076\" />\r\n          <option name=\"screenY\" value=\"2152\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"29\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"crownqlteue\" />\r\n          <option name=\"id\" value=\"crownqlteue\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy Note9\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"2220\" />\r\n          <option name=\"screenY\" value=\"1080\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"dm3q\" />\r\n          <option name=\"id\" value=\"dm3q\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy S23 Ultra\" />\r\n          <option name=\"screenDensity\" value=\"600\" />\r\n          <option name=\"screenX\" value=\"1440\" />\r\n          <option name=\"screenY\" value=\"3088\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"e1q\" />\r\n          <option name=\"id\" value=\"e1q\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy S24\" />\r\n          <option name=\"screenDensity\" value=\"480\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2340\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"felix\" />\r\n          <option name=\"id\" value=\"felix\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel Fold\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"2208\" />\r\n          <option name=\"screenY\" value=\"1840\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"felix\" />\r\n          <option name=\"id\" value=\"felix\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel Fold\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"2208\" />\r\n          <option name=\"screenY\" value=\"1840\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"felix_camera\" />\r\n          <option name=\"id\" value=\"felix_camera\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel Fold (Camera-enabled)\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"2208\" />\r\n          <option name=\"screenY\" value=\"1840\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"gts8uwifi\" />\r\n          <option name=\"id\" value=\"gts8uwifi\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy Tab S8 Ultra\" />\r\n          <option name=\"screenDensity\" value=\"320\" />\r\n          <option name=\"screenX\" value=\"1848\" />\r\n          <option name=\"screenY\" value=\"2960\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"husky\" />\r\n          <option name=\"id\" value=\"husky\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 8 Pro\" />\r\n          <option name=\"screenDensity\" value=\"390\" />\r\n          <option name=\"screenX\" value=\"1008\" />\r\n          <option name=\"screenY\" value=\"2244\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"30\" />\r\n          <option name=\"brand\" value=\"motorola\" />\r\n          <option name=\"codename\" value=\"java\" />\r\n          <option name=\"id\" value=\"java\" />\r\n          <option name=\"manufacturer\" value=\"Motorola\" />\r\n          <option name=\"name\" value=\"G20\" />\r\n          <option name=\"screenDensity\" value=\"280\" />\r\n          <option name=\"screenX\" value=\"720\" />\r\n          <option name=\"screenY\" value=\"1600\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"komodo\" />\r\n          <option name=\"id\" value=\"komodo\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 9 Pro XL\" />\r\n          <option name=\"screenDensity\" value=\"360\" />\r\n          <option name=\"screenX\" value=\"1008\" />\r\n          <option name=\"screenY\" value=\"2244\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"lynx\" />\r\n          <option name=\"id\" value=\"lynx\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 7a\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"31\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"oriole\" />\r\n          <option name=\"id\" value=\"oriole\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 6\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"panther\" />\r\n          <option name=\"id\" value=\"panther\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 7\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"q5q\" />\r\n          <option name=\"id\" value=\"q5q\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"Galaxy Z Fold5\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1812\" />\r\n          <option name=\"screenY\" value=\"2176\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"samsung\" />\r\n          <option name=\"codename\" value=\"q6q\" />\r\n          <option name=\"id\" value=\"q6q\" />\r\n          <option name=\"manufacturer\" value=\"Samsung\" />\r\n          <option name=\"name\" value=\"SM-F956B\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1856\" />\r\n          <option name=\"screenY\" value=\"2160\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"30\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"r11\" />\r\n          <option name=\"id\" value=\"r11\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel Watch\" />\r\n          <option name=\"screenDensity\" value=\"320\" />\r\n          <option name=\"screenX\" value=\"384\" />\r\n          <option name=\"screenY\" value=\"384\" />\r\n          <option name=\"type\" value=\"WEAR_OS\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"30\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"redfin\" />\r\n          <option name=\"id\" value=\"redfin\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 5\" />\r\n          <option name=\"screenDensity\" value=\"440\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2340\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"shiba\" />\r\n          <option name=\"id\" value=\"shiba\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 8\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2400\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"33\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"tangorpro\" />\r\n          <option name=\"id\" value=\"tangorpro\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel Tablet\" />\r\n          <option name=\"screenDensity\" value=\"320\" />\r\n          <option name=\"screenX\" value=\"1600\" />\r\n          <option name=\"screenY\" value=\"2560\" />\r\n        </PersistentDeviceSelectionData>\r\n        <PersistentDeviceSelectionData>\r\n          <option name=\"api\" value=\"34\" />\r\n          <option name=\"brand\" value=\"google\" />\r\n          <option name=\"codename\" value=\"tokay\" />\r\n          <option name=\"id\" value=\"tokay\" />\r\n          <option name=\"manufacturer\" value=\"Google\" />\r\n          <option name=\"name\" value=\"Pixel 9\" />\r\n          <option name=\"screenDensity\" value=\"420\" />\r\n          <option name=\"screenX\" value=\"1080\" />\r\n          <option name=\"screenY\" value=\"2424\" />\r\n        </PersistentDeviceSelectionData>\r\n      </list>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/caches/deviceStreaming.xml b/.idea/caches/deviceStreaming.xml
--- a/.idea/caches/deviceStreaming.xml	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/.idea/caches/deviceStreaming.xml	(date 1731654090212)
@@ -262,7 +262,7 @@
           <option name="codename" value="q6q" />
           <option name="id" value="q6q" />
           <option name="manufacturer" value="Samsung" />
-          <option name="name" value="SM-F956B" />
+          <option name="name" value="Galaxy Z Fold6" />
           <option name="screenDensity" value="420" />
           <option name="screenX" value="1856" />
           <option name="screenY" value="2160" />
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"dfea3bbe-0df6-440d-a9eb-50966e080d13\" name=\"Changes\" comment=\"cambio\">\r\n      <change afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/file-system.probe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/file-system.probe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules/app/Proyecto-moviles.app.iml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/build.gradle.kts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/build.gradle.kts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/model/guardarpuesto.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/repository/guardarpuesto.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/source/guardarpuesto.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/domain/guardarpuesto.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/common/guardarpuesto.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListNavigation.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListNavigation.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/NavigationGraph.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/NavigationGraph.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/guardarpuesto.txt\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/gradle/libs.versions.toml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/gradle/libs.versions.toml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\\Users\\paula\\.android\\avd\\Pixel_4a_API_34.avd)]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"Kotlin File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;history&quot;: [\r\n    {\r\n      &quot;state&quot;: &quot;OPEN&quot;,\r\n      &quot;author&quot;: &quot;JavierC22153&quot;\r\n    },\r\n    {\r\n      &quot;state&quot;: &quot;OPEN&quot;\r\n    }\r\n  ],\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/cafetowake/Proyecto-moviles.git&quot;,\r\n    &quot;accountId&quot;: &quot;d387766f-c371-4d7d-9634-196def993a19&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2lz0YQZ7cDAuJCTbcLeofLB7YSG\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Compose Preview.CalendarScreenPreview (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;Compose Preview.CalendarScreenPreview.executor&quot;: &quot;Run&quot;,\r\n    &quot;Compose Preview.LoginScreenPreview.executor&quot;: &quot;Run&quot;,\r\n    &quot;Compose Preview.SignUpScreenPreview.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;full.screen.before.presentation.mode&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Dependencies&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.17&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.new.ui&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;kotlin-gradle-user-dirs&quot;: [\r\n      &quot;C:\\\\Users\\\\paula\\\\.gradle&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Compose Preview.CalendarScreenPreview\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\">\r\n      <module name=\"Proyecto-moviles.app.main\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CalendarScreenPreview (1)\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable CalanderScreenKt.CalendarScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"CalanderScreenKt.CalendarScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CalendarScreenPreview\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable proyecto_moviles.uvg.edu.gt.Calendar.CalanderScreenKt.CalendarScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"proyecto_moviles.uvg.edu.gt.Calendar.CalanderScreenKt.CalendarScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LoginScreenPreview\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable proyecto_moviles.uvg.edu.gt.login.LoginScreenKt.LoginScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"proyecto_moviles.uvg.edu.gt.login.LoginScreenKt.LoginScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SignUpScreenPreview\" type=\"ComposePreviewRunConfiguration\" temporary=\"true\">\r\n      <module name=\"Proyecto-moviles.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"--es composable proyecto_moviles.uvg.edu.gt.Sign_up.SignUpScreenKt.SignUpScreenPreview\" />\r\n      <option name=\"MODE\" value=\"specific_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"SHOW_DIALOG\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"androidx.compose.ui.tooling.PreviewActivity\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"true\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <compose-preview-run-configuration composable-fqn=\"proyecto_moviles.uvg.edu.gt.Sign_up.SignUpScreenKt.SignUpScreenPreview\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Compose Preview.CalendarScreenPreview\" />\r\n        <item itemvalue=\"Compose Preview.CalendarScreenPreview (1)\" />\r\n        <item itemvalue=\"Compose Preview.LoginScreenPreview\" />\r\n        <item itemvalue=\"Compose Preview.SignUpScreenPreview\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"dfea3bbe-0df6-440d-a9eb-50966e080d13\" name=\"Changes\" comment=\"\" />\r\n      <created>1726167644429</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1726167644429</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"cambio\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727150178965</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727150178965</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"cambio\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729744867432</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729744867432</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"orden\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729835366365</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729835366365</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"place holders\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729836045671</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729836045671</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"cambio\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729995854512</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729995854512</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Inicio\" />\r\n    <MESSAGE value=\"orden\" />\r\n    <MESSAGE value=\"place holders\" />\r\n    <MESSAGE value=\"cambio\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"cambio\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/.idea/workspace.xml	(date 1731893736032)
@@ -10,44 +10,63 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="dfea3bbe-0df6-440d-a9eb-50966e080d13" name="Changes" comment="cambio">
-      <change afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioNavigation.kt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/checksums/checksums.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/checksums/md5-checksums.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/checksums/sha1-checksums.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/05244df278ca778d14a8422e0bb13eb9a65f419e/metadata.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/05244df278ca778d14a8422e0bb13eb9a65f419e/sources/org/gradle/accessors/dm/LibrariesForLibs.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/05244df278ca778d14a8422e0bb13eb9a65f419e/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/18401a5638da8f505cc671a011d7cb4f4f5c7f09/metadata.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/18401a5638da8f505cc671a011d7cb4f4f5c7f09/sources/org/gradle/accessors/dm/LibrariesForLibs.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/18401a5638da8f505cc671a011d7cb4f4f5c7f09/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/2ee6179fd4917f3f40d4123d36095ab2555a98d6/metadata.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/2ee6179fd4917f3f40d4123d36095ab2555a98d6/sources/org/gradle/accessors/dm/LibrariesForLibs.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/2ee6179fd4917f3f40d4123d36095ab2555a98d6/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/469750c75d53920d28a0dcb3b26d395ef66919b7/metadata.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/469750c75d53920d28a0dcb3b26d395ef66919b7/sources/org/gradle/accessors/dm/LibrariesForLibs.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.7/dependencies-accessors/469750c75d53920d28a0dcb3b26d395ef66919b7/sources/org/gradle/accessors/dm/LibrariesForLibsInPluginsBlock.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/fileHashes/fileHashes.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.7/fileHashes/resourceHashesCache.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules/app/Proyecto-moviles.app.iml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/caches/deviceStreaming.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/caches/deviceStreaming.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/buildOutputCleanup.lock" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/checksums.lock" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/file-system.probe" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/fileHashes.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/fileHashes.lock" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/md5-checksums.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/resourceHashesCache.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/sha1-checksums.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26-Oct-24_9_24_PM__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/buildOutputCleanup.lock" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/checksums.lock" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/file-system.probe" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/fileHashes.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/fileHashes.lock" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/md5-checksums.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/resourceHashesCache.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/sha1-checksums.bin" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_27-Oct-24_9_47_PM__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/app/build.gradle.kts" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/api/HttpClientFactory.kt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/model/guardarpuesto.txt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/repository/guardarpuesto.txt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/source/guardarpuesto.txt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/domain/guardarpuesto.txt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeNavigation.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Home/HomeScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Home/HomeScreen.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/common/guardarpuesto.txt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginNavigation.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginScreen.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpNavigation.kt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Sing_up/SignUpScreen.kt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderNavigation.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/MainActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/MainActivity.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/AppDependecies.kt" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/KtorUserApi.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/KtorUserApi.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/AppDatabase.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/AppDatabase.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/UserEntity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/local/entity/UserEntity.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/model/Event.kt" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/api/UserApi.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/api/UserApi.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/dto/UserDto.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/dto/UserDto.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/util/AuthService.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/util/AuthService.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioState.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioState.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginState.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginState.kt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectNavigation.kt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Create_Proyecto/CreateProyectScreen.kt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioNavigation.kt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Inicio/InicioScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/Inicio/InicioScreen.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskNavigation.kt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/New_Task/NewTaskScreen.kt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsNavigation.kt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Projects/ProyectsScreen.kt" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListNavigation.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListNavigation.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/ToDoList/ToDoListScreen.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/NavigationGraph.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/NavigationGraph.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/navigation/guardarpuesto.txt" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderState.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderState.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle.kts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/gradle/libs.versions.toml" beforeDir="false" afterPath="$PROJECT_DIR$/gradle/libs.versions.toml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -527,7 +546,15 @@
       <option name="project" value="LOCAL" />
       <updated>1729995854512</updated>
     </task>
-    <option name="localTasksCounter" value="6" />
+    <task id="LOCAL-00006" summary="cambio">
+      <option name="closed" value="true" />
+      <created>1730106342037</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1730106342037</updated>
+    </task>
+    <option name="localTasksCounter" value="7" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/KtorUserApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto_moviles.uvg.edu.gt.data.di\r\n\r\nimport io.ktor.client.HttpClient\r\nimport io.ktor.client.request.get\r\nimport proyecto_moviles.uvg.edu.gt.data.network.api.UserApi\r\nimport proyecto_moviles.uvg.edu.gt.data.network.dto.UserDto\r\nimport proyecto_moviles.uvg.edu.gt.data.network.util.NetworkError\r\nimport proyecto_moviles.uvg.edu.gt.data.network.util.safeCall\r\n\r\nclass KtorUserApi(\r\n    private val client: HttpClient\r\n): UserApi{\r\n    override suspend fun getAllUsers(): Result<UserDto, NetworkError> {\r\n        return safeCall<UserDto>{\r\n            client.get(\"https://jsonplaceholder.typicode.com/users\")\r\n        }\r\n    }\r\n\r\n    override suspend fun getUserById(id: Int): Result<UserDto, NetworkError> {\r\n        return safeCall<UserDto>{\r\n            client.get(\"https://jsonplaceholder.typicode.com/users\")\r\n        }\r\n    }\r\n\r\n    override suspend fun createUser(user: UserDto): Result<UserDto, NetworkError> {\r\n        return safeCall<UserDto>{\r\n            client.get(\"https://jsonplaceholder.typicode.com/users\")\r\n        }\r\n    }\r\n\r\n\r\n    override suspend fun updateUser(id: Int, user: UserDto): Result<UserDto, NetworkError> {\r\n        return safeCall<UserDto>{\r\n            client.get(\"https://jsonplaceholder.typicode.com/users\")\r\n        }\r\n    }\r\n\r\n    override suspend fun deleteUser(id: Int): Result<UserDto, NetworkError> {\r\n        return safeCall<UserDto>{\r\n            client.get(\"https://jsonplaceholder.typicode.com/users\")\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/KtorUserApi.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/KtorUserApi.kt
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/KtorUserApi.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/di/KtorUserApi.kt	(date 1731515086130)
@@ -6,6 +6,7 @@
 import proyecto_moviles.uvg.edu.gt.data.network.dto.UserDto
 import proyecto_moviles.uvg.edu.gt.data.network.util.NetworkError
 import proyecto_moviles.uvg.edu.gt.data.network.util.safeCall
+import proyecto_moviles.uvg.edu.gt.data.network.util.Result
 
 class KtorUserApi(
     private val client: HttpClient
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/util/AuthService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto_moviles.uvg.edu.gt.data.network.util\r\n\r\nimport io.ktor.client.*\r\nimport proyecto_moviles.uvg.edu.gt.domain.repository.AuthServiceImpl\r\n\r\n\r\ninterface AuthService {\r\n    suspend fun login(username: String, password: String): Result<Boolean>\r\n    suspend fun signUp(username: String, email: String, password: String): Result<Boolean>\r\n\r\n    companion object {\r\n        fun create(): AuthService {\r\n            return AuthServiceImpl(\r\n                client = HttpClient(Android) {\r\n                    install(JsonFeature) {\r\n                        serializer = KotlinxSerializer()\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/util/AuthService.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/util/AuthService.kt
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/util/AuthService.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/util/AuthService.kt	(date 1731462864741)
@@ -1,7 +1,10 @@
 package proyecto_moviles.uvg.edu.gt.data.network.util
 
-import io.ktor.client.*
+
+import io.ktor.client.HttpClient
+import org.jetbrains.skiko.OS
 import proyecto_moviles.uvg.edu.gt.domain.repository.AuthServiceImpl
+import proyecto_moviles.uvg.edu.gt.data.network.util.Result
 
 
 interface AuthService {
@@ -11,7 +14,7 @@
     companion object {
         fun create(): AuthService {
             return AuthServiceImpl(
-                client = HttpClient(Android) {
+                client = HttpClient(OS.Android) {
                     install(JsonFeature) {
                         serializer = KotlinxSerializer()
                     }
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto_moviles.uvg.edu.gt.presentacion.login.Login\r\n\r\nimport proyecto_moviles.uvg.edu.gt.data.model.User\r\n\r\ndata class LoginState(\r\n    val data: List<User> = emptyList(),\r\n    val username: User,\r\n    val email: String = \"\",\r\n    val password: String = \"\",\r\n    val isLoading: Boolean = false,\r\n    val error: String? = null,\r\n    val loginSuccessful: Boolean = false\r\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginState.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginState.kt
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginState.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/login/Login/LoginState.kt	(date 1731836116401)
@@ -3,11 +3,14 @@
 import proyecto_moviles.uvg.edu.gt.data.model.User
 
 data class LoginState(
-    val data: List<User> = emptyList(),
-    val username: User,
+    val id: Int,
+    val name: String,
     val email: String = "",
     val password: String = "",
     val isLoading: Boolean = false,
-    val error: String? = null,
-    val loginSuccessful: Boolean = false
+    val isError: Boolean = false,
+    val loginSuccessful: Boolean = false,
+    val successMessage: String? = null,
+    val errorMessage: String? = null
+
 )
\ No newline at end of file
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/dto/UserDto.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto_moviles.uvg.edu.gt.data.network.dto\r\n\r\nimport kotlinx.serialization.Serializable\r\nimport proyecto_moviles.uvg.edu.gt.data.model.User\r\n\r\n@Serializable\r\ndata class UserDto(\r\n    val id: String,\r\n    val username: String,\r\n    val email: String\r\n)\r\n\r\nfun UserDto.mapToUser(): User {\r\n    return User(\r\n        id = id,\r\n        name = username,\r\n        email = email\r\n    )\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/dto/UserDto.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/dto/UserDto.kt
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/dto/UserDto.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/dto/UserDto.kt	(date 1731468848259)
@@ -1,19 +1,31 @@
 package proyecto_moviles.uvg.edu.gt.data.network.dto
 
 import kotlinx.serialization.Serializable
+import proyecto_moviles.uvg.edu.gt.data.local.entity.UserEntity
 import proyecto_moviles.uvg.edu.gt.data.model.User
 
 @Serializable
 data class UserDto(
     val id: String,
     val username: String,
-    val email: String
+    val email: String,
+    val password: String
 )
 
 fun UserDto.mapToUser(): User {
     return User(
         id = id,
         name = username,
-        email = email
+        email = email,
+        password = password
+    )
+}
+
+fun UserDto.toEntity(): UserEntity {
+    return UserEntity(
+        id = id,
+        username = username,
+        email = email,
+        password = password
     )
 }
\ No newline at end of file
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/api/UserApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto_moviles.uvg.edu.gt.data.network.api\r\n\r\nimport proyecto_moviles.uvg.edu.gt.data.network.dto.UserDto\r\nimport proyecto_moviles.uvg.edu.gt.data.network.util.NetworkError\r\n\r\ninterface UserApi{\r\n    suspend fun getAllUsers(): Result<UserDto, NetworkError>\r\n    suspend fun getUserById(id: Int): Result<UserDto, NetworkError>\r\n    suspend fun createUser(user: UserDto): Result<UserDto, NetworkError>\r\n    suspend fun updateUser(id: Int, user: UserDto): Result<UserDto, NetworkError>\r\n    suspend fun deleteUser(id: Int): Result<Unit, NetworkError>\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/api/UserApi.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/api/UserApi.kt
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/api/UserApi.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/data/network/api/UserApi.kt	(date 1731884513273)
@@ -2,6 +2,7 @@
 
 import proyecto_moviles.uvg.edu.gt.data.network.dto.UserDto
 import proyecto_moviles.uvg.edu.gt.data.network.util.NetworkError
+import proyecto_moviles.uvg.edu.gt.data.network.util.Result
 
 interface UserApi{
     suspend fun getAllUsers(): Result<UserDto, NetworkError>
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto_moviles.uvg.edu.gt.Calendar\r\n\r\nimport android.widget.CalendarView\r\nimport androidx.compose.animation.*\r\nimport androidx.compose.animation.core.tween\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.automirrored.filled.ArrowBack\r\nimport androidx.compose.material.icons.automirrored.filled.List\r\nimport androidx.compose.material.icons.filled.*\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.viewinterop.AndroidView\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\nimport androidx.navigation.NavController\r\nimport proyecto_moviles.uvg.edu.gt.presentacion.mainFlow.Calendar.CalendarViewModel\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\n@Composable\r\nfun CalendarRoute(\r\n    onNavigationBack: ( ) -> Unit,\r\n    onNavigateToToDo: ( ) -> Unit,\r\n    onNavigateToProfile: ( ) -> Unit,\r\n    onNavigateToHome: ( ) -> Unit,\r\n    viewModel: CalendarViewModel = viewModel(factory = CalendarViewModel.Factory)\r\n) {\r\n    val state = viewModel.state.collectAsState()\r\n\r\n    CalendarScreen(\r\n        state = state,\r\n        onNavigationBack = onNavigationBack,\r\n        onNavigateToToDo = onNavigateToToDo,\r\n        onNavigateToProfile = onNavigateToProfile,\r\n        onNavigateToHome = onNavigateToHome\r\n    )\r\n}\r\n\r\n@OptIn(ExperimentalAnimationApi::class, ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun CalendarScreen( navController: NavController ,onNavigateToToDo: () -> Unit, onNavigateToProfile: () -> Unit, onNavigateToHome: () -> Unit) {\r\n    var selectedDate by remember { mutableStateOf(\"\") }\r\n\r\n    val formatter = SimpleDateFormat(\"EEE, MMM dd\", Locale.getDefault())\r\n\r\n    Scaffold(\r\n        topBar = {\r\n            TopAppBar(\r\n                title = { Text(\"Calendar\") },\r\n                navigationIcon = {\r\n                    IconButton(onClick = onNavigationBack) {\r\n                        Icon(Icons.AutoMirrored.Filled.ArrowBack, contentDescription = \"Back\")\r\n                    }\r\n                },\r\n                colors = TopAppBarDefaults.topAppBarColors(\r\n                    containerColor = MaterialTheme.colorScheme.primaryContainer,\r\n                    titleContentColor = MaterialTheme.colorScheme.onPrimaryContainer\r\n                )\r\n            )\r\n        },\r\n        content = { paddingValues ->\r\n            Column(\r\n                modifier = Modifier\r\n                    .fillMaxSize()\r\n                    .padding(paddingValues)\r\n                    .padding(16.dp)\r\n                    .background(MaterialTheme.colorScheme.surface)\r\n            ) {\r\n\r\n                AnimatedContent(\r\n                    targetState = selectedDate,\r\n                    transitionSpec = {\r\n                        (fadeIn(animationSpec = tween(300)) + slideInVertically()).togetherWith(\r\n                            fadeOut(animationSpec = tween(300)) + slideOutVertically()\r\n                        )\r\n                    }, label = \"\"\r\n                ) { targetDate ->\r\n                    Text(\r\n                        text = targetDate.ifEmpty { \"Mon, Aug 17\" },\r\n                        style = MaterialTheme.typography.headlineMedium,\r\n                        color = MaterialTheme.colorScheme.onSurface,\r\n                        modifier = Modifier.padding(bottom = 16.dp)\r\n                    )\r\n                }\r\n\r\n                Card(\r\n                    modifier = Modifier\r\n                        .fillMaxWidth()\r\n                        .padding(bottom = 16.dp),\r\n                    colors = CardDefaults.cardColors(\r\n                        containerColor = MaterialTheme.colorScheme.primaryContainer\r\n                    ),\r\n                    elevation = CardDefaults.cardElevation(4.dp)\r\n                ) {\r\n                    AndroidView(\r\n                        factory = { CalendarView(it).apply {\r\n                            setOnDateChangeListener { _, year, month, dayOfMonth ->\r\n                                val calendar = Calendar.getInstance()\r\n                                calendar.set(year, month, dayOfMonth)\r\n                                selectedDate = formatter.format(calendar.time)\r\n                            }\r\n                        }},\r\n                        modifier = Modifier\r\n                            .fillMaxWidth()\r\n                            .padding(8.dp)\r\n                    )\r\n                }\r\n\r\n                AnimatedVisibility(\r\n                    visible = selectedDate.isNotEmpty(),\r\n                    enter = fadeIn() + expandVertically(),\r\n                    exit = fadeOut() + shrinkVertically()\r\n                ) {\r\n                    EventList(\r\n                        events = listOf(\r\n                            \"Project 4\" to \"Task: Hello World\",\r\n                            \"Math exam\" to \"Study\"\r\n                        )\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        bottomBar = {\r\n            NavigationBar(\r\n                containerColor = MaterialTheme.colorScheme.primaryContainer,\r\n            ) {\r\n                NavigationBarItem(\r\n                    icon = {\r\n                        Icon(\r\n                            Icons.AutoMirrored.Filled.List,\r\n                            contentDescription = \"To do list\"\r\n                        )\r\n                    },\r\n                    label = { Text(\"To do list\") },\r\n                    selected = false,\r\n                    onClick = { /*TODO*/ }\r\n                )\r\n                NavigationBarItem(\r\n                    icon = { Icon(Icons.Filled.CalendarToday, contentDescription = \"Calendar\") },\r\n                    label = { Text(\"Calendar\") },\r\n                    selected = true,\r\n                    onClick = { /*TODO*/ }\r\n                )\r\n                NavigationBarItem(\r\n                    icon = { Icon(Icons.Filled.Person, contentDescription = \"Profile\") },\r\n                    label = { Text(\"Profile\") },\r\n                    selected = false,\r\n                    onClick = { /*TODO*/ }\r\n                )\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n@Composable\r\nfun EventItem(icon: androidx.compose.ui.graphics.vector.ImageVector, title: String, description: String) {\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(vertical = 8.dp),\r\n        verticalAlignment = Alignment.CenterVertically\r\n    ) {\r\n        Icon(\r\n            imageVector = icon,\r\n            contentDescription = null,\r\n            tint = MaterialTheme.colorScheme.primary,\r\n            modifier = Modifier.size(48.dp)\r\n        )\r\n        Spacer(modifier = Modifier.width(16.dp))\r\n        Column {\r\n            Text(\r\n                text = title,\r\n                style = MaterialTheme.typography.bodyLarge,\r\n                fontWeight = androidx.compose.ui.text.font.FontWeight.Bold,\r\n                color = MaterialTheme.colorScheme.onSurface\r\n            )\r\n            Text(\r\n                text = description,\r\n                style = MaterialTheme.typography.bodySmall,\r\n                color = MaterialTheme.colorScheme.onSurfaceVariant\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun EventList(events: List<Pair<String, String>>) {\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(16.dp)\r\n    ) {\r\n        events.forEach { event ->\r\n            EventItem(icon = Icons.Default.Notifications, title = event.first, description = event.second)\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderScreen.kt	(date 1731551780524)
@@ -7,7 +7,6 @@
 import androidx.compose.foundation.layout.*
 import androidx.compose.material.icons.Icons
 import androidx.compose.material.icons.automirrored.filled.ArrowBack
-import androidx.compose.material.icons.automirrored.filled.List
 import androidx.compose.material.icons.filled.*
 import androidx.compose.material3.*
 import androidx.compose.runtime.*
@@ -117,42 +116,41 @@
                 ) {
                     EventList(
                         events = listOf(
-                            "Project 4" to "Task: Hello World",
-                            "Math exam" to "Study"
+
                         )
                     )
                 }
             }
         },
-        bottomBar = {
-            NavigationBar(
-                containerColor = MaterialTheme.colorScheme.primaryContainer,
-            ) {
-                NavigationBarItem(
-                    icon = {
-                        Icon(
-                            Icons.AutoMirrored.Filled.List,
-                            contentDescription = "To do list"
-                        )
-                    },
-                    label = { Text("To do list") },
-                    selected = false,
-                    onClick = { /*TODO*/ }
-                )
-                NavigationBarItem(
-                    icon = { Icon(Icons.Filled.CalendarToday, contentDescription = "Calendar") },
-                    label = { Text("Calendar") },
-                    selected = true,
-                    onClick = { /*TODO*/ }
-                )
-                NavigationBarItem(
-                    icon = { Icon(Icons.Filled.Person, contentDescription = "Profile") },
-                    label = { Text("Profile") },
-                    selected = false,
-                    onClick = { /*TODO*/ }
-                )
-            }
-        }
+//        bottomBar = {
+//            NavigationBar(
+//                containerColor = MaterialTheme.colorScheme.primaryContainer,
+//            ) {
+//                NavigationBarItem(
+//                    icon = {
+//                        Icon(
+//                            Icons.AutoMirrored.Filled.List,
+//                            contentDescription = "To do list"
+//                        )
+//                    },
+//                    label = { Text("To do list") },
+//                    selected = false,
+//                    onClick = {  }
+//                )
+//                NavigationBarItem(
+//                    icon = { Icon(Icons.Filled.CalendarToday, contentDescription = "Calendar") },
+//                    label = { Text("Calendar") },
+//                    selected = true,
+//                    onClick = { }
+//                )
+//                NavigationBarItem(
+//                    icon = { Icon(Icons.Filled.Person, contentDescription = "Profile") },
+//                    label = { Text("Profile") },
+//                    selected = false,
+//                    onClick = {}
+//                )
+//            }
+//        }
     )
 }
 
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.jetbrains.kotlin.serialization)\r\n    id(\"kotlin-kapt\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"proyecto_moviles.uvg.edu.gt\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"proyecto_moviles.uvg.edu.gt\"\r\n        minSdk = 26\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n\r\n    kapt {\r\n        arguments {\r\n            arg(\"room.schemaLocation\", \"$projectDir/schemas\")\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    implementation(libs.androidx.appcompat) \r\n    implementation(libs.androidx.cardview) \r\n    implementation(libs.androidx.compose.material) \r\n    implementation(libs.androidx.compose.material.icons.core) \r\n    implementation(libs.androidx.compose.material.icons.extended)\r\n    implementation(libs.androidx.espresso.core)\r\n    implementation(libs.androidx.espresso.core)\r\n    implementation(libs.androidx.ui.desktop)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n    implementation(libs.androidx.compose.navigation)\r\n    implementation(libs.kotlinx.serialization.json)\r\n    implementation(libs.bundles.ktor)\r\n    implementation(libs.androidx.datastore.preferences)\r\n    implementation(libs.androidx.splashscreen)\r\n    implementation(libs.androidx.room.runtime)\r\n    kapt(libs.androidx.room.compiler)\r\n    implementation(libs.androidx.room.ktx)\r\n    implementation(libs.bundles.ktor)\r\n    implementation(libs.bundles.coil)\r\n    implementation (libs.hilt.android)\r\n    kapt (libs.dagger.hilt.compiler)\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/build.gradle.kts	(date 1731439427226)
@@ -2,6 +2,8 @@
     alias(libs.plugins.android.application)
     alias(libs.plugins.jetbrains.kotlin.android)
     alias(libs.plugins.jetbrains.kotlin.serialization)
+    alias(libs.plugins.google.services)
+    alias(libs.plugins.crashlytics)
     id("kotlin-kapt")
 }
 
@@ -93,5 +95,8 @@
     implementation(libs.bundles.coil)
     implementation (libs.hilt.android)
     kapt (libs.dagger.hilt.compiler)
+    implementation(platform(libs.firebase.bom))
+    implementation(libs.bundles.firebase.libs)
+    implementation(libs.kotlinx.coroutines.play.services)
 }
 
Index: app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package proyecto_moviles.uvg.edu.gt.presentacion.mainFlow.Calendar\r\n\r\nimport proyecto_moviles.uvg.edu.gt.data.model.Event\r\n\r\ndata class CalendarState(\r\n    val selectedDate: String = \"\",\r\n    val events: List<Event> = emptyList(),\r\n    val isLoading: Boolean = false,\r\n    val error: String? = null\r\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderState.kt b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderState.kt
--- a/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderState.kt	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/java/proyecto_moviles/uvg/edu/gt/presentacion/mainFlow/Calendar/CalanderState.kt	(date 1731884623196)
@@ -1,7 +1,5 @@
 package proyecto_moviles.uvg.edu.gt.presentacion.mainFlow.Calendar
 
-import proyecto_moviles.uvg.edu.gt.data.model.Event
-
 data class CalendarState(
     val selectedDate: String = "",
     val events: List<Event> = emptyList(),
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Proyectomoviles\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.Proyectomoviles\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/app/src/main/AndroidManifest.xml	(date 1731822579991)
@@ -25,6 +25,14 @@
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+        <service
+            android:name=".FirebaseMessaging"
+            android:exported="false"
+            >
+            <intent-filter>
+                <action android:name="com.google.firebase.MESSAGING_EVENT" />
+            </intent-filter>
+        </service>
     </application>
 
 </manifest>
\ No newline at end of file
Index: build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\n    alias(libs.plugins.android.application) apply false\r\n    alias(libs.plugins.jetbrains.kotlin.android) apply false\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle.kts b/build.gradle.kts
--- a/build.gradle.kts	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/build.gradle.kts	(date 1731457940154)
@@ -2,4 +2,6 @@
 plugins {
     alias(libs.plugins.android.application) apply false
     alias(libs.plugins.jetbrains.kotlin.android) apply false
+    alias(libs.plugins.google.services) apply false
+    alias(libs.plugins.crashlytics) apply false
 }
\ No newline at end of file
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.6.1\"\r\nhiltAndroid = \"2.50\"\r\nhiltCompiler = \"2.50\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.13.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nlifecycleRuntimeKtx = \"2.8.6\"\r\nactivityCompose = \"1.9.3\"\r\ncomposeBom = \"2024.10.00\"\r\nnavigationCompose = \"2.8.3\"\r\nkotlinSerialization = \"1.6.3\"\r\nappcompat = \"1.7.0\"\r\ncardview = \"1.0.0\"\r\ndataStore = \"1.1.1\"\r\nsplashScreen = \"1.0.1\"\r\nroom = \"2.6.1\"\r\nktor = \"2.3.12\"\r\ncoil = \"3.0.0-rc01\"\r\nuiDesktop = \"1.7.0\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\ndagger-hilt-compiler = { module = \"com.google.dagger:hilt-compiler\", version.ref = \"hiltCompiler\" }\r\nhilt-android = { module = \"com.google.dagger:hilt-android\", version.ref = \"hiltAndroid\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\nandroidx-compose-navigation = { group = \"androidx.navigation\", name = \"navigation-compose\", version.ref =\"navigationCompose\"}\r\nkotlinx-serialization-json = { group = \"org.jetbrains.kotlinx\", name = \"kotlinx-serialization-json\", version.ref = \"kotlinSerialization\" }\r\nandroidx-datastore-preferences = { group = \"androidx.datastore\", name = \"datastore-preferences\", version.ref = \"dataStore\"}\r\nandroidx-splashscreen = { group = \"androidx.core\", name = \"core-splashscreen\", version.ref = \"splashScreen\" }\r\nandroidx-room-runtime = { group = \"androidx.room\", name = \"room-runtime\", version.ref = \"room\"}\r\nandroidx-room-compiler = { group = \"androidx.room\", name = \"room-compiler\", version.ref = \"room\"}\r\nandroidx-room-ktx = { module = \"androidx.room:room-ktx\", version.ref = \"room\" }\r\nktor-client-cio = { group = \"io.ktor\", name=\"ktor-client-cio\", version.ref = \"ktor\" }\r\nktor-client-content-negotiation = { group = \"io.ktor\", name=\"ktor-client-content-negotiation\", version.ref = \"ktor\" }\r\nktor-client-core = { group = \"io.ktor\", name=\"ktor-client-core\", version.ref = \"ktor\" }\r\nktor-client-logging = { group = \"io.ktor\", name=\"ktor-client-logging\", version.ref = \"ktor\" }\r\nktor-serialization-kotlinx-json = { group = \"io.ktor\", name=\"ktor-serialization-kotlinx-json\", version.ref = \"ktor\" }\r\ncoil-compose = { group = \"io.coil-kt.coil3\", name = \"coil-compose\", version.ref = \"coil\" }\r\ncoil-network = { group = \"io.coil-kt.coil3\", name = \"coil-network-okhttp\", version.ref = \"coil\" }\r\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nandroidx-cardview = { group = \"androidx.cardview\", name = \"cardview\", version.ref = \"cardview\" }\r\nandroidx-compose-material-icons-core = { module = \"androidx.compose.material:material-icons-core\", version = \"1.7.4\" }\r\nandroidx-compose-material-icons-extended = { module = \"androidx.compose.material:material-icons-extended\", version = \"1.7.4\" }\r\nandroidx-compose-material = { module = \"androidx.compose.material:material\", version = \"1.7.4\" }\r\nandroidx-ui-desktop = { group = \"androidx.compose.ui\", name = \"ui-desktop\", version.ref = \"uiDesktop\" }\r\n\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\njetbrains-kotlin-serialization = { id = \"org.jetbrains.kotlin.plugin.serialization\", version.ref = \"kotlin\" }\r\n\r\n[bundles]\r\nktor = [\r\n    \"ktor-client-cio\",\r\n    \"ktor-client-content-negotiation\",\r\n    \"ktor-client-core\",\r\n    \"ktor-client-logging\",\r\n    \"ktor-serialization-kotlinx-json\"\r\n]\r\ncoil = [\r\n    \"coil-compose\",\r\n    \"coil-network\"\r\n]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision e0877af8ee376e21a03cecf54eb79b6ebf669507)
+++ b/gradle/libs.versions.toml	(date 1731458051746)
@@ -20,6 +20,10 @@
 ktor = "2.3.12"
 coil = "3.0.0-rc01"
 uiDesktop = "1.7.0"
+kotlinxCoroutinesPlayServices = "1.9.0"
+firebase = "33.5.1"
+google-services = "4.4.2"
+crashlytics = "3.0.2"
 
 [libraries]
 androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
@@ -58,12 +62,20 @@
 androidx-compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version = "1.7.4" }
 androidx-compose-material = { module = "androidx.compose.material:material", version = "1.7.4" }
 androidx-ui-desktop = { group = "androidx.compose.ui", name = "ui-desktop", version.ref = "uiDesktop" }
+kotlinx-coroutines-play-services = { group = "org.jetbrains.kotlinx", name="kotlinx-coroutines-play-services", version.ref = "kotlinxCoroutinesPlayServices" }
+firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebase" }
+firebase-auth = { group = "com.google.firebase", name = "firebase-auth-ktx" }
+firebase-firestore = { group = "com.google.firebase", name = "firebase-firestore-ktx" }
+firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics" }
+
 
 
 [plugins]
 android-application = { id = "com.android.application", version.ref = "agp" }
 jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
 jetbrains-kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
+google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }
+crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics"}
 
 [bundles]
 ktor = [
@@ -76,4 +88,10 @@
 coil = [
     "coil-compose",
     "coil-network"
+]
+firebase-libs = [
+    "firebase-auth",
+    "firebase-firestore",
+    "firebase-crashlytics",
+    "kotlinx-coroutines-play-services"
 ]
\ No newline at end of file
